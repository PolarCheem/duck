-- Load UI Library
local lib = loadstring(game:HttpGet("https://raw.githubusercontent.com/laagginq/ui-libraries/main/shit-lib/src.lua"))()

-- Create Main Window
local win = lib:Create("Shit Lib", "ProjectMars [V1 BETA]")

-- Configuration Table
local Config = {
    FootballSizeEnabled = false,
    FootballSize = 0,
    JumpBoostEnabled = false,
    JumpBoostAmount = 0,
    AngleEnhancerEnabled = false,
    AngleEnhancerValue = 0
}

-- Function to Update Football Size
local function updateFootballSize()
    local Workspace = game:GetService("Workspace")
    Workspace.ChildAdded:Connect(function(Child)
        if Child:IsA("BasePart") and Child.Name == "Football" then
            if Config.FootballSizeEnabled then
                Child.CanCollide = false
                Child.Size = Vector3.new(Config.FootballSize, Config.FootballSize, Config.FootballSize)
            end
        end
    end)
end

-- Function to Update Jump Boost
local function updateJumpBoost()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    humanoid.StateChanged:Connect(function(_, newState)
        if newState == Enum.HumanoidStateType.Jumping and Config.JumpBoostEnabled then
            task.wait(0.01)
            local boost = Config.JumpBoostAmount
            humanoidRootPart.Velocity = Vector3.new(
                humanoidRootPart.Velocity.X,
                humanoidRootPart.Velocity.Y + boost,
                humanoidRootPart.Velocity.Z
            )
        end
    end)
end

-- Tab for Football Size/Magnet
local footballTab = win:tab("Football Size/Magnet", true)

footballTab:toggle("Football Size Enabled", Config.FootballSizeEnabled, function(value)
    Config.FootballSizeEnabled = value
end)

footballTab:input("Football Size", "Enter size (0-15)...", true, function(value)
    local numValue = tonumber(value) or 0
    Config.FootballSize = math.clamp(numValue, 0, 15) -- Clamp to range 0-15
end)

-- Tab for Jump Boost
local jumpBoostTab = win:tab("Jump Boost", false)

jumpBoostTab:toggle("Jump Boost Enabled", Config.JumpBoostEnabled, function(value)
    Config.JumpBoostEnabled = value
end)

jumpBoostTab:input("Jump Boost Amount", "Enter boost amount (0-15)...", true, function(value)
    local numValue = tonumber(value) or 0
    Config.JumpBoostAmount = math.clamp(numValue, 0, 15) -- Clamp to range 0-15
end)

-- Tab for Angle Enhancer
local angleEnhancerTab = win:tab("Angle Enhancer", false)

angleEnhancerTab:toggle("Angle Enhancer Enabled", Config.AngleEnhancerEnabled, function(value)
    Config.AngleEnhancerEnabled = value
end)

angleEnhancerTab:input("Angle Enhancer Amount", "Enter enhancer amount (0-15)...", true, function(value)
    local numValue = tonumber(value) or 0
    Config.AngleEnhancerValue = math.clamp(numValue, 0, 15) -- Clamp to range 0-15
end)

-- Unload Button
footballTab:button("Unload", function()
    lib:Destroy() -- Unload UI
end)

-- Initialize Functions
updateFootballSize()

-- Player Character Event Handling
local Players = game:GetService("Players")
local player = Players.LocalPlayer
if player.Character then
    updateJumpBoost()
end

player.CharacterAdded:Connect(function(character)
    updateJumpBoost()
end)
