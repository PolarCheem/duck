local Library = {}

local Player = game:GetService("Players").LocalPlayer
local TS, UIS, mouse = game:GetService("TweenService"), game:GetService("UserInputService"), Player:GetMouse()

local shit = {
	togglebind = Enum.KeyCode.RightShift,
	accent = Color3.fromRGB(106,90,205)
	
}


function Library:Create(name,subname,keybind)
	if game.CoreGui:FindFirstChild(name) then
		game.CoreGui:FindFirstChild(name):Destroy()
	end

local xz = Instance.new("ScreenGui")
local Main = Instance.new("Frame")
local Title = Instance.new("TextLabel")
local SubTitle = Instance.new("TextLabel")
local TabsHolder = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local PageHolder = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local UICorner_2 = Instance.new("UICorner")

xz.Name = name
xz.Parent = game.CoreGui
xz.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Main.Name = "Main"
Main.Parent = xz
Main.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Main.BorderSizePixel = 0
Main.Position = UDim2.new(0, 192, 0, 224)
Main.Size = UDim2.new(0, 645, 0, 366)
Main.Draggable = true

Title.Name = "Title"
Title.Parent = Main
Title.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Title.BackgroundTransparency = 1.000
Title.Position = UDim2.new(0.0093, 0, 0, 0)
Title.Size = UDim2.new(0, 179, 0, 34)
Title.Font = Enum.Font.GothamBold
Title.Text = name  -- Changed from "yes" to "Title"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.TextSize = 24.000
Title.TextXAlignment = Enum.TextXAlignment.Left

SubTitle.Name = "SubTitle"
SubTitle.Parent = Main
SubTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
SubTitle.BackgroundTransparency = 1.000
SubTitle.Position = UDim2.new(0.0093, 0, 0.0929, 0)
SubTitle.Size = UDim2.new(0, 179, 0, 18)
SubTitle.Font = Enum.Font.Gotham
SubTitle.Text = subname  -- Changed from "yes" to "Subtitle"
SubTitle.TextColor3 = Color3.fromRGB(157, 157, 157)
SubTitle.TextSize = 12.000
SubTitle.TextXAlignment = Enum.TextXAlignment.Left

TabsHolder.Name = "TabsHolder"
TabsHolder.Parent = Main
TabsHolder.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TabsHolder.BackgroundTransparency = 1.000
TabsHolder.BorderSizePixel = 0
TabsHolder.Position = UDim2.new(0.0093, 0, 0.1585, 0)
TabsHolder.Size = UDim2.new(0, 179, 0, 302)

UIListLayout.Parent = TabsHolder
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 8)

PageHolder.Name = "PageHolder"
PageHolder.Parent = Main
PageHolder.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
PageHolder.BorderSizePixel = 0
PageHolder.Position = UDim2.new(0.2977, 0, 0.0191, 0)
PageHolder.Size = UDim2.new(0, 447, 0, 353)

UICorner.CornerRadius = UDim.new(0, 4)
UICorner.Parent = PageHolder

UICorner_2.CornerRadius = UDim.new(0, 4)
UICorner_2.Parent = Main

-- You can add more tabs and pages as needed by repeating the creation process above.

function dragify(Frame)
		dragToggle = nil
		local dragSpeed = 0
		dragInput = nil
		dragStart = nil
		local dragPos = nil
		function updateInput(input)
			local Delta = input.Position - dragStart
			local Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + Delta.X, startPos.Y.Scale, startPos.Y.Offset + Delta.Y)
			game:GetService("TweenService"):Create(Frame, TweenInfo.new(0.25), {Position = Position}):Play()
		end
		Frame.InputBegan:Connect(function(input)
			if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and UIS:GetFocusedTextBox() == nil then
				dragToggle = true
				dragStart = input.Position
				startPos = Frame.Position
				input.Changed:Connect(function()
					if input.UserInputState == Enum.UserInputState.End then
						dragToggle = false
					end
				end)
			end
		end)
		Frame.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
				dragInput = input
			end
		end)
		game:GetService("UserInputService").InputChanged:Connect(function(input)
			if input == dragInput and dragToggle then
				updateInput(input)
			end
		end)
	end
	
	dragify(Main)
	UIS.InputBegan:Connect(function(key,gp)
		if not gp then
			if key == Enum.KeyCode.RightShift then
				Main.Visible = not Main.Visible
			end
		end
	end)
	
local Window = {}
function Window:tab(tabname,showonstartup)

local Tab = Instance.new("TextButton")
Tab.Name = "Tab"
Tab.Parent = TabsHolder
Tab.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
Tab.BorderSizePixel = 0
Tab.Size = UDim2.new(0, 179, 0, 26)
Tab.Font = Enum.Font.Gotham
Tab.Text = tabname  -- Changed from "yes" to "Tab 1"
Tab.TextColor3 = Color3.fromRGB(255, 255, 255)
Tab.TextSize = 14.000

local UICorner_Tab = Instance.new("UICorner")
UICorner_Tab.CornerRadius = UDim.new(0, 4)
UICorner_Tab.Parent = Tab

-- Create a page
local Page = Instance.new("Frame")
Page.Name = "Page"
Page.Parent = PageHolder
Page.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
Page.BorderSizePixel = 0
Page.Size = UDim2.new(0, 447, 0, 353)

local UICorner_Page = Instance.new("UICorner")
UICorner_Page.CornerRadius = UDim.new(0, 4)
UICorner_Page.Parent = Page

-- Create the page container
local PageContainer = Instance.new("ScrollingFrame")
PageContainer.Name = "PageContainer"
PageContainer.Parent = Page
PageContainer.Active = true
PageContainer.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
PageContainer.BackgroundTransparency = 1.000
PageContainer.BorderSizePixel = 0
PageContainer.Position = UDim2.new(0.0134, 0, 0.0198, 0)
PageContainer.Size = UDim2.new(0, 435, 0, 339)
PageContainer.ScrollBarThickness = 0

local UIListLayout_Page = Instance.new("UIListLayout")
UIListLayout_Page.Parent = PageContainer
UIListLayout_Page.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout_Page.Padding = UDim.new(0, 8)
if showonstartup then
			Page.Visible = true
			Tab.TextTransparency = 0
		else
			Page.Visible = false
			Tab.TextTransparency = 0.5
		end
		
		Tab.MouseButton1Click:Connect(function()
			for i,v in pairs(PageHolder:GetChildren()) do
				if v:IsA("Frame") then
					v.Visible = false
				end
			end
			for x,z in pairs(TabsHolder:GetChildren()) do
				if z:IsA("TextButton") then
					z.TextTransparency = 0.5
				end
			end
			Page.Visible = true
			Tab.TextTransparency = 0
end)

local pageitems = {}
		
		function pageitems:label(text)
			local Label = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local LabelText = Instance.new("TextLabel")
			Label.Name = text
			Label.Parent = PageContainer
			Label.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
			Label.BorderSizePixel = 0
			Label.Size = UDim2.new(0, 435, 0, 32)
			UICorner.CornerRadius = UDim.new(0, 4)
			UICorner.Parent = Label
			LabelText.Name = "LabelText"
			LabelText.Text = tostring(text)
			LabelText.Parent = Label
			LabelText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			LabelText.BackgroundTransparency = 1.000
			LabelText.Position = UDim2.new(0.0137931034, 0, 0, 0)
			LabelText.Size = UDim2.new(0, 423, 0, 32)
			LabelText.Font = Enum.Font.Gotham
			LabelText.TextColor3 = Color3.fromRGB(255, 255, 255)
			LabelText.TextSize = 14.000
			LabelText.TextXAlignment = Enum.TextXAlignment.Left
		end
		function pageitems:button(text,callback)
			local callback = callback or function() end
			
			local Button = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local Button_2 = Instance.new("TextButton")
			Button.Name = text
			Button.Parent = PageContainer
			Button.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
			Button.BorderSizePixel = 0
			Button.Size = UDim2.new(0, 435, 0, 32)
			UICorner.CornerRadius = UDim.new(0, 4)
			UICorner.Parent = Button
			Button_2.Name = "Button"
			Button_2.Parent = Button
			Button_2.Text = text
			Button_2.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Button_2.BackgroundTransparency = 1.000
			Button_2.Position = UDim2.new(0.0140000004, 0, 0, 0)
			Button_2.Size = UDim2.new(0, 423, 0, 32)
			Button_2.Font = Enum.Font.Gotham
			Button_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			Button_2.TextSize = 14.000
			Button_2.TextXAlignment = Enum.TextXAlignment.Left
			
			Button_2.MouseButton1Click:Connect(function()
				pcall(callback)
			end)
		end
		function pageitems:toggle(text,state,callback)
			local callback = callback or function() end
			
			local toggled = state
			
			local Toggle = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local Button = Instance.new("TextButton")
			local Toggle_2 = Instance.new("ImageLabel")
			local UICorner_2 = Instance.new("UICorner")
			Toggle.Name = text
			Toggle.Parent = PageContainer
			Toggle.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
			Toggle.BorderSizePixel = 0
			Toggle.Size = UDim2.new(0, 435, 0, 32)
			UICorner.CornerRadius = UDim.new(0, 4)
			UICorner.Parent = Toggle
			Button.Name = "Button"
			Button.Parent = Toggle
			Button.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			Button.BackgroundTransparency = 1.000
			Button.Position = UDim2.new(0.0140000004, 0, 0, 0)
			Button.Size = UDim2.new(0, 423, 0, 32)
			Button.Font = Enum.Font.Gotham
			Button.Text = text
			Button.TextColor3 = Color3.fromRGB(255, 255, 255)
			Button.TextSize = 14.000
			Button.TextXAlignment = Enum.TextXAlignment.Left
			Toggle_2.Name = "Toggle"
			Toggle_2.Parent = Toggle
			Toggle_2.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
			Toggle_2.Position = UDim2.new(0.935000002, 0, 0.125, 0)
			Toggle_2.Size = UDim2.new(0, 24, 0, 24)
			Toggle_2.Image = "rbxassetid://10449228819"
			Toggle_2.ImageTransparency = 1

			UICorner_2.CornerRadius = UDim.new(0, 4)
			UICorner_2.Parent = Toggle_2
			
			if toggled == true then
				Toggle_2.ImageTransparency = 0
			elseif toggled == false then
				Toggle_2.ImageTransparency = 1
			end
			
			Button.MouseButton1Click:Connect(function()
				toggled = not toggled
				if toggled == true then
					Toggle_2.ImageTransparency = 0
				elseif toggled == false then
					Toggle_2.ImageTransparency = 1
				end
				pcall(callback, toggled)
			end)
		end
function pageitems:input(text,placeholder,clearonreturn,callback)
			local callback = callback or function() end
			
			local Input = Instance.new("Frame")
			local UICorner = Instance.new("UICorner")
			local LabelText = Instance.new("TextLabel")
			local Input_2 = Instance.new("TextBox")
			local UICorner_2 = Instance.new("UICorner")
			Input.Name = text
			Input.Parent = PageContainer
			Input.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
			Input.BorderSizePixel = 0
			Input.Size = UDim2.new(0, 435, 0, 32)
			UICorner.CornerRadius = UDim.new(0, 4)
			UICorner.Parent = Input
			LabelText.Name = "LabelText"
			LabelText.Parent = Input
			LabelText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
			LabelText.BackgroundTransparency = 1.000
			LabelText.Position = UDim2.new(0.0137931034, 0, 0, 0)
			LabelText.Size = UDim2.new(0, 290, 0, 32)
			LabelText.Font = Enum.Font.Gotham
			LabelText.Text = text
			LabelText.TextColor3 = Color3.fromRGB(255, 255, 255)
			LabelText.TextSize = 14.000
			LabelText.TextXAlignment = Enum.TextXAlignment.Left
			Input_2.Name = "Input"
			Input_2.Parent = Input
			Input_2.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
			Input_2.Position = UDim2.new(0.680459797, 0, 0.125, 0)
			Input_2.Size = UDim2.new(0, 134, 0, 24)
			Input_2.Font = Enum.Font.Gotham
			Input_2.Text = ""
			Input_2.PlaceholderText = placeholder or ""
			Input_2.ClearTextOnFocus = false
			Input_2.TextColor3 = Color3.fromRGB(255, 255, 255)
			Input_2.TextSize = 14.000
			UICorner_2.CornerRadius = UDim.new(0, 4)
			UICorner_2.Parent = Input_2
			Input_2.FocusLost:Connect(function()
				pcall(callback, tostring(Input_2.Text))
				if clearonreturn then
					Input_2.Text = ""
				end
			end)
local dropdownOptions = {}  -- Table to hold the dropdown options

-- Create a dropdown function
function pageitems:dropdown(text, options, callback)
    local Dropdown = Instance.new("Frame")
    local UICorner = Instance.new("UICorner")
    local DropdownButton = Instance.new("TextButton")
    local DropdownLabel = Instance.new("TextLabel")
    local DropdownArrow = Instance.new("TextLabel")
    local OptionsFrame = Instance.new("Frame")
    local UIListLayout = Instance.new("UIListLayout")
    
    Dropdown.Name = text
    Dropdown.Parent = PageContainer
    Dropdown.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    Dropdown.BorderSizePixel = 0
    Dropdown.Size = UDim2.new(0, 435, 0, 32)
    
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = Dropdown
    
    DropdownButton.Name = "DropdownButton"
    DropdownButton.Parent = Dropdown
    DropdownButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    DropdownButton.Size = UDim2.new(1, 0, 1, 0)
    DropdownButton.Text = ""
    
    DropdownLabel.Name = "DropdownLabel"
    DropdownLabel.Parent = DropdownButton
    DropdownLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DropdownLabel.BackgroundTransparency = 1.000
    DropdownLabel.Position = UDim2.new(0.01, 0, 0, 0)
    DropdownLabel.Size = UDim2.new(0, 400, 0, 32)
    DropdownLabel.Font = Enum.Font.Gotham
    DropdownLabel.Text = text
    DropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownLabel.TextSize = 14.000
    
    DropdownArrow.Name = "DropdownArrow"
    DropdownArrow.Parent = DropdownButton
    DropdownArrow.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    DropdownArrow.BackgroundTransparency = 1.000
    DropdownArrow.Position = UDim2.new(0.9, 0, 0.2, 0)
    DropdownArrow.Size = UDim2.new(0, 20, 0, 20)
    DropdownArrow.Font = Enum.Font.Gotham
    DropdownArrow.Text = "▼"
    DropdownArrow.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownArrow.TextSize = 20.000
    
    OptionsFrame.Name = "OptionsFrame"
    OptionsFrame.Parent = Dropdown
    OptionsFrame.Active = true
    OptionsFrame.Visible = false
    OptionsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
    OptionsFrame.BorderSizePixel = 0
    OptionsFrame.Size = UDim2.new(1, 0, 0, 0)
    OptionsFrame.Position = UDim2.new(0, 0, 1, 0)
    
    UIListLayout.Parent = OptionsFrame
    UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    UIListLayout.Padding = UDim.new(0, 4)

    -- Create dropdown options
    for _, option in ipairs(options) do
        local OptionButton = Instance.new("TextButton")
        OptionButton.Name = option
        OptionButton.Parent = OptionsFrame
        OptionButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
        OptionButton.BorderSizePixel = 0
        OptionButton.Size = UDim2.new(1, 0, 0, 32)
        OptionButton.Font = Enum.Font.Gotham
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.TextSize = 14.000
        
        OptionButton.MouseButton1Click:Connect(function()
            callback(option)
            DropdownLabel.Text = option -- Update the label with selected option
            OptionsFrame.Visible = false -- Hide options when an option is selected
        end)
    end

    -- Dropdown toggle functionality
    DropdownButton.MouseButton1Click:Connect(function()
        OptionsFrame.Visible = not OptionsFrame.Visible
        DropdownArrow.Text = OptionsFrame.Visible and "▲" or "▼" -- Change arrow direction
    end)
end

end
		return pageitems

	end

	return Window

end

return Library