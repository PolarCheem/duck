-- Exceeded decompiler timeout.
-- USED GLOBALS: script.
[003] :001:GETIMPORT      v0 = game
[004] :001:LOADK          v2 = "ReplicatedStorage"
[007] :001:CALL           v0 = v0:GetService(v2)
[009] :002:GETIMPORT      v1 = game
[010] :002:LOADK          v3 = "UserInputService"
[013] :002:CALL           v1 = v1:GetService(v3)
[015] :003:GETIMPORT      v2 = game
[016] :003:LOADK          v4 = "PathfindingService"
[019] :003:CALL           v2 = v2:GetService(v4)
[021] :004:GETIMPORT      v3 = game
[022] :004:LOADK          v5 = "Players"
[025] :004:CALL           v3 = v3:GetService(v5)
[027] :005:GETIMPORT      v4 = game
[028] :005:LOADK          v6 = "RunService"
[031] :005:CALL           v4 = v4:GetService(v6)
[033] :006:GETIMPORT      v5 = game
[034] :006:LOADK          v7 = "TweenService"
[037] :006:CALL           v5 = v5:GetService(v7)
[039] :007:GETIMPORT      v6 = game
[040] :007:LOADK          v8 = "GuiService"
[043] :007:CALL           v6 = v6:GetService(v8)
[045] :008:GETIMPORT      v7 = game
[046] :008:LOADK          v9 = "Debris"
[049] :008:CALL           v7 = v7:GetService(v9)
[051] :009:GETIMPORT      v8 = game
[052] :009:LOADK          v10 = "CollectionService"
[055] :009:CALL           v8 = v8:GetService(v10)
[057] :010:GETIMPORT      v9 = game
[058] :010:LOADK          v11 = "ReplicatedStorage"
[061] :010:CALL           v9 = v9:GetService(v11)
[063] :012:GETIMPORT      v10 = require
[065] :012:GETTABLEKS     v12 = v0.Packages
[067] :012:GETTABLEKS     v11 = v12.Knit
[068] :012:CALL           v10 = v10(v11)
[070] :013:GETIMPORT      v11 = require
[072] :013:GETTABLEKS     v13 = v0.Shared
[074] :013:GETTABLEKS     v12 = v13.Essentials
[075] :013:CALL           v11 = v11(v12)
[077] :014:GETIMPORT      v12 = require
[079] :014:GETTABLEKS     v14 = v9.Shared
[081] :014:GETTABLEKS     v13 = v14.environment
[082] :014:CALL           v12 = v12(v13)
[084] :015:GETIMPORT      v13 = require
[086] :015:GETTABLEKS     v15 = v0.Shared
[088] :015:GETTABLEKS     v14 = v15.Trove
[089] :015:CALL           v13 = v13(v14)
[091] :016:GETIMPORT      v14 = require
[093] :016:GETTABLEKS     v16 = v0.Shared
[095] :016:GETTABLEKS     v15 = v16.Popup
[096] :016:CALL           v14 = v14(v15)
[098] :017:GETIMPORT      v15 = require
[100] :017:GETTABLEKS     v17 = v0.Shared
[102] :017:GETTABLEKS     v16 = v17.AbilityUtils
[103] :017:CALL           v15 = v15(v16)
[105] :018:GETIMPORT      v16 = require
[107] :018:GETTABLEKS     v19 = v9.Shared
[109] :018:GETTABLEKS     v18 = v19.utils
[111] :018:GETTABLEKS     v17 = v18.getActiveFlowStats
[112] :018:CALL           v16 = v16(v17)
[114] :019:GETIMPORT      v17 = require
[116] :019:GETTABLEKS     v19 = v0.Shared
[118] :019:GETTABLEKS     v18 = v19.VfxManager
[119] :019:CALL           v17 = v17(v18)
[121] :020:GETIMPORT      v18 = require
[123] :020:GETTABLEKS     v20 = v0.Shared
[125] :020:GETTABLEKS     v19 = v20.Raycast
[126] :020:CALL           v18 = v18(v19)
[128] :021:GETIMPORT      v21 = game
[130] :021:GETTABLEKS     v20 = v21.Players
[132] :021:GETTABLEKS     v19 = v20.LocalPlayer
[134] :022:GETIMPORT      v20 = require
[136] :022:GETTABLEKS     v22 = v9.Shared
[138] :022:GETTABLEKS     v21 = v22.SoundManager
[139] :022:CALL           v20 = v20(v21)
[141] :023:GETIMPORT      v21 = require
[143] :023:GETTABLEKS     v24 = v9.Shared
[145] :023:GETTABLEKS     v23 = v24.utils
[147] :023:GETTABLEKS     v22 = v23.canRequestCR
[148] :023:CALL           v21 = v21(v22)
[150] :024:GETIMPORT      v22 = require
[152] :024:GETTABLEKS     v25 = v9.Shared
[154] :024:GETTABLEKS     v24 = v25.utils
[156] :024:GETTABLEKS     v23 = v24.getActiveFlowStats
[157] :024:CALL           v22 = v22(v23)
[159] :025:GETIMPORT      v23 = require
[161] :025:GETTABLEKS     v25 = v9.Shared
[163] :025:GETTABLEKS     v24 = v25.PlrStyles
[164] :025:CALL           v23 = v23(v24)
[165] :026:LOADNIL        v24 = nil
[167] :028:GETTABLEKS     v25 = v19.Character
[168] :028:JUMPIF         if not v25 then -- goto #173
[170] :028:GETTABLEKS     v25 = v19.CharacterAdded
[173] :028:CALL           v25 = v25:Wait()
[174] :029:LOADK          v28 = "Humanoid"
[177] :029:CALL           v26 = v26:WaitForChild(v28)
[178] :030:LOADK          v29 = "HumanoidRootPart"
[181] :030:CALL           v27 = v27:WaitForChild(v29)
[183] :035:GETIMPORT      v29 = workspace
[185] :035:GETTABLEKS     v28 = v29.CurrentCamera
[186] :037:LOADN          v29 = 50
[187] :038:LOADN          v30 = 1
[188] :039:LOADN          v31 = 1
[189] :040:LOADN          v32 = 0
[190] :042:LOADB          v33 = false
[191] :043:LOADB          v34 = false
[193] :045:GETIMPORT      v35 = tick
[194] :045:CALL           v35 = v35()
[196] :046:GETIMPORT      v36 = tick
[197] :046:CALL           v36 = v36()
[199] :047:GETIMPORT      v37 = tick
[200] :047:CALL           v37 = v37()
[202] :048:GETIMPORT      v38 = tick
[203] :048:CALL           v38 = v38()
[205] :050:GETTABLEKS     v39 = v10.CreateController
[206] :050:DUPTABLE       v40 = {} -- {"Name"}
[207] :051:LOADK          v41 = "BallController"
[209] :051:SETTABLEKS     v40.Name = v41
[210] :050:CALL           v39 = v39(v40)
[211] :054:DUPCLOSURE     
local function ProjectVector(p1)
-- proto pool id: 0
-- num upvalues: 0
-- num inner protos: 0
-- size instructions: 5
-- size constants: 2
-- lineinfo gap: 24
-- max stack size: 4
-- is typed: true
[001] :055:LOADK          v2 = Vector3.new(1, 0, 1)
[002] :055:MUL            v1 = p1 * v2
[004] :055:GETTABLEKS     v0 = v1.Unit
[005] :055:RETURN         return v0
end
v40 = ProjectVector
[212] :058:DUPCLOSURE     
local function ClampDirection(p2, p3, p4)
-- proto pool id: 1
-- num upvalues: 0
-- num inner protos: 0
-- size instructions: 60
-- size constants: 17
-- lineinfo gap: 24
-- max stack size: 13
-- is typed: false
[002] :059:MOVE           v1 = p4
[004] :059:GETIMPORT      v0 = math.rad
[005] :059:CALL           v0 = v0(v1)
[007] :061:GETTABLEKS     v1 = p2.Unit
[009] :062:GETTABLEKS     v2 = p3.Unit
[010] :064:MOVE           v7 = v2
[013] :064:CALL           v5 = v5:Dot(v7)
[014] :064:LOADN          v6 = -1
[015] :064:LOADN          v7 = 1
[018] :064:GETIMPORT      v4 = math.clamp
[019] :064:CALL           v4 = v4(v5, v6, v7)
[022] :064:GETIMPORT      v3 = math.acos
[023] :064:CALL           v3 = v3(v4)
[025] :066:JUMPIFNOTLE    if v3 <= v0 then -- goto #27
[026] :067:RETURN         return v2
end
[027] :070:DIV            v4 = v0 / v3
[028] :071:MOVE           v7 = v2
[031] :071:CALL           v5 = v5:Cross(v7)
[033] :073:GETTABLEKS     v6 = v5.Magnitude
[035] :073:JUMPXEQKN      if v6 == 0 then -- goto #50
[036] :074:LOADK          v8 = Vector3.new(1, 0, 0)
[039] :074:CALL           v6 = v6:Cross(v8)
[040] :074:MOVE           v5 = v6
[042] :075:GETTABLEKS     v6 = v5.Magnitude
[044] :075:JUMPXEQKN      if v6 == 0 then -- goto #50
[045] :076:LOADK          v8 = Vector3.new(0, 1, 0)
[048] :076:CALL           v6 = v6:Cross(v8)
[049] :076:MOVE           v5 = v6
end
end
[051] :079:GETTABLEKS     v5 = v5.Unit
[053] :081:GETIMPORT      v7 = CFrame.fromAxisAngle
[054] :081:MOVE           v8 = v5
[055] :081:MOVE           v9 = v0
[056] :081:CALL           v7 = v7(v8, v9)
[057] :081:MUL            v6 = v7 * v1
[059] :082:GETTABLEKS     v7 = v6.Unit
[060] :082:RETURN         return v7
end
v41 = ClampDirection
[213] :086:DUPCLOSURE     
local function quadraticSolver(p5, p6, p7)
-- proto pool id: 2
-- num upvalues: 0
-- num inner protos: 0
-- size instructions: 34
-- size constants: 3
-- lineinfo gap: 24
-- max stack size: 13
-- is typed: false
[001] :087:MINUS          v2 = -p6
[002] :087:MUL            v5 = p6 * p6
[003] :087:LOADN          v8 = 4
[004] :087:MUL            v7 = v8 * p5
[005] :087:MUL            v6 = v7 * p7
[006] :087:SUB            v4 = v5 - v6
[009] :087:GETIMPORT      v3 = math.sqrt
[010] :087:CALL           v3 = v3(v4)
[011] :087:ADD            v1 = v2 + v3
[012] :087:LOADN          v3 = 2
[013] :087:MUL            v2 = v3 * p5
[014] :087:DIV            v0 = v1 / v2
[015] :088:MINUS          v3 = -p6
[016] :088:MUL            v6 = p6 * p6
[017] :088:LOADN          v9 = 4
[018] :088:MUL            v8 = v9 * p5
[019] :088:MUL            v7 = v8 * p7
[020] :088:SUB            v5 = v6 - v7
[023] :088:GETIMPORT      v4 = math.sqrt
[024] :088:CALL           v4 = v4(v5)
[025] :088:SUB            v2 = v3 - v4
[026] :088:LOADN          v4 = 2
[027] :088:MUL            v3 = v4 * p5
[028] :088:DIV            v1 = v2 / v3
[030] :090:JUMPIFNOTLT    if v0 < v1 then -- goto #33
[031] :090:MOVE           v2 = v1
[032] :090:RETURN         return v2
end
[033] :090:MOVE           v2 = v0
[034] :090:RETURN         return v2
end
v42 = quadraticSolver
[214] :093:DUPCLOSURE     
local function findLandingPosition(p8: Vector3, p9: Vector3)
-- proto pool id: 3
-- num upvalues: 0
-- num inner protos: 0
-- size instructions: 85
-- size constants: 19
-- lineinfo gap: 24
-- max stack size: 18
-- is typed: true
[002] :094:GETIMPORT      v0 = workspace
[003] :094:LOADK          v2 = "Football"
[006] :094:CALL           v0 = v0:FindFirstChild(v2)
[007] :095:LOADN          v1 = 0
[008] :096:JUMPIFNOT      if v0 then -- goto #19
[010] :097:GETIMPORT      v5 = workspace
[012] :097:GETTABLEKS     v4 = v5.Gravity
[013] :097:SUBK           v3 = v4 - 60
[015] :097:GETTABLEKS     v5 = v0.Mass
[016] :097:DIVK           v4 = v5 / 20
[017] :097:SUB            v2 = v3 - v4
[018] :097:MINUS          v1 = -v2
end
[019] :097:JUMP           -- jump to #25
[021] :099:GETIMPORT      v4 = workspace
[023] :099:GETTABLEKS     v3 = v4.Gravity
[024] :099:SUBK           v2 = v3 - 75
[025] :099:MINUS          v1 = -v2
[026] :101:MULK           v3 = v1 * 0.5
[028] :101:GETTABLEKS     v4 = p8.Y
[030] :101:GETTABLEKS     v5 = p9.Y
[031] :087:MINUS          v8 = -v4
[032] :087:MUL            v11 = v4 * v4
[033] :087:LOADN          v14 = 4
[034] :087:MUL            v13 = v14 * v3
[035] :087:MUL            v12 = v13 * v5
[036] :087:SUB            v10 = v11 - v12
[039] :087:GETIMPORT      v9 = math.sqrt
[040] :087:CALL           v9 = v9(v10)
[041] :087:ADD            v7 = v8 + v9
[042] :087:LOADN          v9 = 2
[043] :087:MUL            v8 = v9 * v3
[044] :087:DIV            v6 = v7 / v8
[045] :088:MINUS          v9 = -v4
[046] :088:MUL            v12 = v4 * v4
[047] :088:LOADN          v15 = 4
[048] :088:MUL            v14 = v15 * v3
[049] :088:MUL            v13 = v14 * v5
[050] :088:SUB            v11 = v12 - v13
[053] :088:GETIMPORT      v10 = math.sqrt
[054] :088:CALL           v10 = v10(v11)
[055] :088:SUB            v8 = v9 - v10
[056] :088:LOADN          v10 = 2
[057] :088:MUL            v9 = v10 * v3
[058] :088:DIV            v7 = v8 / v9
[060] :090:JUMPIFNOTLT    if v6 < v7 then -- goto #63
[061] :090:MOVE           v2 = v7
[062] :090:JUMP           -- jump to #63
end
[063] :090:MOVE           v2 = v6
[065] :103:GETTABLEKS     v4 = p8.x
[066] :103:LOADN          v5 = 0
[068] :103:GETTABLEKS     v6 = p8.Z
[071] :103:GETIMPORT      v3 = Vector3.new
[072] :103:CALL           v3 = v3(v4, v5, v6)
[073] :104:MUL            v4 = v3 * v2
[074] :105:ADD            v6 = p9 + v4
[075] :105:LOADN          v8 = 0
[077] :105:GETTABLEKS     v10 = p9.Y
[078] :105:MINUS          v9 = -v10
[079] :105:LOADN          v10 = 0
[082] :105:GETIMPORT      v7 = Vector3.new
[083] :105:CALL           v7 = v7(v8, v9, v10)
[084] :105:ADD            v5 = v6 + v7
[085] :105:RETURN         return v5
end
v43 = findLandingPosition
[215] :108:DUPCLOSURE     
local function BallFollowPlayer(p10: table, p11: any, p12: any, p13: number)
-- proto pool id: 6
-- num upvalues: 3
-- num inner protos: 2
-- size instructions: 61
-- size constants: 17
-- lineinfo gap: 24
-- max stack size: 14
-- is typed: true
[001] :109:GETUPVAL       v2 = u_v19
[003] :109:GETTABLEKS     v1 = v2.Character
[005] :109:GETTABLEKS     v0 = v1.HumanoidRootPart
[007] :110:GETTABLEKS     v1 = p12.HumanoidRootPart
[009] :111:GETTABLEKS     v3 = v1.AssemblyLinearVelocity
[010] :111:LOADK          v4 = Vector3.new(1, 0, 1)
[011] :111:MUL            v2 = v3 * v4
[013] :112:GETTABLEKS     v7 = v1.Position
[014] :112:ADD            v6 = v7 + v2
[016] :112:GETTABLEKS     v7 = v0.Position
[017] :112:SUB            v5 = v6 - v7
[019] :112:GETTABLEKS     v4 = v5.Unit
[020] :112:LOADK          v5 = Vector3.new(0, 0.5, 0)
[021] :112:ADD            v3 = v4 + v5
[023] :114:GETTABLEKS     v8 = v1.Position
[025] :114:GETTABLEKS     v9 = v0.Position
[026] :114:SUB            v7 = v8 - v9
[028] :114:GETTABLEKS     v6 = v7.Magnitude
[029] :114:MULK           v5 = v6 * 1.5
[030] :115:LOADN          v6 = 0
[031] :115:LOADN          v7 = 150
[034] :113:GETIMPORT      v4 = math.clamp
[035] :113:CALL           v4 = v4(v5, v6, v7)
[037] :118:GETIMPORT      v5 = time
[038] :118:CALL           v5 = v5()
[039] :119:NEWCLOSURE     
local function finish()
-- proto pool id: 4
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 26
-- size constants: 9
-- lineinfo gap: 24
-- max stack size: 3
-- is typed: false
[001] :120:GETUPVAL       v1 = u_v0
[003] :120:GETTABLEKS     v0 = v1.BallTargeting
[006] :120:CALL           v0:Disconnect()
[007] :121:GETUPVAL       v1 = u_v1
[009] :121:GETTABLEKS     v0 = v1.Parent
[010] :121:JUMPIFNOT      if v0 then -- goto #21
[011] :121:GETUPVAL       v2 = u_v1
[013] :121:GETTABLEKS     v1 = v2.OnPlayer
[015] :121:GETTABLEKS     v0 = v1.Value
[016] :121:JUMPIF         if not v0 then -- goto #21
[017] :122:GETUPVAL       v0 = u_v39
[018] :122:GETUPVAL       v2 = u_v1
[021] :122:CALL           v0:DragBall(v2)
[023] :124:GETIMPORT      v0 = print
[024] :124:LOADK          v1 = "ended."
[025] :124:CALL           v0(v1)
[026] :125:RETURN         return
end
v6 = finish
[043] :126:GETUPVAL       v8 = u_v4
[045] :126:GETTABLEKS     v7 = v8.Heartbeat
[046] :126:NEWCLOSURE     v9 = function(p14)
-- proto pool id: 5
-- num upvalues: 8
-- num inner protos: 0
-- size instructions: 121
-- size constants: 22
-- lineinfo gap: 24
-- max stack size: 11
-- is typed: true
[002] :127:GETIMPORT      v0 = time
[003] :127:CALL           v0 = v0()
[004] :127:GETUPVAL       v2 = u_v9
[005] :127:GETUPVAL       v3 = u_v3
[006] :127:ADD            v1 = v2 + v3
[008] :127:JUMPIFLT       if v1 > v0 then -- goto #17
[009] :127:GETUPVAL       v0 = u_v1
[010] :127:JUMPIFNOT      if v0 then -- goto #16
[011] :127:GETUPVAL       v2 = u_v1
[013] :127:GETTABLEKS     v1 = v2.OnPlayer
[015] :127:GETTABLEKS     v0 = v1.Value
end
[016] :127:JUMPIFNOT      if v0 then -- goto #19
end
[017] :128:GETUPVAL       v0 = u_v10
[018] :128:CALL           ... = v0()
end
[019] :128:RETURN         return v0, ...
[020] :131:GETUPVAL       v2 = u_v5
[022] :131:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[023] :131:LOADK          v2 = Vector3.new(1, 0, 1)
[024] :131:MUL            v0 = v1 * v2
[026] :132:GETIMPORT      v2 = time
[027] :132:CALL           v2 = v2()
[028] :132:GETUPVAL       v4 = u_v9
[029] :132:ADDK           v3 = v4 + 0.75
[031] :132:JUMPIFLT       if v3 > v2 then -- goto #33
[032] :132:LOADB          v1 = false +1
end
[033] :132:LOADB          v1 = true
[034] :134:GETUPVAL       v2 = u_v7
[035] :135:GETUPVAL       v8 = u_v5
[037] :135:GETTABLEKS     v7 = v8.Position
[038] :135:GETUPVAL       v9 = u_v1
[040] :135:GETTABLEKS     v8 = v9.Position
[041] :135:SUB            v6 = v7 - v8
[043] :135:GETTABLEKS     v5 = v6.Unit
[044] :135:LOADN          v7 = 0
[045] :135:JUMPIFNOT      if v1 then -- goto #47
[046] :135:LOADK          v8 = 0.15
end
[047] :135:JUMP           -- jump to #48
[048] :135:LOADK          v8 = 0.35
[049] :135:LOADN          v9 = 0
[052] :135:GETIMPORT      v6 = Vector3.new
[053] :135:CALL           v6 = v6(v7, v8, v9)
[054] :135:ADD            v4 = v5 + v6
[055] :136:LOADN          v6 = 6
[056] :136:MUL            v5 = v6 * p14
[059] :134:CALL           v2 = v2:Lerp(v4, v5)
[060] :134:SETUPVAL       u_v7 = v2
[061] :140:GETUPVAL       v7 = u_v5
[063] :140:GETTABLEKS     v6 = v7.Position
[064] :140:GETUPVAL       v8 = u_v4
[066] :140:GETTABLEKS     v7 = v8.Position
[067] :140:SUB            v5 = v6 - v7
[069] :140:GETTABLEKS     v4 = v5.Magnitude
[070] :140:MULK           v3 = v4 * 2.45
[071] :141:LOADN          v4 = 0
[072] :141:LOADN          v5 = 140
[075] :139:GETIMPORT      v2 = math.clamp
[076] :139:CALL           v2 = v2(v3, v4, v5)
[077] :139:SETUPVAL       u_v8 = v2
[078] :144:GETUPVAL       v5 = u_v1
[080] :144:GETTABLEKS     v4 = v5.Position
[082] :144:GETTABLEKS     v3 = v4.Y
[083] :144:LOADN          v4 = 5
[085] :144:JUMPIFLT       if v3 > v4 then -- goto #87
[086] :144:LOADB          v2 = false +1
end
[087] :144:LOADB          v2 = true
[088] :145:GETUPVAL       v7 = u_v5
[090] :145:GETTABLEKS     v6 = v7.Position
[091] :145:GETUPVAL       v8 = u_v1
[093] :145:GETTABLEKS     v7 = v8.Position
[094] :145:SUB            v5 = v6 - v7
[096] :145:GETTABLEKS     v4 = v5.Magnitude
[097] :145:LOADN          v5 = 7
[099] :145:JUMPIFLE       if v4 => v5 then -- goto #101
[100] :145:LOADB          v3 = false +1
end
[101] :145:LOADB          v3 = true
[102] :146:JUMPIF         if not v2 then -- goto #103
end
[103] :146:JUMPIFNOT      if v3 then -- goto #106
[104] :147:GETUPVAL       v4 = u_v10
[105] :147:CALL           ... = v4()
end
[106] :147:RETURN         return v4, ...
[107] :150:GETUPVAL       v4 = u_v1
[108] :150:GETUPVAL       v6 = u_v1
[110] :150:GETTABLEKS     v5 = v6.AssemblyLinearVelocity
[111] :150:GETUPVAL       v8 = u_v7
[112] :150:GETUPVAL       v9 = u_v8
[113] :150:MUL            v7 = v8 * v9
[114] :150:LOADK          v9 = 6.5
[115] :150:MUL            v8 = v9 * p14
[118] :150:CALL           v5 = v5:Lerp(v7, v8)
[120] :150:SETTABLEKS     v4.AssemblyLinearVelocity = v5
[121] :151:RETURN         return
end
[057] :126:CALL           v7 = v7:Connect(v9)
[059] :126:SETTABLEKS     p11.BallTargeting = v7
[061] :152:RETURN         return
end
v44 = BallFollowPlayer
[220] :108:SETTABLEKS     v39.BallFollowPlayer = v44
[222] :154:GETIMPORT      v44 = tick
[223] :154:CALL           v44 = v44()
[224] :155:NEWCLOSURE     
local function Shoot(p15)
-- proto pool id: 13
-- num upvalues: 16
-- num inner protos: 3
-- size instructions: 363
-- size constants: 80
-- lineinfo gap: 24
-- max stack size: 13
-- is typed: false
[001] :156:GETUPVAL       v1 = u_v27
[003] :156:GETTABLEKS     v0 = v1.AssemblyRootPart
[004] :156:GETUPVAL       v1 = u_v27
[006] :156:JUMPIFEQ       if v0 == v1 then -- goto #8
[007] :156:RETURN         return
end
[008] :157:GETUPVAL       v0 = u_v44
[010] :157:GETIMPORT      v1 = tick
[011] :157:CALL           v1 = v1()
[013] :157:JUMPIFNOTLT    if v1 < v0 then -- goto #15
[014] :157:RETURN         return
end
[016] :158:GETTABLEKS     v0 = p15.ShootTrove
[017] :158:JUMPIFNOT      if v0 then -- goto #22
[019] :158:GETTABLEKS     v0 = p15.ShootTrove
[022] :158:CALL           v0:Destroy()
[024] :159:GETIMPORT      v1 = tick
[025] :159:CALL           v1 = v1()
[026] :159:ADDK           v0 = v1 + 1
[027] :159:SETUPVAL       u_v44 = v0
[029] :161:GETTABLEKS     v1 = p15.StatesController
[031] :161:GETTABLEKS     v0 = v1.States
[032] :161:LOADN          v1 = 0
[034] :161:SETTABLEKS     v0.TimeSpentRunning = v1
[035] :163:LOADB          v0 = true
[037] :163:SETTABLEKS     p15.HoldingShoot = v0
[038] :165:GETUPVAL       v3 = u_v25
[040] :165:GETTABLEKS     v2 = v3.Values
[042] :165:GETTABLEKS     v1 = v2.HasBall
[044] :165:GETTABLEKS     v0 = v1.Value
[046] :167:GETTABLEKS     v1 = p15.Animations
[049] :167:CALL           v1:StopAnims()
[051] :169:GETTABLEKS     v3 = p15.Animations
[053] :169:GETTABLEKS     v2 = v3.Shots
[055] :169:GETTABLEKS     v1 = v2.Shoot
[056] :169:LOADN          v3 = 1
[059] :169:CALL           v1:AdjustSpeed(v3)
[060] :171:GETUPVAL       v4 = u_v25
[062] :171:GETTABLEKS     v3 = v4.Values
[064] :171:GETTABLEKS     v2 = v3.Goalie
[066] :171:GETTABLEKS     v1 = v2.Value
[067] :171:JUMPIFNOT      if v1 then -- goto #134
[068] :171:GETUPVAL       v4 = u_v25
[070] :171:GETTABLEKS     v3 = v4.Values
[072] :171:GETTABLEKS     v2 = v3.IsInPenalty
[074] :171:GETTABLEKS     v1 = v2.Value
[075] :171:JUMPIFNOT      if v1 then -- goto #134
[077] :172:GETTABLEKS     v3 = p15.Animations
[079] :172:GETTABLEKS     v2 = v3.Movement
[081] :172:GETTABLEKS     v1 = v2.ThrowBall
[083] :172:GETIMPORT      v2 = Enum.AnimationPriority.Action3
[085] :172:SETTABLEKS     v1.Priority = v2
[087] :173:GETTABLEKS     v3 = p15.Animations
[089] :173:GETTABLEKS     v2 = v3.Movement
[091] :173:GETTABLEKS     v1 = v2.ThrowBall
[094] :173:CALL           v1:Play()
[096] :174:GETTABLEKS     v3 = p15.Animations
[098] :174:GETTABLEKS     v2 = v3.Movement
[100] :174:GETTABLEKS     v1 = v2.ThrowBall
[101] :174:LOADK          v3 = 1.35
[104] :174:CALL           v1:AdjustSpeed(v3)
[106] :176:GETTABLEKS     v3 = p15.Animations
[108] :176:GETTABLEKS     v2 = v3.Ball
[110] :176:GETTABLEKS     v1 = v2.ThrowBall
[112] :176:GETIMPORT      v2 = Enum.AnimationPriority.Action3
[114] :176:SETTABLEKS     v1.Priority = v2
[116] :177:GETTABLEKS     v3 = p15.Animations
[118] :177:GETTABLEKS     v2 = v3.Ball
[120] :177:GETTABLEKS     v1 = v2.ThrowBall
[123] :177:CALL           v1:Play()
[125] :178:GETTABLEKS     v3 = p15.Animations
[127] :178:GETTABLEKS     v2 = v3.Ball
[129] :178:GETTABLEKS     v1 = v2.ThrowBall
[130] :178:LOADK          v3 = 1.35
[133] :178:CALL           v1:AdjustSpeed(v3)
end
end
[134] :178:JUMP           -- jump to #163
[136] :180:GETTABLEKS     v3 = p15.Animations
[138] :180:GETTABLEKS     v2 = v3.Shots
[140] :180:GETTABLEKS     v1 = v2.Shoot
[142] :180:GETIMPORT      v2 = Enum.AnimationPriority.Action3
[144] :180:SETTABLEKS     v1.Priority = v2
[146] :181:GETTABLEKS     v3 = p15.Animations
[148] :181:GETTABLEKS     v2 = v3.Shots
[150] :181:GETTABLEKS     v1 = v2.Shoot
[153] :181:CALL           v1:Play()
[155] :182:GETTABLEKS     v3 = p15.Animations
[157] :182:GETTABLEKS     v2 = v3.Shots
[159] :182:GETTABLEKS     v1 = v2.Shoot
[160] :182:LOADN          v3 = 1
[163] :182:CALL           v1:AdjustSpeed(v3)
[164] :185:GETUPVAL       v3 = u_v19
[166] :185:GETTABLEKS     v2 = v3.PlayerGui
[168] :185:GETTABLEKS     v1 = v2.ForceBar
[169] :185:LOADB          v2 = true
[171] :185:SETTABLEKS     v1.Enabled = v2
[172] :187:GETUPVAL       v1 = u_v5
[173] :187:GETUPVAL       v3 = u_v26
[175] :187:GETIMPORT      v4 = TweenInfo.new
[176] :187:LOADK          v5 = 0.25
[178] :187:GETIMPORT      v6 = Enum.EasingStyle.Sine
[180] :187:GETIMPORT      v7 = Enum.EasingDirection.Out
[181] :187:CALL           v4 = v4(v5, v6, v7)
[182] :188:DUPTABLE       v5 = {} -- {"CameraOffset"}
[183] :188:LOADK          v6 = Vector3.new(1.25, 1.5, 0)
[185] :188:SETTABLEKS     v5.CameraOffset = v6
[188] :187:CALL           v1 = v1:Create(v3, v4, v5)
[191] :190:CALL           v2:Play()
[192] :191:GETUPVAL       v2 = u_v7
[193] :191:MOVE           v4 = v1
[194] :191:LOADK          v5 = 0.25
[197] :191:CALL           v2:AddItem(v4, v5)
[198] :193:GETUPVAL       v2 = u_v25
[201] :193:CALL           v2 = v2:GetDescendants()
[203] :195:GETIMPORT      v3 = pairs
[204] :195:MOVE           v4 = v2
[205] :195:CALL           v3, v4, v5 = v3(v4)
[206] :195:FORGPREP_NEXT  for v6, v7 in pairs(v4) do -- could be doing next, t
[208] :196:GETTABLEKS     v8 = v7.Name
[210] :196:JUMPXEQKS      if v8 ~= "Football" then -- goto #298
[212] :196:GETTABLEKS     v8 = v7.Name
[214] :196:JUMPXEQKS      if v8 ~= "TrajectoryLine" then -- goto #298
[216] :196:GETTABLEKS     v8 = v7.Name
[218] :196:JUMPXEQKS      if v8 ~= "DiveHitbox" then -- goto #298
[220] :196:GETTABLEKS     v8 = v7.Name
[222] :196:JUMPXEQKS      if v8 ~= "GHitbox" then -- goto #298
[224] :196:GETTABLEKS     v8 = v7.Name
[226] :196:JUMPXEQKS      if v8 ~= "Activate" then -- goto #298
[227] :196:GETUPVAL       v10 = u_v0
[229] :196:GETTABLEKS     v9 = v10.Assets
[231] :196:GETTABLEKS     v8 = v9.Vfx
[233] :196:GETTABLEKS     v10 = v7.Name
[236] :196:CALL           v8 = v8:FindFirstChild(v10)
[238] :196:JUMPXEQKNIL    if v8 == nil then -- goto #298
[240] :196:GETTABLEKS     v8 = v7.Name
[241] :196:LOADK          v10 = "ball"
[244] :196:CALL           v8 = v8:match(v10)
[246] :196:JUMPXEQKB      if v8 == false then -- goto #298
[248] :196:GETTABLEKS     v8 = v7.Name
[250] :196:JUMPXEQKS      if v8 ~= "Hitbox" then -- goto #298
[252] :196:GETTABLEKS     v9 = v7.Parent
[254] :196:GETTABLEKS     v8 = v9.Name
[256] :196:JUMPXEQKS      if v8 ~= "Football" then -- goto #298
[257] :196:LOADK          v10 = "BasePart"
[260] :196:CALL           v8 = v8:IsA(v10)
[261] :196:JUMPIFNOT      if v8 then -- goto #297
[263] :196:GETTABLEKS     v8 = v7.Name
[265] :196:JUMPXEQKS      if v8 ~= "HumanoidRootPart" then -- goto #298
[267] :196:GETTABLEKS     v8 = v7.Parent
[268] :196:GETUPVAL       v9 = u_v25
[270] :196:JUMPIFEQ       if v8 == v9 then -- goto #281
[272] :196:GETTABLEKS     v9 = v7.Parent
[274] :196:GETTABLEKS     v8 = v9.Name
[276] :196:JUMPXEQKS      if v8 ~= "Handle" then -- goto #281
[278] :196:GETTABLEKS     v8 = v7.Name
[280] :196:JUMPXEQKS      if v8 == "Handle" then -- goto #298
end
end
[282] :196:GETTABLEKS     v8 = v7.Name
[284] :196:JUMPXEQKS      if v8 ~= "VFXPart" then -- goto #298
[285] :196:LOADK          v10 = "VFXPart"
[288] :196:CALL           v8 = v8:HasTag(v10)
[289] :196:JUMPIF         if not v8 then -- goto #297
[290] :197:LOADK          v10 = "Invis"
[293] :197:CALL           v8 = v8:GetAttribute(v10)
[294] :197:JUMPIF         if not v8 then -- goto #297
[295] :198:LOADK          v8 = 0.45
[297] :198:SETTABLEKS     v7.Transparency = v8
end
end
end
end
end
end
end
end
end
end
end
end
[299] :195:FORGLOOP       end -- iterate + jump to #207
[300] :202:NEWCLOSURE     
local function finish(p16)
-- proto pool id: 10
-- num upvalues: 14
-- num inner protos: 3
-- size instructions: 237
-- size constants: 57
-- lineinfo gap: 24
-- max stack size: 11
-- is typed: false
[002] :203:GETIMPORT      v1 = tick
[003] :203:CALL           v1 = v1()
[004] :203:ADDK           v0 = v1 + 0.4
[005] :203:SETUPVAL       u_v44 = v0
[006] :204:GETUPVAL       v0 = u_v5
[007] :204:GETUPVAL       v2 = u_v26
[009] :204:GETIMPORT      v3 = TweenInfo.new
[010] :204:LOADK          v4 = 0.25
[012] :204:GETIMPORT      v5 = Enum.EasingStyle.Sine
[014] :204:GETIMPORT      v6 = Enum.EasingDirection.Out
[015] :204:CALL           v3 = v3(v4, v5, v6)
[016] :205:DUPTABLE       v4 = {} -- {"CameraOffset"}
[017] :205:LOADK          v5 = Vector3.new(0, 0, 0)
[019] :205:SETTABLEKS     v4.CameraOffset = v5
[022] :204:CALL           v0 = v0:Create(v2, v3, v4)
[025] :207:CALL           v1:Play()
[026] :208:GETUPVAL       v1 = u_v7
[027] :208:MOVE           v3 = v0
[028] :208:LOADK          v4 = 0.25
[031] :208:CALL           v1:AddItem(v3, v4)
[032] :210:GETUPVAL       v3 = u_v19
[034] :210:GETTABLEKS     v2 = v3.PlayerGui
[036] :210:GETTABLEKS     v1 = v2.ForceBar
[037] :210:LOADB          v2 = false
[039] :210:SETTABLEKS     v1.Enabled = v2
[040] :211:GETUPVAL       v4 = u_v0
[042] :211:GETTABLEKS     v3 = v4.Animations
[044] :211:GETTABLEKS     v2 = v3.Shots
[046] :211:GETTABLEKS     v1 = v2.Shoot
[047] :211:LOADN          v3 = 1
[050] :211:CALL           v1:AdjustSpeed(v3)
[051] :212:GETUPVAL       v4 = u_v0
[053] :212:GETTABLEKS     v3 = v4.Animations
[055] :212:GETTABLEKS     v2 = v3.Movement
[057] :212:GETTABLEKS     v1 = v2.ThrowBall
[058] :212:LOADN          v3 = 1
[061] :212:CALL           v1:AdjustSpeed(v3)
[062] :213:GETUPVAL       v4 = u_v0
[064] :213:GETTABLEKS     v3 = v4.Animations
[066] :213:GETTABLEKS     v2 = v3.Ball
[068] :213:GETTABLEKS     v1 = v2.ThrowBall
[069] :213:LOADN          v3 = 1
[072] :213:CALL           v1:AdjustSpeed(v3)
[073] :215:GETUPVAL       v1 = u_v0
[074] :215:LOADB          v2 = false
[076] :215:SETTABLEKS     v1.HoldingShoot = v2
[077] :216:GETUPVAL       v2 = u_v0
[079] :216:GETTABLEKS     v1 = v2.ShootTrove
[082] :216:CALL           v1:Destroy()
[083] :218:GETUPVAL       v4 = u_v25
[085] :218:GETTABLEKS     v3 = v4.Values
[087] :218:GETTABLEKS     v2 = v3.HasBall
[089] :218:GETTABLEKS     v1 = v2.Value
[090] :218:JUMPIFNOT      if v1 then -- goto #225
[091] :218:JUMPIF         if not p16 then -- goto #225
[092] :219:GETUPVAL       v4 = u_v25
[094] :219:GETTABLEKS     v3 = v4.Values
[096] :219:GETTABLEKS     v2 = v3.Goalie
[098] :219:GETTABLEKS     v1 = v2.Value
[099] :219:JUMPIFNOT      if v1 then -- goto #117
[100] :219:GETUPVAL       v4 = u_v25
[102] :219:GETTABLEKS     v3 = v4.Values
[104] :219:GETTABLEKS     v2 = v3.IsInPenalty
[106] :219:GETTABLEKS     v1 = v2.Value
[107] :219:JUMPIFNOT      if v1 then -- goto #117
[108] :220:GETUPVAL       v1 = u_v29
[110] :221:GETIMPORT      v2 = task.delay
[111] :221:LOADK          v3 = 0.2
[112] :221:NEWCLOSURE     v4 = function()
-- proto pool id: 7
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 23
-- size constants: 7
-- lineinfo gap: 24
-- max stack size: 8
-- is typed: false
[001] :222:GETUPVAL       v2 = u_v0
[003] :222:GETTABLEKS     v1 = v2.Camera
[005] :222:GETTABLEKS     v0 = v1.Cutscene
[006] :222:JUMPIF         if not v0 then -- goto #22
[007] :223:GETUPVAL       v2 = u_v0
[009] :223:GETTABLEKS     v1 = v2.BallService
[011] :223:GETTABLEKS     v0 = v1.Shoot
[012] :223:GETUPVAL       v2 = u_v2
[013] :223:LOADNIL        v3 = nil
[014] :223:LOADNIL        v4 = nil
[015] :223:GETUPVAL       v7 = u_v28
[017] :223:GETTABLEKS     v6 = v7.CFrame
[019] :223:GETTABLEKS     v5 = v6.LookVector
[022] :223:CALL           v0:Fire(v2, v3, v4, v5)
[023] :225:RETURN         return
end
[116] :221:CALL           v2(v3, v4)
end
end
[117] :221:JUMP           -- jump to #225
[118] :227:GETUPVAL       v1 = u_v33
[119] :227:JUMPIFNOT      if v1 then -- goto #120
end
[120] :228:RETURN         return
[121] :230:GETUPVAL       v1 = u_v29
[122] :232:GETUPVAL       v2 = u_v1
[124] :232:JUMPXEQKB      if v2 == false then -- goto #204
[125] :233:GETUPVAL       v3 = u_v0
[127] :233:GETTABLEKS     v2 = v3.Animations
[130] :233:CALL           v2:StopAnims()
[131] :234:GETUPVAL       v5 = u_v0
[133] :234:GETTABLEKS     v4 = v5.Animations
[135] :234:GETTABLEKS     v3 = v4.Shots
[137] :234:GETTABLEKS     v2 = v3.Volley
[139] :234:GETIMPORT      v3 = Enum.AnimationPriority.Action3
[141] :234:SETTABLEKS     v2.Priority = v3
[142] :235:GETUPVAL       v5 = u_v0
[144] :235:GETTABLEKS     v4 = v5.Animations
[146] :235:GETTABLEKS     v3 = v4.Shots
[148] :235:GETTABLEKS     v2 = v3.Volley
[151] :235:CALL           v2:Play()
[152] :236:GETUPVAL       v5 = u_v0
[154] :236:GETTABLEKS     v4 = v5.Animations
[156] :236:GETTABLEKS     v3 = v4.Shots
[158] :236:GETTABLEKS     v2 = v3.Volley
[159] :236:LOADK          v4 = 1.15
[162] :236:CALL           v2:AdjustSpeed(v4)
[163] :238:GETUPVAL       v5 = u_v0
[165] :238:GETTABLEKS     v4 = v5.Animations
[167] :238:GETTABLEKS     v3 = v4.Ball
[169] :238:GETTABLEKS     v2 = v3.Volley
[171] :238:GETIMPORT      v3 = Enum.AnimationPriority.Action3
[173] :238:SETTABLEKS     v2.Priority = v3
[174] :239:GETUPVAL       v5 = u_v0
[176] :239:GETTABLEKS     v4 = v5.Animations
[178] :239:GETTABLEKS     v3 = v4.Ball
[180] :239:GETTABLEKS     v2 = v3.Volley
[183] :239:CALL           v2:Play()
[184] :240:GETUPVAL       v5 = u_v0
[186] :240:GETTABLEKS     v4 = v5.Animations
[188] :240:GETTABLEKS     v3 = v4.Ball
[190] :240:GETTABLEKS     v2 = v3.Volley
[191] :240:LOADK          v4 = 1.15
[194] :240:CALL           v2:AdjustSpeed(v4)
[196] :241:GETIMPORT      v2 = task.delay
[197] :241:LOADK          v3 = 0.2
[198] :241:NEWCLOSURE     v4 = function()
-- proto pool id: 8
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 24
-- size constants: 8
-- lineinfo gap: 24
-- max stack size: 8
-- is typed: false
[001] :242:GETUPVAL       v2 = u_v0
[003] :242:GETTABLEKS     v1 = v2.Camera
[005] :242:GETTABLEKS     v0 = v1.Cutscene
[006] :242:JUMPIF         if not v0 then -- goto #23
[007] :244:GETUPVAL       v2 = u_v0
[009] :244:GETTABLEKS     v1 = v2.BallService
[011] :244:GETTABLEKS     v0 = v1.Shoot
[012] :244:GETUPVAL       v2 = u_v2
[013] :244:LOADNIL        v3 = nil
[014] :244:LOADNIL        v4 = nil
[015] :244:GETUPVAL       v7 = u_v28
[017] :244:GETTABLEKS     v6 = v7.CFrame
[019] :244:GETTABLEKS     v5 = v6.LookVector
[020] :244:LOADK          v6 = "Volley"
[023] :244:CALL           v0:Fire(v2, v3, v4, v5, v6)
[024] :246:RETURN         return
end
[202] :241:CALL           v2(v3, v4)
[203] :241:JUMP           -- jump to #225
end
[204] :248:GETUPVAL       v4 = u_v0
[206] :248:GETTABLEKS     v3 = v4.Camera
[208] :248:GETTABLEKS     v2 = v3.Cutscene
[209] :248:JUMPIF         if not v2 then -- goto #225
[210] :250:GETUPVAL       v4 = u_v0
[212] :250:GETTABLEKS     v3 = v4.BallService
[214] :250:GETTABLEKS     v2 = v3.Shoot
[215] :250:GETUPVAL       v4 = u_v29
[216] :250:LOADNIL        v5 = nil
[217] :250:LOADNIL        v6 = nil
[218] :250:GETUPVAL       v9 = u_v28
[220] :250:GETTABLEKS     v8 = v9.CFrame
[222] :250:GETTABLEKS     v7 = v8.LookVector
[225] :250:CALL           v2:Fire(v4, v5, v6, v7)
[226] :256:LOADN          v1 = 50
[227] :256:SETUPVAL       u_v29 = v1
[228] :257:LOADN          v1 = 0
[229] :257:SETUPVAL       u_v32 = v1
[231] :259:GETIMPORT      v1 = task.spawn
[232] :259:NEWCLOSURE     v2 = function()
-- proto pool id: 9
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 97
-- size constants: 25
-- lineinfo gap: 24
-- max stack size: 8
-- is typed: false
[001] :260:GETUPVAL       v0 = u_v3
[002] :260:JUMPIFNOT      if v0 then -- goto #96
[004] :261:GETIMPORT      v0 = pairs
[005] :261:GETUPVAL       v1 = u_v3
[006] :261:CALL           v0, v1, v2 = v0(v1)
[007] :261:FORGPREP_NEXT  for v3, v4 in pairs(v1) do -- could be doing next, t
[009] :262:JUMPXEQKNIL    if v4 ~= nil then -- goto #89
[011] :263:GETTABLEKS     v5 = v4.Parent
[013] :263:JUMPXEQKNIL    if v5 ~= nil then -- goto #89
[014] :264:LOADK          v7 = "BasePart"
[017] :264:CALL           v5 = v5:IsA(v7)
[018] :264:JUMPIFNOT      if v5 then -- goto #88
[020] :264:GETTABLEKS     v5 = v4.Name
[022] :264:JUMPXEQKS      if v5 ~= "DiveHitbox" then -- goto #89
[024] :264:GETTABLEKS     v5 = v4.Name
[026] :264:JUMPXEQKS      if v5 ~= "TrajectoryLine" then -- goto #89
[028] :264:GETTABLEKS     v5 = v4.Name
[030] :264:JUMPXEQKS      if v5 ~= "GDHitbox" then -- goto #89
[032] :264:GETTABLEKS     v5 = v4.Name
[034] :264:JUMPXEQKS      if v5 ~= "Activate" then -- goto #89
[035] :264:GETUPVAL       v7 = u_v0
[037] :264:GETTABLEKS     v6 = v7.Assets
[039] :264:GETTABLEKS     v5 = v6.Vfx
[041] :264:GETTABLEKS     v7 = v4.Name
[044] :264:CALL           v5 = v5:FindFirstChild(v7)
[046] :264:JUMPXEQKNIL    if v5 == nil then -- goto #89
[048] :264:GETTABLEKS     v5 = v4.Name
[050] :264:JUMPXEQKS      if v5 ~= "Hitbox" then -- goto #89
[052] :264:GETTABLEKS     v5 = v4.Name
[054] :264:JUMPXEQKS      if v5 ~= "HumanoidRootPart" then -- goto #89
[056] :264:GETTABLEKS     v5 = v4.Parent
[057] :264:GETUPVAL       v6 = u_v25
[059] :264:JUMPIFEQ       if v5 == v6 then -- goto #70
[061] :264:GETTABLEKS     v6 = v4.Parent
[063] :264:GETTABLEKS     v5 = v6.Name
[065] :264:JUMPXEQKS      if v5 ~= "Handle" then -- goto #70
[067] :264:GETTABLEKS     v5 = v4.Name
[069] :264:JUMPXEQKS      if v5 == "Handle" then -- goto #89
end
end
[071] :264:GETTABLEKS     v5 = v4.Name
[073] :264:JUMPXEQKS      if v5 ~= "VFXPart" then -- goto #89
[075] :265:GETTABLEKS     v5 = v4.Name
[076] :265:LOADK          v7 = "ball"
[079] :265:CALL           v5 = v5:match(v7)
[080] :265:JUMPIF         if not v5 then -- goto #88
[081] :266:LOADK          v7 = "Invis"
[084] :266:CALL           v5 = v5:GetAttribute(v7)
[085] :266:JUMPIF         if not v5 then -- goto #88
[086] :267:LOADN          v5 = 0
[088] :267:SETTABLEKS     v4.Transparency = v5
end
end
end
end
end
end
end
end
end
end
end
[090] :261:FORGLOOP       end -- iterate + jump to #8
[092] :273:GETIMPORT      v0 = table.clear
[093] :273:GETUPVAL       v1 = u_v3
[094] :273:CALL           v0(v1)
[095] :274:LOADNIL        v0 = nil
end
[096] :274:SETUPVAL       u_v3 = v0
[097] :276:RETURN         return
end
[236] :259:CALL           v1(v2)
[237] :278:RETURN         return
end
v3 = finish
[315] :281:LOADN          v4 = 0
[316] :282:GETUPVAL       v5 = u_v22
[317] :282:GETUPVAL       v6 = u_v19
[318] :282:CALL           v5, v6 = v5(v6)
[319] :283:GETUPVAL       v8 = u_v13
[321] :283:GETTABLEKS     v7 = v8.new
[322] :283:CALL           v7 = v7()
[324] :283:SETTABLEKS     p16.ShootTrove = v7
[326] :284:GETTABLEKS     v8 = p16.BallService
[328] :284:GETTABLEKS     v7 = v8.SetIsHoldingShoot
[329] :284:LOADB          v9 = true
[332] :284:CALL           v7:Fire(v9)
[334] :285:GETTABLEKS     v7 = p16.ShootTrove
[335] :285:NEWCLOSURE     v9 = function()
-- proto pool id: 11
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 10
-- size constants: 3
-- lineinfo gap: 24
-- max stack size: 3
-- is typed: false
[001] :286:GETUPVAL       v2 = u_v0
[003] :286:GETTABLEKS     v1 = v2.BallService
[005] :286:GETTABLEKS     v0 = v1.SetIsHoldingShoot
[006] :286:LOADB          v2 = false
[009] :286:CALL           v0:Fire(v2)
[010] :287:RETURN         return
end
[339] :285:CALL           v7:Add(v9)
[341] :288:GETTABLEKS     v7 = p16.ShootTrove
[342] :288:GETUPVAL       v10 = u_v4
[344] :288:GETTABLEKS     v9 = v10.Heartbeat
[345] :288:NEWCLOSURE     v11 = function(p17)
-- proto pool id: 12
-- num upvalues: 10
-- num inner protos: 0
-- size instructions: 168
-- size constants: 42
-- lineinfo gap: 24
-- max stack size: 9
-- is typed: false
[001] :289:LOADN          v0 = 125
[002] :291:GETUPVAL       v3 = u_v0
[004] :291:GETTABLEKS     v2 = v3.AbilityController
[006] :291:GETTABLEKS     v1 = v2.Mode
[008] :291:JUMPXEQKS      if v1 == "Offensive Mode" then -- goto #16
[009] :291:GETUPVAL       v2 = u_v24
[011] :291:GETTABLEKS     v1 = v2.GetCurrentStyle
[012] :291:CALL           v1 = v1()
[014] :291:JUMPXEQKS      if v1 == "NEL Reo" then -- goto #16
[015] :292:LOADN          v0 = 138
end
end
[016] :294:GETUPVAL       v1 = u_v7
[017] :294:JUMPIFNOT      if v1 then -- goto #29
[018] :294:GETUPVAL       v3 = u_v7
[020] :294:GETTABLEKS     v2 = v3.Stats
[022] :294:GETTABLEKS     v1 = v2.ShotChargeSpeed
[023] :294:JUMPIFNOT      if v1 then -- goto #29
[024] :295:GETUPVAL       v3 = u_v7
[026] :295:GETTABLEKS     v2 = v3.Stats
[028] :295:GETTABLEKS     v1 = v2.ShotChargeSpeed
end
end
[029] :295:MUL            v0 = v0 * v1
[030] :298:GETUPVAL       v1 = u_v29
[031] :298:MUL            v2 = p17 * v0
[032] :298:ADD            v1 = v1 + v2
[033] :298:SETUPVAL       u_v29 = v1
[034] :299:GETUPVAL       v1 = u_v32
[035] :299:MULK           v2 = p17 * 45
[036] :299:ADD            v1 = v1 + v2
[037] :299:SETUPVAL       u_v32 = v1
[038] :300:GETUPVAL       v1 = u_v5
[039] :300:MULK           v2 = p17 * 10
[040] :300:ADD            v1 = v1 + v2
[041] :300:SETUPVAL       u_v5 = v1
[042] :302:GETUPVAL       v1 = u_v5
[043] :302:LOADK          v2 = 2.1
[045] :302:JUMPIFNOTLE    if v2 <= v1 then -- goto #79
[046] :303:GETUPVAL       v4 = u_v0
[048] :303:GETTABLEKS     v3 = v4.Animations
[050] :303:GETTABLEKS     v2 = v3.Movement
[052] :303:GETTABLEKS     v1 = v2.ThrowBall
[053] :303:LOADN          v3 = 0
[056] :303:CALL           v1:AdjustSpeed(v3)
[057] :304:GETUPVAL       v4 = u_v0
[059] :304:GETTABLEKS     v3 = v4.Animations
[061] :304:GETTABLEKS     v2 = v3.Shots
[063] :304:GETTABLEKS     v1 = v2.Shoot
[064] :304:LOADN          v3 = 0
[067] :304:CALL           v1:AdjustSpeed(v3)
[068] :305:GETUPVAL       v4 = u_v0
[070] :305:GETTABLEKS     v3 = v4.Animations
[072] :305:GETTABLEKS     v2 = v3.Ball
[074] :305:GETTABLEKS     v1 = v2.ThrowBall
[075] :305:LOADN          v3 = 0
[078] :305:CALL           v1:AdjustSpeed(v3)
end
[079] :308:GETUPVAL       v7 = u_v19
[081] :308:GETTABLEKS     v6 = v7.PlayerGui
[083] :308:GETTABLEKS     v5 = v6.ForceBar
[085] :308:GETTABLEKS     v4 = v5.ForceBarBackground
[087] :308:GETTABLEKS     v3 = v4.BG
[089] :308:GETTABLEKS     v2 = v3.Bar
[091] :308:GETTABLEKS     v1 = v2.UIGradient
[093] :308:GETIMPORT      v2 = Vector2.new
[094] :308:LOADN          v3 = 0
[095] :308:GETUPVAL       v7 = u_v29
[096] :308:SUBK           v6 = v7 - 50
[097] :308:DIVK           v5 = v6 / 50
[098] :308:SUBRK          v4 = 1 - v5
[099] :308:CALL           v2 = v2(v3, v4)
[101] :308:SETTABLEKS     v1.Offset = v2
[102] :310:GETUPVAL       v1 = u_v1
[104] :310:JUMPXEQKB      if v1 == false then -- goto #130
[105] :310:GETUPVAL       v4 = u_v25
[107] :310:GETTABLEKS     v3 = v4.Values
[109] :310:GETTABLEKS     v2 = v3.HasBall
[111] :310:GETTABLEKS     v1 = v2.Value
[112] :310:JUMPIFNOT      if v1 then -- goto #129
[113] :311:GETUPVAL       v1 = u_v25
[114] :311:LOADK          v3 = "Ring"
[117] :311:CALL           v1 = v1:FindFirstChild(v3)
[118] :311:JUMPIFNOT      if v1 then -- goto #124
[119] :312:GETUPVAL       v2 = u_v25
[121] :312:GETTABLEKS     v1 = v2.Ring
[124] :312:CALL           v1:Destroy()
[125] :314:LOADN          v1 = 110
[126] :314:SETUPVAL       u_v29 = v1
[127] :315:GETUPVAL       v1 = u_v4
[128] :315:CALL           v1()
end
[129] :316:RETURN         return
end
[130] :319:GETUPVAL       v4 = u_v0
[132] :319:GETTABLEKS     v3 = v4.StatesController
[134] :319:GETTABLEKS     v2 = v3.States
[136] :319:GETTABLEKS     v1 = v2.Ability
[138] :319:JUMPXEQKB      if v1 == true then -- goto #147
[140] :319:GETIMPORT      v1 = print
[141] :319:LOADK          v2 = "cancel"
[142] :319:CALL           v1(v2)
[143] :319:GETUPVAL       v1 = u_v4
[144] :319:LOADB          v2 = true
[145] :319:CALL           v1(v2)
[146] :319:RETURN         return
end
[147] :320:GETUPVAL       v1 = u_v29
[148] :320:LOADN          v2 = 110
[150] :320:JUMPIFNOTLE    if v2 <= v1 then -- goto #153
[151] :320:LOADN          v1 = 110
[152] :320:SETUPVAL       u_v29 = v1
end
[153] :321:GETUPVAL       v1 = u_v32
[154] :321:LOADN          v2 = 50
[156] :321:JUMPIFNOTLE    if v2 <= v1 then -- goto #160
[157] :321:GETUPVAL       v1 = u_v4
[158] :321:CALL           v1()
[159] :321:RETURN         return
end
[160] :322:GETUPVAL       v2 = u_v0
[162] :322:GETTABLEKS     v1 = v2.HoldingShoot
[164] :322:JUMPXEQKB      if v1 == false then -- goto #168
[165] :322:GETUPVAL       v1 = u_v4
[166] :322:CALL           v1()
[167] :322:RETURN         return
end
[168] :323:RETURN         return
end
[358] :288:CALL           ... = v9:Connect(v11)
[361] :288:CALL           v7:Add()
[363] :324:RETURN         return
end
v45 = Shoot
[242] :155:SETTABLEKS     v39.Shoot = v45
[243] :326:NEWCLOSURE     
local function Pass(p18)
-- proto pool id: 15
-- num upvalues: 6
-- num inner protos: 1
-- size instructions: 107
-- size constants: 32
-- lineinfo gap: 24
-- max stack size: 9
-- is typed: false
[001] :327:GETUPVAL       v1 = u_v27
[003] :327:GETTABLEKS     v0 = v1.AssemblyRootPart
[004] :327:GETUPVAL       v1 = u_v27
[006] :327:JUMPIFEQ       if v0 == v1 then -- goto #8
[007] :327:RETURN         return
end
[008] :328:GETUPVAL       v0 = u_v44
[010] :328:GETIMPORT      v1 = tick
[011] :328:CALL           v1 = v1()
[013] :328:JUMPIFNOTLT    if v1 < v0 then -- goto #15
[014] :328:RETURN         return
end
[016] :329:GETTABLEKS     v0 = p18.ShootTrove
[017] :329:JUMPIFNOT      if v0 then -- goto #22
[019] :329:GETTABLEKS     v0 = p18.ShootTrove
[022] :329:CALL           v0:Destroy()
[024] :330:GETTABLEKS     v0 = p18.Closest
[026] :330:JUMPXEQKNIL    if v0 == nil then -- goto #28
[027] :330:RETURN         return
end
[028] :331:GETUPVAL       v3 = u_v25
[030] :331:GETTABLEKS     v2 = v3.Values
[032] :331:GETTABLEKS     v1 = v2.HasBall
[034] :331:GETTABLEKS     v0 = v1.Value
[036] :331:JUMPXEQKB      if v0 == false then -- goto #38
[037] :331:RETURN         return
end
[038] :332:GETUPVAL       v2 = u_v12
[040] :332:GETTABLEKS     v1 = v2.config
[042] :332:GETTABLEKS     v0 = v1.PassingDisabled
[043] :332:JUMPIFNOT      if v0 then -- goto #44
end
[044] :332:RETURN         return
[046] :333:GETIMPORT      v1 = tick
[047] :333:CALL           v1 = v1()
[048] :333:ADDK           v0 = v1 + 1
[049] :333:SETUPVAL       u_v44 = v0
[051] :335:GETTABLEKS     v1 = p18.StatesController
[053] :335:GETTABLEKS     v0 = v1.States
[054] :335:LOADN          v1 = 0
[056] :335:SETTABLEKS     v0.TimeSpentRunning = v1
[058] :337:GETTABLEKS     v0 = p18.Closest
[060] :339:GETTABLEKS     v1 = p18.Animations
[063] :339:CALL           v1:StopAnims()
[065] :340:GETTABLEKS     v3 = p18.Animations
[067] :340:GETTABLEKS     v2 = v3.Shots
[069] :340:GETTABLEKS     v1 = v2.Pass
[070] :340:JUMPIF         if not v1 then -- goto #76
[072] :340:GETTABLEKS     v3 = p18.Animations
[074] :340:GETTABLEKS     v2 = v3.Shots
[076] :340:GETTABLEKS     v1 = v2.Shoot
[078] :341:GETIMPORT      v2 = Enum.AnimationPriority.Action4
[080] :341:SETTABLEKS     v1.Priority = v2
[083] :342:CALL           v2:Play()
[085] :344:GETIMPORT      v2 = time
[086] :344:CALL           v2 = v2()
[087] :345:GETUPVAL       v4 = u_v13
[089] :345:GETTABLEKS     v3 = v4.new
[090] :345:CALL           v3 = v3()
[092] :345:SETTABLEKS     p18.ShootTrove = v3
[094] :346:GETTABLEKS     v3 = p18.ShootTrove
[095] :346:GETUPVAL       v6 = u_v4
[097] :346:GETTABLEKS     v5 = v6.Heartbeat
[098] :346:NEWCLOSURE     v7 = function()
-- proto pool id: 14
-- num upvalues: 2
-- num inner protos: 0
-- size instructions: 23
-- size constants: 8
-- lineinfo gap: 24
-- max stack size: 3
-- is typed: false
[002] :347:GETIMPORT      v1 = time
[003] :347:CALL           v1 = v1()
[004] :347:GETUPVAL       v2 = u_v3
[005] :347:SUB            v0 = v1 - v2
[006] :347:LOADK          v1 = 0.2
[008] :347:JUMPIFNOTLT    if v1 < v0 then -- goto #23
[009] :348:GETUPVAL       v1 = u_v0
[011] :348:GETTABLEKS     v0 = v1.ShootTrove
[014] :348:CALL           v0:Destroy()
[015] :349:GETUPVAL       v2 = u_v0
[017] :349:GETTABLEKS     v1 = v2.BallService
[019] :349:GETTABLEKS     v0 = v1.Pass
[022] :349:CALL           v0:Fire()
end
[023] :351:RETURN         return
end
[103] :346:CALL           ... = v5:Connect(v7)
[106] :346:CALL           v3:Add()
[107] :352:RETURN         return
end
v45 = Pass
[251] :326:SETTABLEKS     v39.Pass = v45
[252] :354:NEWCLOSURE     
local function Slide(p19)
-- proto pool id: 18
-- num upvalues: 13
-- num inner protos: 2
-- size instructions: 564
-- size constants: 106
-- lineinfo gap: 2
-- max stack size: 24
-- is typed: true
[001] :355:GETUPVAL       v1 = u_v27
[003] :355:GETTABLEKS     v0 = v1.AssemblyRootPart
[004] :355:GETUPVAL       v1 = u_v27
[006] :355:JUMPIFEQ       if v0 == v1 then -- goto #8
[007] :355:RETURN         return
end
[008] :356:GETUPVAL       v3 = u_v25
[010] :356:GETTABLEKS     v2 = v3.Values
[012] :356:GETTABLEKS     v1 = v2.Sliding
[014] :356:GETTABLEKS     v0 = v1.Value
[015] :356:JUMPIF         if not v0 then -- goto #24
[017] :356:GETTABLEKS     v3 = p19.Animations
[019] :356:GETTABLEKS     v2 = v3.Movement
[021] :356:GETTABLEKS     v1 = v2.Slide
[023] :356:GETTABLEKS     v0 = v1.IsPlaying
end
[024] :356:JUMPIFNOT      if v0 then -- goto #25
end
[025] :356:RETURN         return
[026] :357:GETUPVAL       v3 = u_v25
[028] :357:GETTABLEKS     v2 = v3.Values
[030] :357:GETTABLEKS     v1 = v2.HasBall
[032] :357:GETTABLEKS     v0 = v1.Value
[033] :357:JUMPIFNOT      if v0 then -- goto #34
end
[034] :357:RETURN         return
[035] :358:GETUPVAL       v3 = u_v25
[037] :358:GETTABLEKS     v2 = v3.Values
[039] :358:GETTABLEKS     v1 = v2.Dribbling
[041] :358:GETTABLEKS     v0 = v1.Value
[042] :358:JUMPIF         if not v0 then -- goto #54
[044] :358:GETTABLEKS     v3 = p19.Animations
[046] :358:GETTABLEKS     v2 = v3.Dribbles
[047] :358:GETUPVAL       v4 = u_v24
[049] :358:GETTABLEKS     v3 = v4.GetCurrentStyle
[050] :358:CALL           v3 = v3()
[051] :358:GETTABLE       v1 = v2[v3]
[053] :358:GETTABLEKS     v0 = v1.IsPlaying
end
[054] :358:JUMPIFNOT      if v0 then -- goto #55
end
[055] :358:RETURN         return
[057] :359:GETTABLEKS     v0 = p19.HoldingShoot
[058] :359:JUMPIFNOT      if v0 then -- goto #59
end
[059] :359:RETURN         return
[060] :360:GETUPVAL       v0 = u_v36
[062] :360:GETIMPORT      v1 = tick
[063] :360:CALL           v1 = v1()
[065] :360:JUMPIFNOTLT    if v1 < v0 then -- goto #67
[066] :360:RETURN         return
end
[067] :361:GETUPVAL       v3 = u_v19
[069] :361:GETTABLEKS     v2 = v3.PlayerStats
[071] :361:GETTABLEKS     v1 = v2.Stamina
[073] :361:GETTABLEKS     v0 = v1.Value
[074] :361:LOADN          v1 = 10
[076] :361:JUMPIFNOTLE    if v0 <= v1 then -- goto #78
[077] :361:RETURN         return
end
[079] :363:GETTABLEKS     v0 = p19.SlideTrove
[080] :363:JUMPIFNOT      if v0 then -- goto #85
[082] :363:GETTABLEKS     v0 = p19.SlideTrove
[085] :363:CALL           v0:Destroy()
[087] :365:GETTABLEKS     v1 = p19.StaminaService
[089] :365:GETTABLEKS     v0 = v1.DecreaseStamina
[090] :365:LOADN          v2 = 10
[093] :365:CALL           v0:Fire(v2)
[095] :367:GETTABLEKS     v0 = p19.Animations
[098] :367:CALL           v0:StopAnims()
[100] :368:GETTABLEKS     v2 = p19.Animations
[102] :368:GETTABLEKS     v1 = v2.Movement
[104] :368:GETTABLEKS     v0 = v1.Slide
[106] :368:GETIMPORT      v1 = Enum.AnimationPriority.Action2
[108] :368:SETTABLEKS     v0.Priority = v1
[110] :369:GETTABLEKS     v2 = p19.Animations
[112] :369:GETTABLEKS     v1 = v2.Movement
[114] :369:GETTABLEKS     v0 = v1.Slide
[117] :369:CALL           v0:Play()
[119] :370:GETTABLEKS     v2 = p19.Animations
[121] :370:GETTABLEKS     v1 = v2.Movement
[123] :370:GETTABLEKS     v0 = v1.Slide
[124] :370:LOADK          v2 = 1.35
[127] :370:CALL           v0:AdjustSpeed(v2)
[129] :372:GETTABLEKS     v1 = p19.StatesController
[131] :372:GETTABLEKS     v0 = v1.States
[132] :372:LOADN          v1 = 0
[134] :372:SETTABLEKS     v0.TimeSpentRunning = v1
[135] :375:GETUPVAL       v0 = u_v22
[136] :375:GETUPVAL       v1 = u_v19
[137] :375:CALL           v0, v1 = v0(v1)
[139] :376:JUMPXEQKS      if v0 == "Destructive Impulses" then -- goto #146
[141] :377:GETIMPORT      v3 = tick
[142] :377:CALL           v3 = v3()
[143] :377:ADDK           v2 = v3 + 1.5
[144] :377:SETUPVAL       u_v36 = v2
[145] :377:JUMP           -- jump to #166
end
[146] :378:JUMPIFNOT      if v1 then -- goto #161
[148] :378:GETTABLEKS     v3 = v1.Stats
[150] :378:GETTABLEKS     v2 = v3.SlideCooldown
[151] :378:JUMPIFNOT      if v2 then -- goto #161
[153] :379:GETIMPORT      v3 = tick
[154] :379:CALL           v3 = v3()
[156] :379:GETTABLEKS     v5 = v1.Stats
[158] :379:GETTABLEKS     v4 = v5.SlideCooldown
[159] :379:ADD            v2 = v3 + v4
[160] :379:SETUPVAL       u_v36 = v2
end
end
[161] :379:JUMP           -- jump to #166
[163] :381:GETIMPORT      v3 = tick
[164] :381:CALL           v3 = v3()
[165] :381:ADDK           v2 = v3 + 3
[166] :381:SETUPVAL       u_v36 = v2
[167] :384:GETUPVAL       v3 = u_v13
[169] :384:GETTABLEKS     v2 = v3.new
[170] :384:CALL           v2 = v2()
[172] :384:SETTABLEKS     p19.SlideTrove = v2
[174] :386:GETIMPORT      v2 = Instance.new
[175] :386:LOADK          v3 = "BodyVelocity"
[176] :386:CALL           v2 = v2(v3)
[177] :387:LOADK          v3 = Vector3.new(inf, inf, inf)
[179] :387:SETTABLEKS     v2.MaxForce = v3
[180] :388:GETUPVAL       v3 = u_v27
[182] :388:SETTABLEKS     v2.Parent = v3
[184] :389:GETTABLEKS     v3 = p19.SlideTrove
[185] :389:MOVE           v5 = v2
[188] :389:CALL           v3:Add(v5)
[190] :391:GETIMPORT      v3 = Instance.new
[191] :391:LOADK          v4 = "BodyGyro"
[192] :391:CALL           v3 = v3(v4)
[193] :392:LOADN          v4 = 5000
[195] :392:SETTABLEKS     v3.P = v4
[196] :393:LOADN          v4 = 100
[198] :393:SETTABLEKS     v3.D = v4
[199] :394:LOADK          v4 = Vector3.new(inf, inf, inf)
[201] :394:SETTABLEKS     v3.MaxTorque = v4
[202] :395:GETUPVAL       v4 = u_v27
[204] :395:SETTABLEKS     v3.Parent = v4
[206] :396:GETTABLEKS     v4 = p19.SlideTrove
[207] :396:MOVE           v6 = v3
[210] :396:CALL           v4:Add(v6)
[211] :398:LOADB          v4 = false
[212] :399:LOADB          v5 = false
[213] :401:GETUPVAL       v9 = u_v27
[215] :401:GETTABLEKS     v8 = v9.CFrame
[217] :401:GETTABLEKS     v7 = v8.LookVector
[218] :401:GETUPVAL       v14 = u_v0
[220] :401:GETTABLEKS     v13 = v14.Football
[222] :401:GETTABLEKS     v12 = v13.Value
[224] :401:GETTABLEKS     v11 = v12.Position
[225] :401:GETUPVAL       v13 = u_v27
[227] :401:GETTABLEKS     v12 = v13.Position
[228] :401:SUB            v10 = v11 - v12
[230] :401:GETTABLEKS     v9 = v10.Unit
[233] :401:CALL           v7 = v7:Dot(v9)
[236] :401:GETIMPORT      v6 = math.acos
[237] :401:CALL           v6 = v6(v7)
[238] :402:LOADK          v7 = 1.5707963
[240] :402:JUMPIFLT       if v6 > v7 then -- goto #242
[241] :402:LOADB          v4 = false +1
end
[242] :402:LOADB          v4 = true
[243] :403:LOADK          v7 = 1.9039955
[245] :403:JUMPIFLT       if v6 > v7 then -- goto #247
[246] :403:LOADB          v5 = false +1
end
[247] :403:LOADB          v5 = true
[248] :405:GETUPVAL       v10 = u_v28
[250] :405:GETTABLEKS     v9 = v10.CFrame
[252] :405:GETTABLEKS     v8 = v9.LookVector
[253] :055:LOADK          v10 = Vector3.new(1, 0, 1)
[254] :055:MUL            v9 = v8 * v10
[256] :055:GETTABLEKS     v7 = v9.Unit
[257] :406:LOADN          v8 = 65
[258] :408:GETUPVAL       v10 = u_v24
[260] :408:GETTABLEKS     v9 = v10.GetCurrentStyle
[261] :408:CALL           v9 = v9()
[263] :408:JUMPXEQKS      if v9 == "Loki" then -- goto #272
[265] :409:GETTABLEKS     v11 = p19.StatesController
[267] :409:GETTABLEKS     v10 = v11.States
[269] :409:GETTABLEKS     v9 = v10.Running
[270] :409:JUMPIFNOT      if v9 then -- goto #271
end
[271] :410:LOADK          v8 = 72.5
end
[273] :414:JUMPXEQKS      if v0 == "Godspeed" then -- goto #276
[274] :415:ADDK           v8 = v8 + 7
[275] :415:JUMP           -- jump to #288
end
[277] :416:GETTABLEKS     v10 = p19.AbilityController
[279] :416:GETTABLEKS     v9 = v10.Mode
[281] :416:JUMPXEQKS      if v9 == "Defensive Mode" then -- goto #289
[282] :416:GETUPVAL       v10 = u_v24
[284] :416:GETTABLEKS     v9 = v10.GetCurrentStyle
[285] :416:CALL           v9 = v9()
[287] :416:JUMPXEQKS      if v9 == "NEL Reo" then -- goto #289
[288] :417:LOADN          v8 = 72
end
end
[289] :419:GETUPVAL       v12 = u_v19
[291] :419:GETTABLEKS     v11 = v12.PlayerStats
[293] :419:GETTABLEKS     v10 = v11.Flow
[295] :419:GETTABLEKS     v9 = v10.Value
[297] :419:JUMPXEQKS      if v9 == "Crow" then -- goto #307
[298] :419:GETUPVAL       v12 = u_v19
[300] :419:GETTABLEKS     v11 = v12.PlayerStats
[302] :419:GETTABLEKS     v10 = v11.InFlow
[304] :419:GETTABLEKS     v9 = v10.Value
[305] :419:JUMPIFNOT      if v9 then -- goto #306
end
[306] :420:LOADN          v8 = 75
end
[307] :423:LOADK          v9 = Vector3.new(0, 0, 0)
[308] :424:GETUPVAL       v13 = u_v0
[310] :424:GETTABLEKS     v12 = v13.Football
[312] :424:GETTABLEKS     v11 = v12.Value
[314] :424:GETTABLEKS     v10 = v11.Parent
[316] :424:GETIMPORT      v11 = workspace
[318] :424:JUMPIFEQ       if v10 == v11 then -- goto #427
[319] :425:GETUPVAL       v16 = u_v0
[321] :425:GETTABLEKS     v15 = v16.Football
[323] :425:GETTABLEKS     v14 = v15.Value
[325] :425:GETTABLEKS     v13 = v14.Position
[326] :425:GETUPVAL       v20 = u_v0
[328] :425:GETTABLEKS     v19 = v20.Football
[330] :425:GETTABLEKS     v18 = v19.Value
[332] :425:GETTABLEKS     v17 = v18.Char
[334] :425:GETTABLEKS     v16 = v17.Value
[336] :425:GETTABLEKS     v15 = v16.HumanoidRootPart
[338] :425:GETTABLEKS     v14 = v15.AssemblyLinearVelocity
[339] :425:ADD            v12 = v13 + v14
[340] :425:GETUPVAL       v14 = u_v27
[342] :425:GETTABLEKS     v13 = v14.Position
[343] :425:SUB            v11 = v12 - v13
[345] :425:GETTABLEKS     v10 = v11.Unit
[346] :425:MULK           v9 = v10 * 1
[347] :426:GETUPVAL       v14 = u_v0
[349] :426:GETTABLEKS     v13 = v14.Football
[351] :426:GETTABLEKS     v12 = v13.Value
[353] :426:GETTABLEKS     v11 = v12.Position
[355] :426:GETTABLEKS     v10 = v11.Y
[356] :426:LOADN          v11 = 11
[358] :426:JUMPIFNOTLT    if v11 < v10 then -- goto #378
[359] :426:GETUPVAL       v17 = u_v0
[361] :426:GETTABLEKS     v16 = v17.Football
[363] :426:GETTABLEKS     v15 = v16.Value
[365] :426:GETTABLEKS     v14 = v15.Char
[367] :426:GETTABLEKS     v13 = v14.Value
[369] :426:GETTABLEKS     v12 = v13.HumanoidRootPart
[371] :426:GETTABLEKS     v11 = v12.AssemblyLinearVelocity
[373] :426:GETTABLEKS     v10 = v11.Magnitude
[374] :426:LOADN          v11 = 10
[376] :426:JUMPIFNOTLT    if v11 < v10 then -- goto #378
[377] :427:LOADK          v9 = Vector3.new(0, 0, 0)
end
end
[378] :430:GETUPVAL       v18 = u_v0
[380] :430:GETTABLEKS     v17 = v18.Football
[382] :430:GETTABLEKS     v16 = v17.Value
[384] :430:GETTABLEKS     v15 = v16.Char
[386] :430:GETTABLEKS     v14 = v15.Value
[388] :430:GETTABLEKS     v13 = v14.HumanoidRootPart
[390] :430:GETTABLEKS     v12 = v13.CFrame
[392] :430:GETTABLEKS     v11 = v12.LookVector
[393] :430:GETUPVAL       v16 = u_v27
[395] :430:GETTABLEKS     v15 = v16.Position
[396] :430:GETUPVAL       v22 = u_v0
[398] :430:GETTABLEKS     v21 = v22.Football
[400] :430:GETTABLEKS     v20 = v21.Value
[402] :430:GETTABLEKS     v19 = v20.Char
[404] :430:GETTABLEKS     v18 = v19.Value
[406] :430:GETTABLEKS     v17 = v18.HumanoidRootPart
[408] :430:GETTABLEKS     v16 = v17.Position
[409] :430:SUB            v14 = v15 - v16
[411] :430:GETTABLEKS     v13 = v14.Unit
[414] :430:CALL           v11 = v11:Dot(v13)
[417] :430:GETIMPORT      v10 = math.acos
[418] :430:CALL           v10 = v10(v11)
[419] :431:LOADK          v12 = 1.5707963
[421] :431:JUMPIFLT       if v10 > v12 then -- goto #423
[422] :431:LOADB          v11 = false +1
end
[423] :431:LOADB          v11 = true
[424] :433:JUMPIFNOT      if v11 then -- goto #473
[425] :434:LOADK          v9 = Vector3.new(0, 0, 0)
[426] :434:JUMP           -- jump to #473
end
[427] :437:GETUPVAL       v16 = u_v0
[429] :437:GETTABLEKS     v15 = v16.Football
[431] :437:GETTABLEKS     v14 = v15.Value
[433] :437:GETTABLEKS     v13 = v14.Position
[434] :437:GETUPVAL       v17 = u_v0
[436] :437:GETTABLEKS     v16 = v17.Football
[438] :437:GETTABLEKS     v15 = v16.Value
[440] :437:GETTABLEKS     v14 = v15.AssemblyLinearVelocity
[441] :437:ADD            v12 = v13 + v14
[442] :437:GETUPVAL       v14 = u_v27
[444] :437:GETTABLEKS     v13 = v14.Position
[445] :437:SUB            v11 = v12 - v13
[447] :437:GETTABLEKS     v10 = v11.Unit
[448] :437:MULK           v9 = v10 * 1
[449] :438:GETUPVAL       v14 = u_v0
[451] :438:GETTABLEKS     v13 = v14.Football
[453] :438:GETTABLEKS     v12 = v13.Value
[455] :438:GETTABLEKS     v11 = v12.Position
[457] :438:GETTABLEKS     v10 = v11.Y
[458] :438:LOADN          v11 = 13
[460] :438:JUMPIFNOTLT    if v11 < v10 then -- goto #474
[461] :438:GETUPVAL       v14 = u_v0
[463] :438:GETTABLEKS     v13 = v14.Football
[465] :438:GETTABLEKS     v12 = v13.Value
[467] :438:GETTABLEKS     v11 = v12.AssemblyLinearVelocity
[469] :438:GETTABLEKS     v10 = v11.Magnitude
[470] :438:LOADN          v11 = 10
[472] :438:JUMPIFNOTLT    if v11 < v10 then -- goto #474
end
[473] :439:LOADK          v9 = Vector3.new(0, 0, 0)
end
end
[474] :443:GETUPVAL       v14 = u_v0
[476] :443:GETTABLEKS     v13 = v14.Football
[478] :443:GETTABLEKS     v12 = v13.Value
[480] :443:GETTABLEKS     v11 = v12.AssemblyLinearVelocity
[482] :443:GETTABLEKS     v10 = v11.Magnitude
[483] :443:LOADN          v11 = 20
[485] :443:JUMPIFNOTLE    if v10 <= v11 then -- goto #487
[486] :443:LOADK          v9 = Vector3.new(0, 0, 0)
end
[488] :445:GETTABLEKS     v11 = v9.X
[489] :445:LOADN          v12 = 0
[491] :445:GETTABLEKS     v13 = v9.Z
[494] :445:GETIMPORT      v10 = Vector3.new
[495] :445:CALL           v10 = v10(v11, v12, v13)
[496] :445:MOVE           v9 = v10
[497] :446:JUMPIFNOT      if v5 then -- goto #499
[498] :446:JUMPIFNOT      if v4 then -- goto #499
end
end
[499] :447:ADD            v7 = v7 + v9
[501] :449:GETTABLEKS     v7 = v7.Unit
[502] :451:GETUPVAL       v10 = u_v31
[503] :451:SUBK           v10 = v10 - 1
[504] :451:SETUPVAL       u_v31 = v10
[505] :453:GETUPVAL       v10 = u_v31
[506] :453:LOADN          v11 = 0
[508] :453:JUMPIFNOTLE    if v10 <= v11 then -- goto #511
[509] :454:LOADN          v10 = 1
[510] :454:SETUPVAL       u_v31 = v10
end
[512] :457:GETTABLEKS     v11 = p19.BallService
[514] :457:GETTABLEKS     v10 = v11.Slide
[515] :457:LOADNIL        v12 = nil
[517] :457:GETIMPORT      v14 = string.gsub
[519] :457:GETIMPORT      v16 = game
[521] :457:GETTABLEKS     v15 = v16.JobId
[522] :457:LOADK          v16 = "-"
[523] :457:LOADK          v17 = ""
[524] :457:CALL           ... = v14(v15, v16, v17)
[527] :457:GETIMPORT      v13 = tostring
[528] :457:CALL           v13 = v13(...)
[531] :457:CALL           v10:Fire(v12, v13)
[532] :458:GETUPVAL       v11 = u_v10
[534] :458:GETTABLEKS     v10 = v11.GetController
[535] :458:LOADK          v11 = "CameraController"
[536] :458:CALL           v10 = v10(v11)
[537] :459:MOVE           v11 = v7
[539] :461:GETTABLEKS     v12 = p19.SlideTrove
[540] :461:GETUPVAL       v15 = u_v4
[542] :461:GETTABLEKS     v14 = v15.Heartbeat
[543] :461:NEWCLOSURE     v15 = function(p20)
-- proto pool id: 16
-- num upvalues: 9
-- num inner protos: 0
-- size instructions: 60
-- size constants: 16
-- lineinfo gap: 2
-- max stack size: 8
-- is typed: true
[001] :462:LOADNIL        v0 = nil
[002] :463:GETUPVAL       v1 = u_v41
[003] :463:GETUPVAL       v2 = u_v8
[004] :463:GETUPVAL       v6 = u_v28
[006] :463:GETTABLEKS     v5 = v6.CFrame
[008] :463:GETTABLEKS     v4 = v5.LookVector
[009] :055:LOADK          v6 = Vector3.new(1, 0, 1)
[010] :055:MUL            v5 = v4 * v6
[012] :055:GETTABLEKS     v3 = v5.Unit
[013] :463:LOADN          v4 = 80
[014] :463:CALL           v1 = v1(v2, v3, v4)
[015] :463:MOVE           v0 = v1
[016] :471:SETUPVAL       u_v12 = v0
[017] :472:GETUPVAL       v1 = u_v3
[018] :472:GETUPVAL       v3 = u_v9
[019] :472:MUL            v2 = v0 * v3
[021] :472:SETTABLEKS     v1.Velocity = v2
[022] :473:GETUPVAL       v1 = u_v4
[024] :473:GETIMPORT      v2 = CFrame.lookAlong
[025] :473:LOADK          v3 = Vector3.new(0, 0, 0)
[026] :473:GETUPVAL       v5 = u_v3
[028] :473:GETTABLEKS     v4 = v5.Velocity
[029] :473:CALL           v2 = v2(v3, v4)
[031] :473:SETTABLEKS     v1.CFrame = v2
[032] :474:GETUPVAL       v1 = u_v9
[033] :474:MULK           v2 = p20 * 60
[034] :474:SUB            v1 = v1 - v2
[035] :474:SETUPVAL       u_v9 = v1
[036] :475:GETUPVAL       v1 = u_v9
[037] :475:LOADN          v2 = 9
[039] :475:JUMPIFLE       if v1 => v2 then -- goto #46
[040] :475:GETUPVAL       v3 = u_v25
[042] :475:GETTABLEKS     v2 = v3.IsRagdoll
[044] :475:GETTABLEKS     v1 = v2.Value
[045] :475:JUMPIFNOT      if v1 then -- goto #59
end
[046] :475:GETUPVAL       v2 = u_v0
[048] :475:GETTABLEKS     v1 = v2.SlideTrove
[051] :475:CALL           v1:Destroy()
[052] :475:GETUPVAL       v3 = u_v0
[054] :475:GETTABLEKS     v2 = v3.StatesController
[056] :475:GETTABLEKS     v1 = v2.States
[057] :475:LOADB          v2 = true
[059] :475:SETTABLEKS     v1.Running = v2
[060] :476:RETURN         return
end
[555] :461:CALL           v12:Connect(v14, v15)
[557] :477:GETIMPORT      v12 = task.delay
[558] :477:LOADN          v13 = 2
[559] :477:NEWCLOSURE     v14 = function()
-- proto pool id: 17
-- num upvalues: 2
-- num inner protos: 0
-- size instructions: 12
-- size constants: 3
-- lineinfo gap: 24
-- max stack size: 2
-- is typed: false
[001] :478:GETUPVAL       v1 = u_v3
[003] :478:GETTABLEKS     v0 = v1.Parent
[005] :478:JUMPXEQKNIL    if v0 ~= nil then -- goto #12
[006] :478:GETUPVAL       v1 = u_v0
[008] :478:GETTABLEKS     v0 = v1.SlideTrove
[011] :478:CALL           v0:Destroy()
end
[012] :479:RETURN         return
end
[562] :477:CALL           v12(v13, v14)
[564] :480:RETURN         return
end
v45 = Slide
[267] :354:SETTABLEKS     v39.Slide = v45
[268] :226:NEWCLOSURE     
local function Dribble(p21)
-- proto pool id: 19
-- num upvalues: 6
-- num inner protos: 0
-- size instructions: 426
-- size constants: 65
-- lineinfo gap: 24
-- max stack size: 11
-- is typed: false
[001] :483:GETUPVAL       v3 = u_v25
[003] :483:GETTABLEKS     v2 = v3.Values
[005] :483:GETTABLEKS     v1 = v2.Sliding
[007] :483:GETTABLEKS     v0 = v1.Value
[008] :483:JUMPIF         if not v0 then -- goto #17
[010] :483:GETTABLEKS     v3 = p21.Animations
[012] :483:GETTABLEKS     v2 = v3.Movement
[014] :483:GETTABLEKS     v1 = v2.Slide
[016] :483:GETTABLEKS     v0 = v1.IsPlaying
end
[017] :483:JUMPIFNOT      if v0 then -- goto #18
end
[018] :483:RETURN         return
[019] :484:GETUPVAL       v3 = u_v25
[021] :484:GETTABLEKS     v2 = v3.Values
[023] :484:GETTABLEKS     v1 = v2.Dribbling
[025] :484:GETTABLEKS     v0 = v1.Value
[026] :484:JUMPIF         if not v0 then -- goto #38
[028] :484:GETTABLEKS     v3 = p21.Animations
[030] :484:GETTABLEKS     v2 = v3.Dribbles
[031] :484:GETUPVAL       v4 = u_v24
[033] :484:GETTABLEKS     v3 = v4.GetCurrentStyle
[034] :484:CALL           v3 = v3()
[035] :484:GETTABLE       v1 = v2[v3]
[037] :484:GETTABLEKS     v0 = v1.IsPlaying
end
[038] :484:JUMPIFNOT      if v0 then -- goto #39
end
[039] :484:RETURN         return
[040] :485:GETUPVAL       v3 = u_v25
[042] :485:GETTABLEKS     v2 = v3.Values
[044] :485:GETTABLEKS     v1 = v2.HasBall
[046] :485:GETTABLEKS     v0 = v1.Value
[048] :485:JUMPXEQKB      if v0 == false then -- goto #50
[049] :485:RETURN         return
end
[050] :486:GETUPVAL       v0 = u_v37
[052] :486:GETIMPORT      v1 = tick
[053] :486:CALL           v1 = v1()
[055] :486:JUMPIFNOTLT    if v1 < v0 then -- goto #57
[056] :486:RETURN         return
end
[057] :487:GETUPVAL       v3 = u_v19
[059] :487:GETTABLEKS     v2 = v3.PlayerStats
[061] :487:GETTABLEKS     v1 = v2.Stamina
[063] :487:GETTABLEKS     v0 = v1.Value
[064] :487:LOADN          v1 = 10
[066] :487:JUMPIFNOTLE    if v0 <= v1 then -- goto #68
[067] :487:RETURN         return
end
[069] :488:GETTABLEKS     v0 = p21.SlideTrove
[070] :488:JUMPIFNOT      if v0 then -- goto #75
[072] :488:GETTABLEKS     v0 = p21.SlideTrove
[075] :488:CALL           v0:Destroy()
[077] :490:GETTABLEKS     v1 = p21.StatesController
[079] :490:GETTABLEKS     v0 = v1.States
[080] :490:LOADN          v1 = 0
[082] :490:SETTABLEKS     v0.TimeSpentRunning = v1
[084] :492:GETTABLEKS     v1 = p21.StaminaService
[086] :492:GETTABLEKS     v0 = v1.DecreaseStamina
[087] :492:LOADN          v2 = 10
[090] :492:CALL           v0:Fire(v2)
[092] :494:GETTABLEKS     v0 = p21.Animations
[095] :494:CALL           v0:StopAnims()
[097] :495:GETTABLEKS     v2 = p21.Animations
[099] :495:GETTABLEKS     v1 = v2.Dribbles
[100] :495:GETUPVAL       v3 = u_v24
[102] :495:GETTABLEKS     v2 = v3.GetCurrentStyle
[103] :495:CALL           v2 = v2()
[104] :495:GETTABLE       v0 = v1[v2]
[106] :495:GETIMPORT      v1 = Enum.AnimationPriority.Action3
[108] :495:SETTABLEKS     v0.Priority = v1
[110] :496:GETTABLEKS     v2 = p21.Animations
[112] :496:GETTABLEKS     v1 = v2.Dribbles
[113] :496:GETUPVAL       v3 = u_v24
[115] :496:GETTABLEKS     v2 = v3.GetCurrentStyle
[116] :496:CALL           v2 = v2()
[117] :496:GETTABLE       v0 = v1[v2]
[120] :496:CALL           v0:Play()
[122] :498:GETTABLEKS     v2 = p21.Animations
[124] :498:GETTABLEKS     v1 = v2.Ball
[125] :498:GETUPVAL       v6 = u_v24
[127] :498:GETTABLEKS     v5 = v6.GetCurrentStyle
[128] :498:CALL           v5 = v5()
[129] :498:MOVE           v3 = v5
[130] :498:LOADK          v4 = "Dribble"
[131] :498:CONCAT         v2 = v3 .. v4
[132] :498:GETTABLE       v0 = v1[v2]
[134] :498:GETIMPORT      v1 = Enum.AnimationPriority.Action3
[136] :498:SETTABLEKS     v0.Priority = v1
[138] :499:GETTABLEKS     v2 = p21.Animations
[140] :499:GETTABLEKS     v1 = v2.Ball
[141] :499:GETUPVAL       v6 = u_v24
[143] :499:GETTABLEKS     v5 = v6.GetCurrentStyle
[144] :499:CALL           v5 = v5()
[145] :499:MOVE           v3 = v5
[146] :499:LOADK          v4 = "Dribble"
[147] :499:CONCAT         v2 = v3 .. v4
[148] :499:GETTABLE       v0 = v1[v2]
[151] :499:CALL           v0:Play()
[152] :501:LOADN          v0 = 3
[153] :503:GETUPVAL       v1 = u_v22
[154] :503:GETUPVAL       v2 = u_v19
[155] :503:CALL           v1, v2 = v1(v2)
[156] :505:GETUPVAL       v4 = u_v24
[158] :505:GETTABLEKS     v3 = v4.GetCurrentStyle
[159] :505:CALL           v3 = v3()
[161] :505:JUMPXEQKS      if v3 == "Bachira" then -- goto #172
[162] :505:GETUPVAL       v6 = u_v19
[164] :505:GETTABLEKS     v5 = v6.PlayerStats
[166] :505:GETTABLEKS     v4 = v5.InAwakening
[168] :505:GETTABLEKS     v3 = v4.Value
[169] :505:JUMPIFNOT      if v3 then -- goto #171
[170] :506:LOADN          v0 = 2
end
[171] :506:JUMP           -- jump to #172
end
[172] :508:LOADN          v0 = 3
[173] :511:GETUPVAL       v6 = u_v19
[175] :511:GETTABLEKS     v5 = v6.PlayerStats
[177] :511:GETTABLEKS     v4 = v5.InFlow
[179] :511:GETTABLEKS     v3 = v4.Value
[180] :511:JUMPIFNOT      if v3 then -- goto #208
[181] :512:GETUPVAL       v6 = u_v19
[183] :512:GETTABLEKS     v5 = v6.PlayerStats
[185] :512:GETTABLEKS     v4 = v5.Flow
[187] :512:GETTABLEKS     v3 = v4.Value
[189] :512:JUMPXEQKS      if v3 ~= "Monster" then -- goto #208
[190] :512:GETUPVAL       v6 = u_v19
[192] :512:GETTABLEKS     v5 = v6.PlayerStats
[194] :512:GETTABLEKS     v4 = v5.Flow
[196] :512:GETTABLEKS     v3 = v4.Value
[198] :512:JUMPXEQKS      if v3 ~= "Bee Freestyle" then -- goto #208
[199] :512:GETUPVAL       v6 = u_v19
[201] :512:GETTABLEKS     v5 = v6.PlayerStats
[203] :512:GETTABLEKS     v4 = v5.Flow
[205] :512:GETTABLEKS     v3 = v4.Value
[207] :512:JUMPXEQKS      if v3 == "Master Of All Trades" then -- goto #209
end
end
end
[208] :513:DIVK           v0 = v0 / 1.25
end
[209] :518:GETUPVAL       v4 = u_v24
[211] :518:GETTABLEKS     v3 = v4.GetCurrentStyle
[212] :518:CALL           v3 = v3()
[214] :518:JUMPXEQKS      if v3 == "NEL Reo" then -- goto #222
[216] :518:GETTABLEKS     v4 = p21.AbilityController
[218] :518:GETTABLEKS     v3 = v4.Mode
[220] :518:JUMPXEQKS      if v3 == "Offensive Mode" then -- goto #222
[221] :519:DIVK           v0 = v0 / 1.15
end
end
[222] :522:GETUPVAL       v3 = u_v30
[223] :522:SUBK           v3 = v3 - 1
[224] :522:SETUPVAL       u_v30 = v3
[225] :524:GETUPVAL       v3 = u_v30
[226] :524:LOADN          v4 = 0
[228] :524:JUMPIFNOTLE    if v3 <= v4 then -- goto #323
[229] :525:LOADN          v3 = 1
[230] :525:SETUPVAL       u_v30 = v3
[231] :527:GETUPVAL       v4 = u_v24
[233] :527:GETTABLEKS     v3 = v4.GetCurrentStyle
[234] :527:CALL           v3 = v3()
[236] :527:JUMPXEQKS      if v3 == "NEL Reo" then -- goto #248
[237] :527:GETUPVAL       v4 = u_v19
[239] :527:GETTABLEKS     v3 = v4.Character
[240] :527:LOADK          v5 = "StrikeMode"
[243] :527:CALL           v3 = v3:GetAttribute(v5)
[244] :527:JUMPIFNOT      if v3 then -- goto #247
[245] :528:GETUPVAL       v3 = u_v30
[246] :528:ADDK           v3 = v3 + 1
end
[247] :528:SETUPVAL       u_v30 = v3
end
[248] :531:JUMPIFNOT      if v2 then -- goto #261
[250] :531:GETTABLEKS     v4 = v2.Stats
[252] :531:GETTABLEKS     v3 = v4.ExtraDribbles
[253] :531:JUMPIFNOT      if v3 then -- goto #261
[254] :532:GETUPVAL       v3 = u_v30
[256] :532:GETTABLEKS     v5 = v2.Stats
[258] :532:GETTABLEKS     v4 = v5.ExtraDribbles
[259] :532:ADD            v3 = v3 + v4
[260] :532:SETUPVAL       u_v30 = v3
end
end
[261] :532:JUMP           -- jump to #320
[262] :533:GETUPVAL       v6 = u_v19
[264] :533:GETTABLEKS     v5 = v6.PlayerStats
[266] :533:GETTABLEKS     v4 = v5.Flow
[268] :533:GETTABLEKS     v3 = v4.Value
[270] :533:JUMPXEQKS      if v3 ~= "Awakened Genius" then -- goto #289
[271] :533:GETUPVAL       v6 = u_v19
[273] :533:GETTABLEKS     v5 = v6.PlayerStats
[275] :533:GETTABLEKS     v4 = v5.Flow
[277] :533:GETTABLEKS     v3 = v4.Value
[279] :533:JUMPXEQKS      if v3 ~= "Soul Harvester" then -- goto #289
[280] :533:GETUPVAL       v6 = u_v19
[282] :533:GETTABLEKS     v5 = v6.PlayerStats
[284] :533:GETTABLEKS     v4 = v5.Flow
[286] :533:GETTABLEKS     v3 = v4.Value
[288] :533:JUMPXEQKS      if v3 == "Master Of All Trades" then -- goto #301
end
end
[289] :533:GETUPVAL       v6 = u_v19
[291] :533:GETTABLEKS     v5 = v6.PlayerStats
[293] :533:GETTABLEKS     v4 = v5.InFlow
[295] :533:GETTABLEKS     v3 = v4.Value
[296] :533:JUMPIFNOT      if v3 then -- goto #300
[297] :534:GETUPVAL       v3 = u_v30
[298] :534:ADDK           v3 = v3 + 1
[299] :534:SETUPVAL       u_v30 = v3
end
[300] :534:JUMP           -- jump to #320
end
[301] :535:GETUPVAL       v6 = u_v19
[303] :535:GETTABLEKS     v5 = v6.PlayerStats
[305] :535:GETTABLEKS     v4 = v5.Flow
[307] :535:GETTABLEKS     v3 = v4.Value
[309] :535:JUMPXEQKS      if v3 == "Bee Freestyle" then -- goto #321
[310] :535:GETUPVAL       v6 = u_v19
[312] :535:GETTABLEKS     v5 = v6.PlayerStats
[314] :535:GETTABLEKS     v4 = v5.InFlow
[316] :535:GETTABLEKS     v3 = v4.Value
[317] :535:JUMPIFNOT      if v3 then -- goto #320
[318] :536:GETUPVAL       v3 = u_v30
[319] :536:ADDK           v3 = v3 + 3
end
[320] :536:SETUPVAL       u_v30 = v3
end
[321] :539:LOADN          v0 = 3
[322] :539:JUMP           -- jump to #399
end
[323] :541:JUMPIFNOT      if v2 then -- goto #329
[325] :541:GETTABLEKS     v4 = v2.Stats
[327] :541:GETTABLEKS     v3 = v4.ExtraDribbles
[328] :541:JUMPIFNOT      if v3 then -- goto #329
end
end
[329] :542:LOADN          v0 = 1
[330] :545:GETUPVAL       v4 = u_v24
[332] :545:GETTABLEKS     v3 = v4.GetCurrentStyle
[333] :545:CALL           v3 = v3()
[335] :545:JUMPXEQKS      if v3 == "NEL Reo" then -- goto #345
[336] :545:GETUPVAL       v4 = u_v19
[338] :545:GETTABLEKS     v3 = v4.Character
[339] :545:LOADK          v5 = "StrikeMode"
[342] :545:CALL           v3 = v3:GetAttribute(v5)
[343] :545:JUMPIFNOT      if v3 then -- goto #344
end
[344] :546:LOADN          v0 = 1
end
[345] :549:GETUPVAL       v6 = u_v19
[347] :549:GETTABLEKS     v5 = v6.PlayerStats
[349] :549:GETTABLEKS     v4 = v5.Flow
[351] :549:GETTABLEKS     v3 = v4.Value
[353] :549:JUMPXEQKS      if v3 ~= "Awakened Genius" then -- goto #372
[354] :549:GETUPVAL       v6 = u_v19
[356] :549:GETTABLEKS     v5 = v6.PlayerStats
[358] :549:GETTABLEKS     v4 = v5.Flow
[360] :549:GETTABLEKS     v3 = v4.Value
[362] :549:JUMPXEQKS      if v3 ~= "Soul Harvester" then -- goto #372
[363] :549:GETUPVAL       v6 = u_v19
[365] :549:GETTABLEKS     v5 = v6.PlayerStats
[367] :549:GETTABLEKS     v4 = v5.Flow
[369] :549:GETTABLEKS     v3 = v4.Value
[371] :549:JUMPXEQKS      if v3 == "Master Of All Trades" then -- goto #382
end
end
[372] :549:GETUPVAL       v6 = u_v19
[374] :549:GETTABLEKS     v5 = v6.PlayerStats
[376] :549:GETTABLEKS     v4 = v5.InFlow
[378] :549:GETTABLEKS     v3 = v4.Value
[379] :549:JUMPIFNOT      if v3 then -- goto #381
[380] :550:LOADN          v0 = 1
end
[381] :550:JUMP           -- jump to #399
end
[382] :551:GETUPVAL       v6 = u_v19
[384] :551:GETTABLEKS     v5 = v6.PlayerStats
[386] :551:GETTABLEKS     v4 = v5.Flow
[388] :551:GETTABLEKS     v3 = v4.Value
[390] :551:JUMPXEQKS      if v3 == "Bee Freestyle" then -- goto #400
[391] :551:GETUPVAL       v6 = u_v19
[393] :551:GETTABLEKS     v5 = v6.PlayerStats
[395] :551:GETTABLEKS     v4 = v5.InFlow
[397] :551:GETTABLEKS     v3 = v4.Value
[398] :551:JUMPIFNOT      if v3 then -- goto #399
end
[399] :552:LOADN          v0 = 1
end
[401] :556:GETIMPORT      v4 = tick
[402] :556:CALL           v4 = v4()
[403] :556:ADD            v3 = v4 + v0
[404] :556:SETUPVAL       u_v37 = v3
[406] :560:GETTABLEKS     v4 = p21.BallService
[408] :560:GETTABLEKS     v3 = v4.Dribble
[410] :560:GETIMPORT      v6 = string.gsub
[412] :560:GETIMPORT      v8 = game
[414] :560:GETTABLEKS     v7 = v8.JobId
[415] :560:LOADK          v8 = "-"
[416] :560:LOADK          v9 = ""
[417] :560:CALL           ... = v6(v7, v8, v9)
[420] :560:GETIMPORT      v5 = tostring
[421] :560:CALL           v5 = v5(...)
[422] :560:MOVE           v6 = v0
[425] :560:CALL           v3:Fire(v5, v6)
[426] :561:RETURN         return
end
v45 = Dribble
[276] :226:SETTABLEKS     v39.Dribble = v45
[277] :307:NEWCLOSURE     
local function Flick(p22)
-- proto pool id: 21
-- num upvalues: 3
-- num inner protos: 1
-- size instructions: 108
-- size constants: 29
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :564:GETUPVAL       v4 = u_v19
[003] :564:GETTABLEKS     v3 = v4.Character
[005] :564:GETTABLEKS     v2 = v3.Values
[007] :564:GETTABLEKS     v1 = v2.HasBall
[009] :564:GETTABLEKS     v0 = v1.Value
[011] :564:JUMPXEQKB      if v0 == false then -- goto #13
[012] :564:RETURN         return
end
[013] :565:GETUPVAL       v3 = u_v19
[015] :565:GETTABLEKS     v2 = v3.PlayerStats
[017] :565:GETTABLEKS     v1 = v2.Stamina
[019] :565:GETTABLEKS     v0 = v1.Value
[020] :565:LOADN          v1 = 20
[022] :565:JUMPIFNOTLE    if v0 <= v1 then -- goto #24
[023] :565:RETURN         return
end
[024] :566:LOADB          v0 = true
[025] :566:SETUPVAL       u_v33 = v0
[027] :567:GETIMPORT      v0 = tick
[028] :567:CALL           v0 = v0()
[029] :567:SETUPVAL       u_v35 = v0
[031] :569:GETTABLEKS     v1 = p22.StatesController
[033] :569:GETTABLEKS     v0 = v1.States
[034] :569:LOADN          v1 = 0
[036] :569:SETTABLEKS     v0.TimeSpentRunning = v1
[038] :571:GETTABLEKS     v0 = p22.Animations
[041] :571:CALL           v0:StopAnims()
[043] :572:GETTABLEKS     v2 = p22.Animations
[045] :572:GETTABLEKS     v1 = v2.Flicks
[047] :572:GETTABLEKS     v0 = v1.Flick
[049] :572:GETIMPORT      v1 = Enum.AnimationPriority.Action3
[051] :572:SETTABLEKS     v0.Priority = v1
[053] :573:GETTABLEKS     v2 = p22.Animations
[055] :573:GETTABLEKS     v1 = v2.Flicks
[057] :573:GETTABLEKS     v0 = v1.Flick
[060] :573:CALL           v0:Play()
[062] :575:GETTABLEKS     v2 = p22.Animations
[064] :575:GETTABLEKS     v1 = v2.Ball
[066] :575:GETTABLEKS     v0 = v1.Flick
[068] :575:GETIMPORT      v1 = Enum.AnimationPriority.Action3
[070] :575:SETTABLEKS     v0.Priority = v1
[072] :576:GETTABLEKS     v2 = p22.Animations
[074] :576:GETTABLEKS     v1 = v2.Ball
[076] :576:GETTABLEKS     v0 = v1.Flick
[079] :576:CALL           v0:Play()
[080] :578:GETUPVAL       v4 = u_v19
[082] :578:GETTABLEKS     v3 = v4.Character
[084] :578:GETTABLEKS     v2 = v3.Values
[086] :578:GETTABLEKS     v1 = v2.HasBall
[088] :578:GETTABLEKS     v0 = v1.Value
[089] :578:JUMPIFNOT      if v0 then -- goto #99
[091] :578:GETTABLEKS     v1 = p22.BallService
[093] :578:GETTABLEKS     v0 = v1.Shoot
[094] :578:LOADN          v2 = 50
[095] :578:LOADN          v3 = 25
[096] :578:LOADK          v4 = "Flick"
[099] :578:CALL           v0:Fire(v2, v3, v4)
[101] :580:GETIMPORT      v0 = task.delay
[102] :580:LOADK          v1 = 0.35
[103] :580:NEWCLOSURE     v2 = function()
-- proto pool id: 20
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 25
-- size constants: 8
-- lineinfo gap: 24
-- max stack size: 5
-- is typed: false
[001] :581:GETUPVAL       v4 = u_v19
[003] :581:GETTABLEKS     v3 = v4.Character
[005] :581:GETTABLEKS     v2 = v3.Values
[007] :581:GETTABLEKS     v1 = v2.HasBall
[009] :581:GETTABLEKS     v0 = v1.Value
[010] :581:JUMPIFNOT      if v0 then -- goto #22
[011] :581:GETUPVAL       v2 = u_v0
[013] :581:GETTABLEKS     v1 = v2.BallService
[015] :581:GETTABLEKS     v0 = v1.Shoot
[016] :581:LOADN          v2 = 50
[017] :581:LOADN          v3 = 25
[018] :581:LOADK          v4 = "FlickKick"
[021] :581:CALL           v0:Fire(v2, v3, v4)
end
[022] :581:RETURN         return
[023] :582:LOADB          v0 = false
[024] :582:SETUPVAL       u_v33 = v0
[025] :584:RETURN         return
end
[107] :580:CALL           v0(v1, v2)
[108] :585:RETURN         return
end
v45 = Flick
[282] :307:SETTABLEKS     v39.Flick = v45
[283] :331:NEWCLOSURE     
local function Bicycle(p23)
-- proto pool id: 24
-- num upvalues: 4
-- num inner protos: 2
-- size instructions: 127
-- size constants: 40
-- lineinfo gap: 24
-- max stack size: 8
-- is typed: false
[001] :588:GETUPVAL       v0 = u_v38
[003] :588:GETIMPORT      v1 = tick
[004] :588:CALL           v1 = v1()
[006] :588:JUMPIFNOTLT    if v1 < v0 then -- goto #8
[007] :588:RETURN         return
end
[008] :589:GETUPVAL       v3 = u_v19
[010] :589:GETTABLEKS     v2 = v3.PlayerStats
[012] :589:GETTABLEKS     v1 = v2.Stamina
[014] :589:GETTABLEKS     v0 = v1.Value
[015] :589:LOADN          v1 = 30
[017] :589:JUMPIFNOTLE    if v0 <= v1 then -- goto #19
[018] :589:RETURN         return
end
[020] :591:GETIMPORT      v1 = tick
[021] :591:CALL           v1 = v1()
[022] :591:ADDK           v0 = v1 + 5
[023] :591:SETUPVAL       u_v38 = v0
[024] :592:LOADB          v0 = true
[025] :592:SETUPVAL       u_v34 = v0
[027] :594:GETTABLEKS     v1 = p23.StatesController
[029] :594:GETTABLEKS     v0 = v1.States
[030] :594:LOADN          v1 = 0
[032] :594:SETTABLEKS     v0.TimeSpentRunning = v1
[034] :596:GETTABLEKS     v1 = p23.BallService
[036] :596:GETTABLEKS     v0 = v1.Dribble
[038] :596:GETIMPORT      v3 = string.gsub
[040] :596:GETIMPORT      v5 = game
[042] :596:GETTABLEKS     v4 = v5.JobId
[043] :596:LOADK          v5 = "-"
[044] :596:LOADK          v6 = ""
[045] :596:CALL           ... = v3(v4, v5, v6)
[048] :596:GETIMPORT      v2 = tostring
[049] :596:CALL           v2 = v2(...)
[052] :596:CALL           v0:Fire(v2)
[054] :598:GETTABLEKS     v1 = p23.StatesController
[056] :598:GETTABLEKS     v0 = v1.States
[057] :598:LOADB          v1 = true
[059] :598:SETTABLEKS     v0.Bicycle = v1
[061] :600:GETTABLEKS     v0 = p23.Animations
[064] :600:CALL           v0:StopAnims()
[066] :601:GETTABLEKS     v2 = p23.Animations
[068] :601:GETTABLEKS     v1 = v2.Bicycles
[070] :601:GETTABLEKS     v0 = v1.Bicycle
[072] :601:GETIMPORT      v1 = Enum.AnimationPriority.Action3
[074] :601:SETTABLEKS     v0.Priority = v1
[076] :602:GETTABLEKS     v2 = p23.Animations
[078] :602:GETTABLEKS     v1 = v2.Bicycles
[080] :602:GETTABLEKS     v0 = v1.Bicycle
[083] :602:CALL           v0:Play()
[085] :604:GETTABLEKS     v2 = p23.Animations
[087] :604:GETTABLEKS     v1 = v2.Ball
[089] :604:GETTABLEKS     v0 = v1.Bicycle
[091] :604:GETIMPORT      v1 = Enum.AnimationPriority.Action3
[093] :604:SETTABLEKS     v0.Priority = v1
[095] :605:GETTABLEKS     v2 = p23.Animations
[097] :605:GETTABLEKS     v1 = v2.Ball
[099] :605:GETTABLEKS     v0 = v1.Bicycle
[102] :605:CALL           v0:Play()
[104] :607:GETTABLEKS     v1 = p23.BallService
[106] :607:GETTABLEKS     v0 = v1.Shoot
[107] :607:LOADN          v2 = 170
[108] :607:LOADNIL        v3 = nil
[109] :607:LOADK          v4 = "BicycleState"
[112] :607:CALL           v0:Fire(v2, v3, v4)
[114] :609:GETIMPORT      v0 = task.delay
[115] :609:LOADK          v1 = 0.65
[116] :609:NEWCLOSURE     v2 = function()
-- proto pool id: 22
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 23
-- size constants: 7
-- lineinfo gap: 24
-- max stack size: 5
-- is typed: false
[001] :610:GETUPVAL       v3 = u_v25
[003] :610:GETTABLEKS     v2 = v3.Values
[005] :610:GETTABLEKS     v1 = v2.HasBall
[007] :610:GETTABLEKS     v0 = v1.Value
[008] :610:JUMPIFNOT      if v0 then -- goto #20
[009] :610:GETUPVAL       v2 = u_v0
[011] :610:GETTABLEKS     v1 = v2.BallService
[013] :610:GETTABLEKS     v0 = v1.Shoot
[014] :610:LOADN          v2 = 170
[015] :610:LOADN          v3 = 30
[016] :610:LOADK          v4 = "Bicycle"
[019] :610:CALL           v0:Fire(v2, v3, v4)
end
[020] :610:RETURN         return
[021] :611:LOADB          v0 = false
[022] :611:SETUPVAL       u_v34 = v0
[023] :613:RETURN         return
end
[120] :609:CALL           v0(v1, v2)
[122] :615:GETIMPORT      v0 = task.delay
[123] :615:LOADK          v1 = 0.85
[124] :615:NEWCLOSURE     v2 = function()
-- proto pool id: 23
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 9
-- size constants: 3
-- lineinfo gap: 24
-- max stack size: 3
-- is typed: false
[001] :616:GETUPVAL       v2 = u_v0
[003] :616:GETTABLEKS     v1 = v2.StatesController
[005] :616:GETTABLEKS     v0 = v1.States
[006] :616:LOADB          v1 = false
[008] :616:SETTABLEKS     v0.Bicycle = v1
[009] :617:RETURN         return
end
[126] :615:CALL           v0(v1, v2)
[127] :618:RETURN         return
end
v45 = Bicycle
[289] :331:SETTABLEKS     v39.Bicycle = v45
[290] :364:NEWCLOSURE     
local function ResetChecks(p24)
-- proto pool id: 29
-- num upvalues: 4
-- num inner protos: 4
-- size instructions: 136
-- size constants: 24
-- lineinfo gap: 24
-- max stack size: 8
-- is typed: false
[002] :621:GETTABLEKS     v0 = p24.NewTrove
[003] :621:JUMPIFNOT      if v0 then -- goto #8
[005] :621:GETTABLEKS     v0 = p24.NewTrove
[008] :621:CALL           v0:Destroy()
[009] :622:GETUPVAL       v1 = u_v13
[011] :622:GETTABLEKS     v0 = v1.new
[012] :622:CALL           v0 = v0()
[014] :622:SETTABLEKS     p24.NewTrove = v0
[016] :624:GETTABLEKS     v0 = p24.NewTrove
[017] :624:GETUPVAL       v4 = u_v19
[019] :624:GETTABLEKS     v3 = v4.Character
[021] :624:GETTABLEKS     v2 = v3.Values
[022] :624:LOADK          v4 = "IsInPenalty"
[025] :624:CALL           v2 = v2:WaitForChild(v4)
[026] :624:LOADK          v4 = "Value"
[029] :624:CALL           v2 = v2:GetPropertyChangedSignal(v4)
[030] :624:DUPCLOSURE     v3 = function()
-- proto pool id: 25
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 53
-- size constants: 13
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :625:GETUPVAL       v4 = u_v19
[003] :625:GETTABLEKS     v3 = v4.Character
[005] :625:GETTABLEKS     v2 = v3.Values
[007] :625:GETTABLEKS     v1 = v2.Goalie
[009] :625:GETTABLEKS     v0 = v1.Value
[010] :625:JUMPIFNOT      if v0 then -- goto #19
[011] :625:GETUPVAL       v4 = u_v19
[013] :625:GETTABLEKS     v3 = v4.Character
[015] :625:GETTABLEKS     v2 = v3.Values
[017] :625:GETTABLEKS     v1 = v2.IsInPenalty
[019] :625:GETTABLEKS     v0 = v1.Value
[020] :626:GETUPVAL       v5 = u_v19
[022] :626:GETTABLEKS     v4 = v5.PlayerGui
[024] :626:GETTABLEKS     v3 = v4.Mobile
[026] :626:GETTABLEKS     v2 = v3.NoBall
[028] :626:GETTABLEKS     v1 = v2.Dive
[030] :626:SETTABLEKS     v1.Visible = v0
[031] :627:GETUPVAL       v5 = u_v19
[033] :627:GETTABLEKS     v4 = v5.PlayerGui
[035] :627:GETTABLEKS     v3 = v4.InGameUI
[037] :627:GETTABLEKS     v2 = v3.KeybindsPC
[039] :627:GETTABLEKS     v1 = v2.Dive
[041] :627:SETTABLEKS     v1.Visible = v0
[042] :628:GETUPVAL       v5 = u_v19
[044] :628:GETTABLEKS     v4 = v5.PlayerGui
[046] :628:GETTABLEKS     v3 = v4.InGameUI
[048] :628:GETTABLEKS     v2 = v3.KeybindsConsole
[050] :628:GETTABLEKS     v1 = v2.Dive
[052] :628:SETTABLEKS     v1.Visible = v0
[053] :629:RETURN         return
end
[034] :624:CALL           v0:Connect(v2, v3)
[036] :631:GETTABLEKS     v0 = p24.NewTrove
[037] :631:GETUPVAL       v4 = u_v19
[039] :631:GETTABLEKS     v3 = v4.Character
[041] :631:GETTABLEKS     v2 = v3.Values
[042] :631:LOADK          v4 = "Goalie"
[045] :631:CALL           v2 = v2:WaitForChild(v4)
[046] :631:LOADK          v4 = "Value"
[049] :631:CALL           v2 = v2:GetPropertyChangedSignal(v4)
[050] :631:DUPCLOSURE     v3 = function()
-- proto pool id: 26
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 53
-- size constants: 13
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :632:GETUPVAL       v4 = u_v19
[003] :632:GETTABLEKS     v3 = v4.Character
[005] :632:GETTABLEKS     v2 = v3.Values
[007] :632:GETTABLEKS     v1 = v2.Goalie
[009] :632:GETTABLEKS     v0 = v1.Value
[010] :632:JUMPIFNOT      if v0 then -- goto #19
[011] :632:GETUPVAL       v4 = u_v19
[013] :632:GETTABLEKS     v3 = v4.Character
[015] :632:GETTABLEKS     v2 = v3.Values
[017] :632:GETTABLEKS     v1 = v2.IsInPenalty
[019] :632:GETTABLEKS     v0 = v1.Value
[020] :633:GETUPVAL       v5 = u_v19
[022] :633:GETTABLEKS     v4 = v5.PlayerGui
[024] :633:GETTABLEKS     v3 = v4.Mobile
[026] :633:GETTABLEKS     v2 = v3.NoBall
[028] :633:GETTABLEKS     v1 = v2.Dive
[030] :633:SETTABLEKS     v1.Visible = v0
[031] :634:GETUPVAL       v5 = u_v19
[033] :634:GETTABLEKS     v4 = v5.PlayerGui
[035] :634:GETTABLEKS     v3 = v4.InGameUI
[037] :634:GETTABLEKS     v2 = v3.KeybindsPC
[039] :634:GETTABLEKS     v1 = v2.Dive
[041] :634:SETTABLEKS     v1.Visible = v0
[042] :635:GETUPVAL       v5 = u_v19
[044] :635:GETTABLEKS     v4 = v5.PlayerGui
[046] :635:GETTABLEKS     v3 = v4.InGameUI
[048] :635:GETTABLEKS     v2 = v3.KeybindsConsole
[050] :635:GETTABLEKS     v1 = v2.Dive
[052] :635:SETTABLEKS     v1.Visible = v0
[053] :636:RETURN         return
end
[054] :631:CALL           v0:Connect(v2, v3)
[055] :638:GETUPVAL       v4 = u_v19
[057] :638:GETTABLEKS     v3 = v4.Character
[059] :638:GETTABLEKS     v2 = v3.Values
[061] :638:GETTABLEKS     v1 = v2.Goalie
[063] :638:GETTABLEKS     v0 = v1.Value
[064] :638:JUMPIFNOT      if v0 then -- goto #73
[065] :638:GETUPVAL       v4 = u_v19
[067] :638:GETTABLEKS     v3 = v4.Character
[069] :638:GETTABLEKS     v2 = v3.Values
[071] :638:GETTABLEKS     v1 = v2.IsInPenalty
[073] :638:GETTABLEKS     v0 = v1.Value
[074] :639:GETUPVAL       v5 = u_v19
[076] :639:GETTABLEKS     v4 = v5.PlayerGui
[078] :639:GETTABLEKS     v3 = v4.Mobile
[080] :639:GETTABLEKS     v2 = v3.NoBall
[082] :639:GETTABLEKS     v1 = v2.Dive
[084] :639:SETTABLEKS     v1.Visible = v0
[085] :640:GETUPVAL       v5 = u_v19
[087] :640:GETTABLEKS     v4 = v5.PlayerGui
[089] :640:GETTABLEKS     v3 = v4.InGameUI
[091] :640:GETTABLEKS     v2 = v3.KeybindsPC
[093] :640:GETTABLEKS     v1 = v2.Dive
[095] :640:SETTABLEKS     v1.Visible = v0
[096] :641:GETUPVAL       v5 = u_v19
[098] :641:GETTABLEKS     v4 = v5.PlayerGui
[100] :641:GETTABLEKS     v3 = v4.InGameUI
[102] :641:GETTABLEKS     v2 = v3.KeybindsConsole
[104] :641:GETTABLEKS     v1 = v2.Dive
[106] :641:SETTABLEKS     v1.Visible = v0
[108] :643:GETTABLEKS     v1 = p24.NewTrove
[109] :643:GETUPVAL       v6 = u_v19
[111] :643:GETTABLEKS     v5 = v6.Character
[113] :643:GETTABLEKS     v4 = v5.Values
[115] :643:GETTABLEKS     v3 = v4.HasBall
[116] :643:LOADK          v5 = "Value"
[119] :643:CALL           v3 = v3:GetPropertyChangedSignal(v5)
[120] :643:DUPCLOSURE     v4 = function()
-- proto pool id: 27
-- num upvalues: 2
-- num inner protos: 0
-- size instructions: 76
-- size constants: 11
-- lineinfo gap: 24
-- max stack size: 5
-- is typed: false
[001] :644:GETUPVAL       v4 = u_v19
[003] :644:GETTABLEKS     v3 = v4.Character
[005] :644:GETTABLEKS     v2 = v3.Values
[007] :644:GETTABLEKS     v1 = v2.HasBall
[009] :644:GETTABLEKS     v0 = v1.Value
[010] :644:JUMPIFNOT      if v0 then -- goto #43
[011] :645:GETUPVAL       v1 = u_v1
[013] :645:GETTABLEKS     v0 = v1.TouchEnabled
[014] :645:JUMPIFNOT      if v0 then -- goto #75
[015] :646:GETUPVAL       v2 = u_v19
[017] :646:GETTABLEKS     v1 = v2.PlayerGui
[019] :646:GETTABLEKS     v0 = v1.Mobile
[020] :646:LOADB          v1 = true
[022] :646:SETTABLEKS     v0.Enabled = v1
[023] :647:GETUPVAL       v3 = u_v19
[025] :647:GETTABLEKS     v2 = v3.PlayerGui
[027] :647:GETTABLEKS     v1 = v2.Mobile
[029] :647:GETTABLEKS     v0 = v1.NoBall
[030] :647:LOADB          v1 = false
[032] :647:SETTABLEKS     v0.Visible = v1
[033] :648:GETUPVAL       v3 = u_v19
[035] :648:GETTABLEKS     v2 = v3.PlayerGui
[037] :648:GETTABLEKS     v1 = v2.Mobile
[039] :648:GETTABLEKS     v0 = v1.Ball
[040] :648:LOADB          v1 = true
[042] :648:SETTABLEKS     v0.Visible = v1
end
[043] :648:RETURN         return
[044] :651:GETUPVAL       v1 = u_v1
[046] :651:GETTABLEKS     v0 = v1.TouchEnabled
[047] :651:JUMPIFNOT      if v0 then -- goto #75
[048] :652:GETUPVAL       v2 = u_v19
[050] :652:GETTABLEKS     v1 = v2.PlayerGui
[052] :652:GETTABLEKS     v0 = v1.Mobile
[053] :652:LOADB          v1 = true
[055] :652:SETTABLEKS     v0.Enabled = v1
[056] :653:GETUPVAL       v3 = u_v19
[058] :653:GETTABLEKS     v2 = v3.PlayerGui
[060] :653:GETTABLEKS     v1 = v2.Mobile
[062] :653:GETTABLEKS     v0 = v1.NoBall
[063] :653:LOADB          v1 = true
[065] :653:SETTABLEKS     v0.Visible = v1
[066] :654:GETUPVAL       v3 = u_v19
[068] :654:GETTABLEKS     v2 = v3.PlayerGui
[070] :654:GETTABLEKS     v1 = v2.Mobile
[072] :654:GETTABLEKS     v0 = v1.Ball
[073] :654:LOADB          v1 = false
[075] :654:SETTABLEKS     v0.Visible = v1
[076] :657:RETURN         return
end
[125] :643:CALL           v1:Connect(v3, v4)
[127] :659:GETTABLEKS     v1 = p24.NewTrove
[128] :659:GETUPVAL       v4 = u_v26
[130] :659:GETTABLEKS     v3 = v4.StateChanged
[131] :659:NEWCLOSURE     v4 = function(p25, p26)
-- proto pool id: 28
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 9
-- size constants: 5
-- lineinfo gap: 24
-- max stack size: 4
-- is typed: false
[002] :660:GETIMPORT      v0 = Enum.HumanoidStateType.Jumping
[004] :660:JUMPIFNOTEQ    if p26 ~= v0 then -- goto #9
[005] :661:GETUPVAL       v0 = u_v0
[008] :661:CALL           v0:Flick()
end
[009] :663:RETURN         return
end
[135] :659:CALL           v1:Connect(v3, v4)
[136] :664:RETURN         return
end
v45 = ResetChecks
[296] :364:SETTABLEKS     v39.ResetChecks = v45
[297] :410:DUPCLOSURE     
local function DragBall(p27, p28)
-- proto pool id: 31
-- num upvalues: 2
-- num inner protos: 1
-- size instructions: 24
-- size constants: 5
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[002] :667:GETTABLEKS     v0 = p27.Drag
[003] :667:JUMPIFNOT      if v0 then -- goto #8
[005] :667:GETTABLEKS     v0 = p27.Drag
[008] :667:CALL           v0:Disconnect()
[009] :669:LOADK          v0 = 0.999
[010] :670:GETUPVAL       v2 = u_v4
[012] :670:GETTABLEKS     v1 = v2.Heartbeat
[013] :670:NEWCLOSURE     v3 = function(p29)
-- proto pool id: 30
-- num upvalues: 4
-- num inner protos: 0
-- size instructions: 121
-- size constants: 18
-- lineinfo gap: 24
-- max stack size: 10
-- is typed: true
[001] :671:GETUPVAL       v3 = u_v0
[003] :671:GETTABLEKS     v2 = v3.Football
[005] :671:GETTABLEKS     v1 = v2.Value
[007] :671:GETTABLEKS     v0 = v1.Parent
[009] :671:GETIMPORT      v1 = workspace
[011] :671:JUMPIFEQ       if v0 == v1 then -- goto #19
[012] :671:GETUPVAL       v1 = u_v0
[014] :671:GETTABLEKS     v0 = v1.Drag
[017] :671:CALL           v0:Disconnect()
[018] :671:RETURN         return
end
[019] :672:GETUPVAL       v4 = u_v0
[021] :672:GETTABLEKS     v3 = v4.Football
[023] :672:GETTABLEKS     v2 = v3.Value
[025] :672:GETTABLEKS     v1 = v2.OnPlayer
[027] :672:GETTABLEKS     v0 = v1.Value
[028] :672:JUMPIFNOT      if v0 then -- goto #35
[029] :672:GETUPVAL       v1 = u_v0
[031] :672:GETTABLEKS     v0 = v1.Drag
[034] :672:CALL           v0:Disconnect()
end
[035] :672:RETURN         return
[036] :674:GETUPVAL       v2 = u_v1
[038] :674:GETTABLEKS     v1 = v2.Position
[040] :674:GETTABLEKS     v0 = v1.Y
[041] :674:LOADN          v1 = 18
[043] :674:JUMPIFNOTLE    if v0 <= v1 then -- goto #77
[044] :675:GETUPVAL       v1 = u_v1
[046] :675:GETTABLEKS     v0 = v1.AssemblyLinearVelocity
[047] :676:GETUPVAL       v1 = u_v2
[048] :676:DIVK           v2 = p29 / 50
[049] :676:SUB            v1 = v1 - v2
[050] :676:SETUPVAL       u_v2 = v1
[051] :677:GETUPVAL       v1 = u_v1
[052] :677:GETUPVAL       v6 = u_v1
[054] :677:GETTABLEKS     v5 = v6.AssemblyLinearVelocity
[056] :677:GETTABLEKS     v4 = v5.X
[057] :677:GETUPVAL       v5 = u_v2
[058] :677:MUL            v3 = v4 * v5
[059] :677:GETUPVAL       v6 = u_v1
[061] :677:GETTABLEKS     v5 = v6.AssemblyLinearVelocity
[063] :677:GETTABLEKS     v4 = v5.Y
[064] :677:GETUPVAL       v8 = u_v1
[066] :677:GETTABLEKS     v7 = v8.AssemblyLinearVelocity
[068] :677:GETTABLEKS     v6 = v7.Z
[069] :677:GETUPVAL       v7 = u_v2
[070] :677:MUL            v5 = v6 * v7
[073] :677:GETIMPORT      v2 = Vector3.new
[074] :677:CALL           v2 = v2(v3, v4, v5)
[076] :677:SETTABLEKS     v1.AssemblyLinearVelocity = v2
end
[077] :680:GETUPVAL       v2 = u_v1
[079] :680:GETTABLEKS     v1 = v2.Position
[081] :680:GETTABLEKS     v0 = v1.Y
[082] :680:LOADN          v1 = 27
[084] :680:JUMPIFNOTLT    if v0 < v1 then -- goto #107
[085] :680:GETUPVAL       v2 = u_v1
[087] :680:GETTABLEKS     v1 = v2.Position
[089] :680:GETTABLEKS     v0 = v1.Y
[090] :680:LOADN          v1 = 8
[092] :680:JUMPIFNOTLT    if v1 < v0 then -- goto #107
[093] :681:GETUPVAL       v0 = u_v1
[095] :681:GETTABLEKS     v1 = v0.AssemblyLinearVelocity
[096] :681:LOADN          v3 = 0
[097] :681:LOADN          v5 = 82
[098] :681:MUL            v4 = v5 * p29
[099] :681:LOADN          v5 = 0
[102] :681:GETIMPORT      v2 = Vector3.new
[103] :681:CALL           v2 = v2(v3, v4, v5)
[104] :681:ADD            v1 = v1 + v2
[106] :681:SETTABLEKS     v0.AssemblyLinearVelocity = v1
end
end
[107] :684:GETUPVAL       v2 = u_v1
[109] :684:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[111] :684:GETTABLEKS     v0 = v1.Magnitude
[112] :684:LOADN          v1 = 10
[114] :684:JUMPIFNOTLE    if v0 <= v1 then -- goto #121
[115] :684:GETUPVAL       v1 = u_v0
[117] :684:GETTABLEKS     v0 = v1.Drag
[120] :684:CALL           v0:Disconnect()
end
[121] :685:RETURN         return
end
[020] :670:CALL           v1 = v1:Connect(v3)
[022] :670:SETTABLEKS     p28.Drag = v1
[024] :686:RETURN         return
end
v45 = DragBall
[301] :410:SETTABLEKS     v39.DragBall = v45
[302] :433:DUPCLOSURE     
local function LocalDragBall(p30, p31)
-- proto pool id: 33
-- num upvalues: 3
-- num inner protos: 1
-- size instructions: 30
-- size constants: 6
-- lineinfo gap: 24
-- max stack size: 7
-- is typed: false
[002] :690:GETTABLEKS     v0 = p30.LocalDrag
[003] :690:JUMPIFNOT      if v0 then -- goto #8
[005] :690:GETTABLEKS     v0 = p30.LocalDrag
[008] :690:CALL           v0:Destroy()
[009] :691:GETUPVAL       v1 = u_v13
[011] :691:GETTABLEKS     v0 = v1.new
[012] :691:CALL           v0 = v0()
[014] :691:SETTABLEKS     p30.LocalDrag = v0
[015] :693:LOADK          v0 = 0.999
[017] :694:GETTABLEKS     v1 = p30.LocalDrag
[018] :694:GETUPVAL       v4 = u_v4
[020] :694:GETTABLEKS     v3 = v4.Heartbeat
[021] :694:NEWCLOSURE     v4 = function(p32)
-- proto pool id: 32
-- num upvalues: 4
-- num inner protos: 0
-- size instructions: 95
-- size constants: 16
-- lineinfo gap: 24
-- max stack size: 7
-- is typed: true
[001] :695:GETUPVAL       v3 = u_v0
[003] :695:GETTABLEKS     v2 = v3.Football
[005] :695:GETTABLEKS     v1 = v2.Value
[007] :695:GETTABLEKS     v0 = v1.Parent
[009] :695:GETIMPORT      v1 = workspace
[011] :695:JUMPIFEQ       if v0 == v1 then -- goto #19
[012] :695:GETUPVAL       v1 = u_v0
[014] :695:GETTABLEKS     v0 = v1.LocalDrag
[017] :695:CALL           v0:Destroy()
[018] :695:RETURN         return
end
[019] :696:GETUPVAL       v4 = u_v0
[021] :696:GETTABLEKS     v3 = v4.Football
[023] :696:GETTABLEKS     v2 = v3.Value
[025] :696:GETTABLEKS     v1 = v2.OnPlayer
[027] :696:GETTABLEKS     v0 = v1.Value
[028] :696:JUMPIFNOT      if v0 then -- goto #35
[029] :696:GETUPVAL       v1 = u_v0
[031] :696:GETTABLEKS     v0 = v1.LocalDrag
[034] :696:CALL           v0:Destroy()
end
[035] :696:RETURN         return
[036] :698:GETUPVAL       v2 = u_v1
[038] :698:GETTABLEKS     v1 = v2.Position
[040] :698:GETTABLEKS     v0 = v1.Y
[041] :698:LOADN          v1 = 20
[043] :698:JUMPIFNOTLE    if v0 <= v1 then -- goto #59
[044] :699:GETUPVAL       v1 = u_v1
[046] :699:GETTABLEKS     v0 = v1.AssemblyLinearVelocity
[047] :700:GETUPVAL       v1 = u_v2
[048] :700:DIVK           v2 = p32 / 40
[049] :700:SUB            v1 = v1 - v2
[050] :700:SETUPVAL       u_v2 = v1
[051] :701:GETUPVAL       v1 = u_v1
[053] :701:GETTABLEKS     v2 = v1.AssemblyLinearVelocity
[054] :701:GETUPVAL       v3 = u_v2
[055] :701:MUL            v2 = v2 * v3
[057] :701:SETTABLEKS     v1.AssemblyLinearVelocity = v2
[058] :701:JUMP           -- jump to #80
end
[059] :702:GETUPVAL       v2 = u_v1
[061] :702:GETTABLEKS     v1 = v2.Position
[063] :702:GETTABLEKS     v0 = v1.Y
[064] :702:LOADN          v1 = 33
[066] :702:JUMPIFNOTLE    if v1 <= v0 then -- goto #81
[067] :703:GETUPVAL       v0 = u_v1
[069] :703:GETTABLEKS     v1 = v0.AssemblyLinearVelocity
[070] :703:LOADN          v3 = 0
[071] :703:LOADN          v5 = 5
[072] :703:MUL            v4 = v5 * p32
[073] :703:LOADN          v5 = 0
[076] :703:GETIMPORT      v2 = Vector3.new
[077] :703:CALL           v2 = v2(v3, v4, v5)
[078] :703:ADD            v1 = v1 + v2
[080] :703:SETTABLEKS     v0.AssemblyLinearVelocity = v1
end
[081] :706:GETUPVAL       v2 = u_v1
[083] :706:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[085] :706:GETTABLEKS     v0 = v1.Magnitude
[086] :706:LOADN          v1 = 10
[088] :706:JUMPIFNOTLE    if v0 <= v1 then -- goto #95
[089] :706:GETUPVAL       v1 = u_v0
[091] :706:GETTABLEKS     v0 = v1.LocalDrag
[094] :706:CALL           v0:Destroy()
end
[095] :707:RETURN         return
end
[028] :694:CALL           v1:Connect(v3, v4)
[030] :708:RETURN         return
end
v45 = LocalDragBall
[307] :433:SETTABLEKS     v39.LocalDragBall = v45
[308] :454:NEWCLOSURE     
local function CheckInput(p33)
-- proto pool id: 39
-- num upvalues: 6
-- num inner protos: 5
-- size instructions: 125
-- size constants: 29
-- lineinfo gap: 24
-- max stack size: 12
-- is typed: false
[002] :711:GETIMPORT      v0 = tick
[003] :711:CALL           v0 = v0()
[004] :712:GETUPVAL       v2 = u_v10
[006] :712:GETTABLEKS     v1 = v2.GetController
[007] :712:LOADK          v2 = "AwakeningController"
[008] :712:CALL           v1 = v1(v2)
[010] :712:SETTABLEKS     p33.Awakening = v1
[011] :713:GETUPVAL       v2 = u_v10
[013] :713:GETTABLEKS     v1 = v2.GetService
[014] :713:LOADK          v2 = "EffectsService"
[015] :713:CALL           v1 = v1(v2)
[017] :713:SETTABLEKS     p33.Effects = v1
[018] :714:GETUPVAL       v2 = u_v10
[020] :714:GETTABLEKS     v1 = v2.GetController
[021] :714:LOADK          v2 = "Settings"
[022] :714:CALL           v1 = v1(v2)
[024] :714:SETTABLEKS     p33.Settings = v1
[025] :715:GETUPVAL       v2 = u_v10
[027] :715:GETTABLEKS     v1 = v2.GetController
[028] :715:LOADK          v2 = "CameraController"
[029] :715:CALL           v1 = v1(v2)
[031] :715:SETTABLEKS     p33.Camera = v1
[032] :717:GETUPVAL       v2 = u_v1
[034] :717:GETTABLEKS     v1 = v2.TouchEnabled
[035] :717:JUMPIFNOT      if v1 then -- goto #98
[036] :718:GETUPVAL       v2 = u_v19
[038] :718:GETTABLEKS     v1 = v2.PlayerGui
[039] :718:LOADK          v3 = "Mobile"
[042] :718:CALL           v1 = v1:WaitForChild(v3)
[045] :718:CALL           v1 = v1:GetDescendants()
[047] :719:GETIMPORT      v2 = pairs
[048] :719:MOVE           v3 = v1
[049] :719:CALL           v2, v3, v4 = v2(v3)
[050] :719:FORGPREP_NEXT  for v5, v6 in pairs(v3) do -- could be doing next, t
[051] :720:LOADK          v9 = "ImageButton"
[054] :720:CALL           v7 = v7:IsA(v9)
[056] :720:JUMPXEQKB      if v7 ~= false then -- goto #97
[058] :722:GETTABLEKS     v7 = p33.BaseTrove
[060] :722:GETTABLEKS     v9 = v6.MouseButton1Down
[061] :722:NEWCLOSURE     v10 = function()
-- proto pool id: 34
-- num upvalues: 4
-- num inner protos: 0
-- size instructions: 52
-- size constants: 15
-- lineinfo gap: 24
-- max stack size: 4
-- is typed: false
[001] :723:GETUPVAL       v2 = u_v0
[003] :723:GETTABLEKS     v1 = v2.Camera
[005] :723:GETTABLEKS     v0 = v1.Cutscene
[006] :723:JUMPIFNOT      if v0 then -- goto #7
end
[007] :723:RETURN         return
[008] :724:GETUPVAL       v1 = u_v19
[010] :724:GETTABLEKS     v0 = v1.Team
[012] :724:GETIMPORT      v3 = game
[014] :724:GETTABLEKS     v2 = v3.Teams
[016] :724:GETTABLEKS     v1 = v2.Visitor
[018] :724:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #20
[019] :724:RETURN         return
end
[020] :726:GETUPVAL       v2 = u_v25
[022] :726:GETTABLEKS     v1 = v2.IsRagdoll
[024] :726:GETTABLEKS     v0 = v1.Value
[025] :726:JUMPIFNOT      if v0 then -- goto #26
end
[026] :726:RETURN         return
[027] :727:GETUPVAL       v3 = u_v0
[029] :727:GETTABLEKS     v2 = v3.StatesController
[031] :727:GETTABLEKS     v1 = v2.States
[033] :727:GETTABLEKS     v0 = v1.Ability
[034] :727:JUMPIFNOT      if v0 then -- goto #35
end
[035] :727:RETURN         return
[036] :728:GETUPVAL       v2 = u_v0
[038] :728:GETTABLEKS     v1 = v2.StatesController
[040] :728:GETTABLEKS     v0 = v1.NoShoot
[041] :728:JUMPIFNOT      if v0 then -- goto #42
end
[042] :728:RETURN         return
[043] :730:GETUPVAL       v1 = u_v7
[045] :730:GETTABLEKS     v0 = v1.Name
[047] :730:JUMPXEQKS      if v0 == "Shoot" then -- goto #52
[048] :731:GETUPVAL       v0 = u_v0
[051] :731:CALL           v0:Shoot()
end
[052] :733:RETURN         return
end
[068] :722:CALL           v7:Connect(v9, v10)
[070] :735:GETTABLEKS     v7 = p33.BaseTrove
[072] :735:GETTABLEKS     v9 = v6.MouseButton1Click
[073] :735:NEWCLOSURE     v10 = function()
-- proto pool id: 35
-- num upvalues: 7
-- num inner protos: 0
-- size instructions: 263
-- size constants: 46
-- lineinfo gap: 24
-- max stack size: 7
-- is typed: false
[001] :736:GETUPVAL       v2 = u_v0
[003] :736:GETTABLEKS     v1 = v2.Camera
[005] :736:GETTABLEKS     v0 = v1.Cutscene
[006] :736:JUMPIFNOT      if v0 then -- goto #7
end
[007] :736:RETURN         return
[008] :737:GETUPVAL       v1 = u_v19
[010] :737:GETTABLEKS     v0 = v1.Team
[012] :737:GETIMPORT      v3 = game
[014] :737:GETTABLEKS     v2 = v3.Teams
[016] :737:GETTABLEKS     v1 = v2.Visitor
[018] :737:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #20
[019] :737:RETURN         return
end
[020] :739:GETUPVAL       v2 = u_v25
[022] :739:GETTABLEKS     v1 = v2.IsRagdoll
[024] :739:GETTABLEKS     v0 = v1.Value
[025] :739:JUMPIFNOT      if v0 then -- goto #26
end
[026] :739:RETURN         return
[027] :740:GETUPVAL       v3 = u_v0
[029] :740:GETTABLEKS     v2 = v3.StatesController
[031] :740:GETTABLEKS     v1 = v2.States
[033] :740:GETTABLEKS     v0 = v1.Ability
[034] :740:JUMPIFNOT      if v0 then -- goto #35
end
[035] :740:RETURN         return
[036] :742:GETUPVAL       v3 = u_v25
[038] :742:GETTABLEKS     v2 = v3.Values
[040] :742:GETTABLEKS     v1 = v2.Goalie
[042] :742:GETTABLEKS     v0 = v1.Value
[043] :742:JUMPIFNOT      if v0 then -- goto #50
[044] :742:GETUPVAL       v3 = u_v25
[046] :742:GETTABLEKS     v2 = v3.Values
[048] :742:GETTABLEKS     v1 = v2.IsInPenalty
[050] :742:GETTABLEKS     v0 = v1.Value
[051] :744:GETUPVAL       v2 = u_v7
[053] :744:GETTABLEKS     v1 = v2.Name
[055] :744:JUMPXEQKS      if v1 == "Run" then -- goto #72
[056] :745:GETUPVAL       v3 = u_v0
[058] :745:GETTABLEKS     v2 = v3.StatesController
[060] :745:GETTABLEKS     v1 = v2.States
[061] :745:GETUPVAL       v6 = u_v0
[063] :745:GETTABLEKS     v5 = v6.StatesController
[065] :745:GETTABLEKS     v4 = v5.States
[067] :745:GETTABLEKS     v3 = v4.Running
[068] :745:NOT            v2 = not v3
[070] :745:SETTABLEKS     v1.Running = v2
[071] :745:RETURN         return
end
[072] :746:GETUPVAL       v2 = u_v7
[074] :746:GETTABLEKS     v1 = v2.Name
[076] :746:JUMPXEQKS      if v1 == "Bicycle" then -- goto #82
[077] :747:GETUPVAL       v1 = u_v0
[080] :747:CALL           v1:Bicycle()
[081] :747:RETURN         return
end
[082] :748:GETUPVAL       v2 = u_v7
[084] :748:GETTABLEKS     v1 = v2.Name
[086] :748:JUMPXEQKS      if v1 == "Pass" then -- goto #92
[087] :749:GETUPVAL       v1 = u_v0
[090] :749:CALL           v1:Pass()
[091] :749:RETURN         return
end
[092] :750:GETUPVAL       v2 = u_v7
[094] :750:GETTABLEKS     v1 = v2.Name
[096] :750:JUMPXEQKS      if v1 == "Dribble" then -- goto #103
[097] :750:JUMPIF         if not v0 then -- goto #102
[098] :751:GETUPVAL       v1 = u_v0
[101] :751:CALL           v1:Dribble()
end
[102] :751:RETURN         return
end
[103] :752:GETUPVAL       v2 = u_v7
[105] :752:GETTABLEKS     v1 = v2.Name
[107] :752:JUMPXEQKS      if v1 == "Slide" then -- goto #113
[108] :753:GETUPVAL       v1 = u_v0
[111] :753:CALL           v1:Slide()
[112] :753:RETURN         return
end
[113] :754:GETUPVAL       v2 = u_v7
[115] :754:GETTABLEKS     v1 = v2.Name
[117] :754:JUMPXEQKS      if v1 == "Awaken" then -- goto #125
[118] :755:GETUPVAL       v2 = u_v0
[120] :755:GETTABLEKS     v1 = v2.Awakening
[123] :755:CALL           v1:Awakening()
[124] :755:RETURN         return
end
[125] :756:GETUPVAL       v2 = u_v7
[127] :756:GETTABLEKS     v1 = v2.Name
[129] :756:JUMPXEQKS      if v1 == "Shoot" then -- goto #135
[130] :757:GETUPVAL       v1 = u_v0
[131] :757:LOADB          v2 = false
[133] :757:SETTABLEKS     v1.HoldingShoot = v2
[134] :757:RETURN         return
end
[135] :758:GETUPVAL       v2 = u_v7
[137] :758:GETTABLEKS     v1 = v2.Name
[139] :758:JUMPXEQKS      if v1 == "Request" then -- goto #197
[140] :759:GETUPVAL       v1 = u_v1
[142] :759:GETIMPORT      v2 = tick
[143] :759:CALL           v2 = v2()
[145] :759:JUMPIFNOTLT    if v2 < v1 then -- goto #147
[146] :759:RETURN         return
end
[148] :760:GETIMPORT      v2 = tick
[149] :760:CALL           v2 = v2()
[150] :760:ADDK           v1 = v2 + 3
[151] :760:SETUPVAL       u_v1 = v1
[152] :762:GETUPVAL       v3 = u_v0
[154] :762:GETTABLEKS     v2 = v3.Effects
[156] :762:GETTABLEKS     v1 = v2.Vfx
[157] :762:GETUPVAL       v5 = u_v0
[159] :762:GETTABLEKS     v4 = v5.Effects
[161] :762:GETTABLEKS     v3 = v4.Pass
[162] :762:DUPTABLE       v4 = {} -- {"Char"}
[163] :762:GETUPVAL       v5 = u_v25
[165] :762:SETTABLEKS     v4.Char = v5
[168] :762:CALL           v1:Fire(v3, v4)
[169] :764:GETUPVAL       v2 = u_v0
[171] :764:GETTABLEKS     v1 = v2.Animations
[174] :764:CALL           v1:StopAnims()
[175] :765:GETUPVAL       v4 = u_v0
[177] :765:GETTABLEKS     v3 = v4.Animations
[179] :765:GETTABLEKS     v2 = v3.Movement
[181] :765:GETTABLEKS     v1 = v2.Request
[183] :765:GETIMPORT      v2 = Enum.AnimationPriority.Action2
[185] :765:SETTABLEKS     v1.Priority = v2
[186] :766:GETUPVAL       v4 = u_v0
[188] :766:GETTABLEKS     v3 = v4.Animations
[190] :766:GETTABLEKS     v2 = v3.Movement
[192] :766:GETTABLEKS     v1 = v2.Request
[195] :766:CALL           v1:Play()
[196] :766:RETURN         return
end
[197] :767:GETUPVAL       v2 = u_v7
[199] :767:GETTABLEKS     v1 = v2.Name
[201] :767:JUMPXEQKS      if v1 == "RequestCR" then -- goto #263
[202] :768:GETUPVAL       v1 = u_v21
[203] :768:GETUPVAL       v2 = u_v19
[204] :768:CALL           v1 = v1(v2)
[205] :768:JUMPIF         if not v1 then -- goto #206
end
[206] :769:RETURN         return
[207] :772:GETUPVAL       v1 = u_v1
[209] :772:GETIMPORT      v2 = tick
[210] :772:CALL           v2 = v2()
[212] :772:JUMPIFNOTLT    if v2 < v1 then -- goto #214
[213] :772:RETURN         return
end
[215] :773:GETIMPORT      v2 = tick
[216] :773:CALL           v2 = v2()
[217] :773:ADDK           v1 = v2 + 3
[218] :773:SETUPVAL       u_v1 = v1
[219] :775:GETUPVAL       v3 = u_v0
[221] :775:GETTABLEKS     v2 = v3.Effects
[223] :775:GETTABLEKS     v1 = v2.Vfx
[224] :775:GETUPVAL       v5 = u_v0
[226] :775:GETTABLEKS     v4 = v5.Effects
[228] :775:GETTABLEKS     v3 = v4.PassCR
[229] :775:DUPTABLE       v4 = {} -- {"Char"}
[230] :775:GETUPVAL       v5 = u_v25
[232] :775:SETTABLEKS     v4.Char = v5
[235] :775:CALL           v1:Fire(v3, v4)
[236] :777:GETUPVAL       v2 = u_v0
[238] :777:GETTABLEKS     v1 = v2.Animations
[241] :777:CALL           v1:StopAnims()
[242] :778:GETUPVAL       v4 = u_v0
[244] :778:GETTABLEKS     v3 = v4.Animations
[246] :778:GETTABLEKS     v2 = v3.Movement
[248] :778:GETTABLEKS     v1 = v2.Request
[250] :778:GETIMPORT      v2 = Enum.AnimationPriority.Action2
[252] :778:SETTABLEKS     v1.Priority = v2
[253] :779:GETUPVAL       v4 = u_v0
[255] :779:GETTABLEKS     v3 = v4.Animations
[257] :779:GETTABLEKS     v2 = v3.Movement
[259] :779:GETTABLEKS     v1 = v2.Request
[262] :779:CALL           v1:Play()
end
[263] :781:RETURN         return
end
[083] :735:CALL           v7:Connect(v9, v10)
[085] :783:GETTABLEKS     v7 = v6.Name
[087] :783:JUMPXEQKS      if v7 == "Shoot" then -- goto #97
[089] :784:GETTABLEKS     v7 = p33.BaseTrove
[091] :784:GETTABLEKS     v9 = v6.MouseButton1Up
[092] :784:NEWCLOSURE     v10 = function()
-- proto pool id: 36
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 5
-- size constants: 1
-- lineinfo gap: 24
-- max stack size: 2
-- is typed: false
[001] :785:GETUPVAL       v0 = u_v0
[002] :785:LOADB          v1 = false
[004] :785:SETTABLEKS     v0.HoldingShoot = v1
[005] :786:RETURN         return
end
[096] :784:CALL           v7:Connect(v9, v10)
end
end
[098] :719:FORGLOOP       end -- iterate + jump to #51
[100] :793:GETTABLEKS     v1 = p33.BaseTrove
[101] :793:GETUPVAL       v4 = u_v1
[103] :793:GETTABLEKS     v3 = v4.InputBegan
[104] :793:NEWCLOSURE     v4 = function(p34, p35)
-- proto pool id: 37
-- num upvalues: 6
-- num inner protos: 0
-- size instructions: 394
-- size constants: 62
-- lineinfo gap: 24
-- max stack size: 11
-- is typed: false
[001] :794:JUMPIFNOT      if p35 then -- goto #2
end
[002] :794:RETURN         return
[003] :795:GETUPVAL       v2 = u_v0
[005] :795:GETTABLEKS     v1 = v2.Camera
[007] :795:GETTABLEKS     v0 = v1.Cutscene
[008] :795:JUMPIFNOT      if v0 then -- goto #9
end
[009] :795:RETURN         return
[010] :796:GETUPVAL       v1 = u_v19
[012] :796:GETTABLEKS     v0 = v1.Team
[014] :796:GETIMPORT      v3 = game
[016] :796:GETTABLEKS     v2 = v3.Teams
[018] :796:GETTABLEKS     v1 = v2.Visitor
[020] :796:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #22
[021] :796:RETURN         return
end
[022] :798:GETUPVAL       v2 = u_v25
[024] :798:GETTABLEKS     v1 = v2.IsRagdoll
[026] :798:GETTABLEKS     v0 = v1.Value
[027] :798:JUMPIFNOT      if v0 then -- goto #28
end
[028] :798:RETURN         return
[029] :799:GETUPVAL       v3 = u_v0
[031] :799:GETTABLEKS     v2 = v3.StatesController
[033] :799:GETTABLEKS     v1 = v2.States
[035] :799:GETTABLEKS     v0 = v1.Ability
[036] :799:JUMPIFNOT      if v0 then -- goto #37
end
[037] :799:RETURN         return
[038] :800:GETUPVAL       v2 = u_v0
[040] :800:GETTABLEKS     v1 = v2.StatesController
[042] :800:GETTABLEKS     v0 = v1.NoShoot
[043] :800:JUMPIFNOT      if v0 then -- goto #44
end
[044] :800:RETURN         return
[046] :802:GETTABLEKS     v0 = p34.KeyCode
[048] :802:GETIMPORT      v1 = Enum.KeyCode.LeftShift
[050] :802:JUMPIFEQ       if v0 == v1 then -- goto #57
[052] :802:GETTABLEKS     v0 = p34.KeyCode
[054] :802:GETIMPORT      v1 = Enum.KeyCode.ButtonL2
[056] :802:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #90
end
[057] :803:GETUPVAL       v3 = u_v0
[059] :803:GETTABLEKS     v2 = v3.Settings
[061] :803:GETTABLEKS     v1 = v2.SettingsData
[063] :803:GETTABLEKS     v0 = v1.RunLock
[065] :803:JUMPXEQKB      if v0 == true then -- goto #82
[066] :804:GETUPVAL       v2 = u_v0
[068] :804:GETTABLEKS     v1 = v2.StatesController
[070] :804:GETTABLEKS     v0 = v1.States
[071] :804:GETUPVAL       v5 = u_v0
[073] :804:GETTABLEKS     v4 = v5.StatesController
[075] :804:GETTABLEKS     v3 = v4.States
[077] :804:GETTABLEKS     v2 = v3.Running
[078] :804:NOT            v1 = not v2
[080] :804:SETTABLEKS     v0.Running = v1
[081] :804:JUMP           -- jump to #89
end
[082] :806:GETUPVAL       v2 = u_v0
[084] :806:GETTABLEKS     v1 = v2.StatesController
[086] :806:GETTABLEKS     v0 = v1.States
[087] :806:LOADB          v1 = true
[089] :806:SETTABLEKS     v0.Running = v1
end
[090] :810:GETUPVAL       v3 = u_v25
[092] :810:GETTABLEKS     v2 = v3.Values
[094] :810:GETTABLEKS     v1 = v2.Goalie
[096] :810:GETTABLEKS     v0 = v1.Value
[097] :810:JUMPIFNOT      if v0 then -- goto #104
[098] :810:GETUPVAL       v3 = u_v25
[100] :810:GETTABLEKS     v2 = v3.Values
[102] :810:GETTABLEKS     v1 = v2.IsInPenalty
[104] :810:GETTABLEKS     v0 = v1.Value
[106] :812:GETTABLEKS     v1 = p34.UserInputType
[108] :812:GETIMPORT      v2 = Enum.UserInputType.MouseButton1
[110] :812:JUMPIFEQ       if v1 == v2 then -- goto #117
[112] :812:GETTABLEKS     v1 = p34.KeyCode
[114] :812:GETIMPORT      v2 = Enum.KeyCode.ButtonR2
[116] :812:JUMPIFNOTEQ    if v1 ~= v2 then -- goto #122
end
[117] :813:GETUPVAL       v1 = u_v0
[120] :813:CALL           v1:Shoot()
[121] :813:JUMP           -- jump to #174
end
[123] :814:GETTABLEKS     v1 = p34.UserInputType
[125] :814:GETIMPORT      v2 = Enum.UserInputType.MouseButton2
[127] :814:JUMPIFEQ       if v1 == v2 then -- goto #134
[129] :814:GETTABLEKS     v1 = p34.KeyCode
[131] :814:GETIMPORT      v2 = Enum.KeyCode.ButtonL1
[133] :814:JUMPIFNOTEQ    if v1 ~= v2 then -- goto #139
end
[134] :815:GETUPVAL       v1 = u_v0
[137] :815:CALL           v1:Pass()
[138] :815:JUMP           -- jump to #174
end
[140] :816:GETTABLEKS     v1 = p34.KeyCode
[142] :816:GETIMPORT      v3 = Enum.KeyCode
[143] :816:GETUPVAL       v8 = u_v0
[145] :816:GETTABLEKS     v7 = v8.Settings
[147] :816:GETTABLEKS     v6 = v7.Keybinds
[149] :816:GETTABLEKS     v5 = v6.PC
[151] :816:GETTABLEKS     v4 = v5.Slide
[152] :816:GETTABLE       v2 = v3[v4]
[154] :816:JUMPIFEQ       if v1 == v2 then -- goto #171
[156] :816:GETTABLEKS     v1 = p34.KeyCode
[158] :816:GETIMPORT      v3 = Enum.KeyCode
[159] :816:GETUPVAL       v8 = u_v0
[161] :816:GETTABLEKS     v7 = v8.Settings
[163] :816:GETTABLEKS     v6 = v7.Keybinds
[165] :816:GETTABLEKS     v5 = v6.Console
[167] :816:GETTABLEKS     v4 = v5.Slide
[168] :816:GETTABLE       v2 = v3[v4]
[170] :816:JUMPIFNOTEQ    if v1 ~= v2 then -- goto #175
end
[171] :817:GETUPVAL       v1 = u_v0
[174] :817:CALL           v1:Slide()
end
[176] :820:GETTABLEKS     v1 = p34.KeyCode
[178] :820:GETIMPORT      v3 = Enum.KeyCode
[179] :820:GETUPVAL       v8 = u_v0
[181] :820:GETTABLEKS     v7 = v8.Settings
[183] :820:GETTABLEKS     v6 = v7.Keybinds
[185] :820:GETTABLEKS     v5 = v6.PC
[187] :820:GETTABLEKS     v4 = v5.Dribble
[188] :820:GETTABLE       v2 = v3[v4]
[190] :820:JUMPIFEQ       if v1 == v2 then -- goto #207
[192] :820:GETTABLEKS     v1 = p34.KeyCode
[194] :820:GETIMPORT      v3 = Enum.KeyCode
[195] :820:GETUPVAL       v8 = u_v0
[197] :820:GETTABLEKS     v7 = v8.Settings
[199] :820:GETTABLEKS     v6 = v7.Keybinds
[201] :820:GETTABLEKS     v5 = v6.Console
[203] :820:GETTABLEKS     v4 = v5.Dribble
[204] :820:GETTABLE       v2 = v3[v4]
[206] :820:JUMPIFNOTEQ    if v1 ~= v2 then -- goto #212
end
[207] :820:JUMPIF         if not v0 then -- goto #211
[208] :821:GETUPVAL       v1 = u_v0
[211] :821:CALL           v1:Dribble()
end
[213] :824:GETTABLEKS     v1 = p34.KeyCode
[215] :824:GETIMPORT      v3 = Enum.KeyCode
[216] :824:GETUPVAL       v8 = u_v0
[218] :824:GETTABLEKS     v7 = v8.Settings
[220] :824:GETTABLEKS     v6 = v7.Keybinds
[222] :824:GETTABLEKS     v5 = v6.PC
[224] :824:GETTABLEKS     v4 = v5.Request
[225] :824:GETTABLE       v2 = v3[v4]
[227] :824:JUMPIFEQ       if v1 == v2 then -- goto #244
[229] :824:GETTABLEKS     v1 = p34.KeyCode
[231] :824:GETIMPORT      v3 = Enum.KeyCode
[232] :824:GETUPVAL       v8 = u_v0
[234] :824:GETTABLEKS     v7 = v8.Settings
[236] :824:GETTABLEKS     v6 = v7.Keybinds
[238] :824:GETTABLEKS     v5 = v6.Console
[240] :824:GETTABLEKS     v4 = v5.Request
[241] :824:GETTABLE       v2 = v3[v4]
[243] :824:JUMPIFNOTEQ    if v1 ~= v2 then -- goto #301
end
[244] :825:GETUPVAL       v1 = u_v1
[246] :825:GETIMPORT      v2 = tick
[247] :825:CALL           v2 = v2()
[249] :825:JUMPIFNOTLT    if v2 < v1 then -- goto #251
[250] :825:RETURN         return
end
[252] :826:GETIMPORT      v2 = tick
[253] :826:CALL           v2 = v2()
[254] :826:ADDK           v1 = v2 + 3
[255] :826:SETUPVAL       u_v1 = v1
[256] :828:GETUPVAL       v3 = u_v0
[258] :828:GETTABLEKS     v2 = v3.Effects
[260] :828:GETTABLEKS     v1 = v2.Vfx
[261] :828:GETUPVAL       v5 = u_v0
[263] :828:GETTABLEKS     v4 = v5.Effects
[265] :828:GETTABLEKS     v3 = v4.Pass
[266] :828:DUPTABLE       v4 = {} -- {"Char"}
[267] :828:GETUPVAL       v5 = u_v25
[269] :828:SETTABLEKS     v4.Char = v5
[272] :828:CALL           v1:Fire(v3, v4)
[273] :830:GETUPVAL       v2 = u_v0
[275] :830:GETTABLEKS     v1 = v2.Animations
[278] :830:CALL           v1:StopAnims()
[279] :831:GETUPVAL       v4 = u_v0
[281] :831:GETTABLEKS     v3 = v4.Animations
[283] :831:GETTABLEKS     v2 = v3.Movement
[285] :831:GETTABLEKS     v1 = v2.Request
[287] :831:GETIMPORT      v2 = Enum.AnimationPriority.Action2
[289] :831:SETTABLEKS     v1.Priority = v2
[290] :832:GETUPVAL       v4 = u_v0
[292] :832:GETTABLEKS     v3 = v4.Animations
[294] :832:GETTABLEKS     v2 = v3.Movement
[296] :832:GETTABLEKS     v1 = v2.Request
[299] :832:CALL           v1:Play()
[300] :832:RETURN         return
end
[302] :833:GETTABLEKS     v1 = p34.KeyCode
[304] :833:GETIMPORT      v3 = Enum.KeyCode
[305] :833:GETUPVAL       v8 = u_v0
[307] :833:GETTABLEKS     v7 = v8.Settings
[309] :833:GETTABLEKS     v6 = v7.Keybinds
[311] :833:GETTABLEKS     v5 = v6.PC
[313] :833:GETTABLEKS     v4 = v5.RequestCR
[314] :833:GETTABLE       v2 = v3[v4]
[316] :833:JUMPIFEQ       if v1 == v2 then -- goto #333
[318] :833:GETTABLEKS     v1 = p34.KeyCode
[320] :833:GETIMPORT      v3 = Enum.KeyCode
[321] :833:GETUPVAL       v8 = u_v0
[323] :833:GETTABLEKS     v7 = v8.Settings
[325] :833:GETTABLEKS     v6 = v7.Keybinds
[327] :833:GETTABLEKS     v5 = v6.Console
[329] :833:GETTABLEKS     v4 = v5.RequestCR
[330] :833:GETTABLE       v2 = v3[v4]
[332] :833:JUMPIFNOTEQ    if v1 ~= v2 then -- goto #394
end
[333] :834:GETUPVAL       v1 = u_v21
[334] :834:GETUPVAL       v2 = u_v19
[335] :834:CALL           v1 = v1(v2)
[336] :834:JUMPIF         if not v1 then -- goto #337
end
[337] :835:RETURN         return
[338] :837:GETUPVAL       v1 = u_v1
[340] :837:GETIMPORT      v2 = tick
[341] :837:CALL           v2 = v2()
[343] :837:JUMPIFNOTLT    if v2 < v1 then -- goto #345
[344] :837:RETURN         return
end
[346] :838:GETIMPORT      v2 = tick
[347] :838:CALL           v2 = v2()
[348] :838:ADDK           v1 = v2 + 3
[349] :838:SETUPVAL       u_v1 = v1
[350] :840:GETUPVAL       v3 = u_v0
[352] :840:GETTABLEKS     v2 = v3.Effects
[354] :840:GETTABLEKS     v1 = v2.Vfx
[355] :840:GETUPVAL       v5 = u_v0
[357] :840:GETTABLEKS     v4 = v5.Effects
[359] :840:GETTABLEKS     v3 = v4.PassCR
[360] :840:DUPTABLE       v4 = {} -- {"Char"}
[361] :840:GETUPVAL       v5 = u_v25
[363] :840:SETTABLEKS     v4.Char = v5
[366] :840:CALL           v1:Fire(v3, v4)
[367] :842:GETUPVAL       v2 = u_v0
[369] :842:GETTABLEKS     v1 = v2.Animations
[372] :842:CALL           v1:StopAnims()
[373] :843:GETUPVAL       v4 = u_v0
[375] :843:GETTABLEKS     v3 = v4.Animations
[377] :843:GETTABLEKS     v2 = v3.Movement
[379] :843:GETTABLEKS     v1 = v2.Request
[381] :843:GETIMPORT      v2 = Enum.AnimationPriority.Action2
[383] :843:SETTABLEKS     v1.Priority = v2
[384] :844:GETUPVAL       v4 = u_v0
[386] :844:GETTABLEKS     v3 = v4.Animations
[388] :844:GETTABLEKS     v2 = v3.Movement
[390] :844:GETTABLEKS     v1 = v2.Request
[393] :844:CALL           v1:Play()
end
[394] :846:RETURN         return
end
[113] :793:CALL           v1:Connect(v3, v4)
[115] :848:GETTABLEKS     v1 = p35.BaseTrove
[116] :848:GETUPVAL       v4 = u_v1
[118] :848:GETTABLEKS     v3 = v4.InputEnded
[119] :848:NEWCLOSURE     v4 = function(p36, p37)
-- proto pool id: 38
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 48
-- size constants: 18
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :849:JUMPIFNOT      if p37 then -- goto #2
end
[002] :849:RETURN         return
[004] :851:GETTABLEKS     v0 = p36.UserInputType
[006] :851:GETIMPORT      v1 = Enum.UserInputType.MouseButton1
[008] :851:JUMPIFEQ       if v0 == v1 then -- goto #15
[010] :851:GETTABLEKS     v0 = p36.KeyCode
[012] :851:GETIMPORT      v1 = Enum.KeyCode.ButtonR2
[014] :851:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #19
end
[015] :852:GETUPVAL       v0 = u_v0
[016] :852:LOADB          v1 = false
[018] :852:SETTABLEKS     v0.HoldingShoot = v1
end
[020] :855:GETTABLEKS     v0 = p36.KeyCode
[022] :855:GETIMPORT      v1 = Enum.KeyCode.LeftShift
[024] :855:JUMPIFEQ       if v0 == v1 then -- goto #31
[026] :855:GETTABLEKS     v0 = p36.KeyCode
[028] :855:GETIMPORT      v1 = Enum.KeyCode.ButtonL2
[030] :855:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #48
end
[031] :856:GETUPVAL       v3 = u_v0
[033] :856:GETTABLEKS     v2 = v3.Settings
[035] :856:GETTABLEKS     v1 = v2.SettingsData
[037] :856:GETTABLEKS     v0 = v1.RunLock
[039] :856:JUMPXEQKB      if v0 == false then -- goto #48
[040] :857:GETUPVAL       v2 = u_v0
[042] :857:GETTABLEKS     v1 = v2.StatesController
[044] :857:GETTABLEKS     v0 = v1.States
[045] :857:LOADB          v1 = false
[047] :857:SETTABLEKS     v0.Running = v1
end
end
[048] :860:RETURN         return
end
[123] :848:CALL           v1:Connect(v3, v4)
[125] :861:RETURN         return
end
v45 = CheckInput
[316] :454:SETTABLEKS     v39.CheckInput = v45
[317] :607:NEWCLOSURE     
local function Predict(p38, p39, p40)
-- proto pool id: 42
-- num upvalues: 5
-- num inner protos: 2
-- size instructions: 204
-- size constants: 34
-- lineinfo gap: 24
-- max stack size: 11
-- is typed: false
[002] :864:GETTABLEKS     v0 = p38.PredictOBJ
[003] :864:JUMPIFNOT      if v0 then -- goto #8
[005] :865:GETTABLEKS     v0 = p38.PredictOBJ
[008] :865:CALL           v0:Destroy()
[010] :868:GETTABLEKS     v0 = p38.PredictionTrove
[011] :868:JUMPIFNOT      if v0 then -- goto #16
[013] :869:GETTABLEKS     v0 = p38.PredictionTrove
[016] :869:CALL           v0:Disconnect()
[017] :872:GETUPVAL       v3 = u_v25
[019] :872:GETTABLEKS     v2 = v3.Values
[021] :872:GETTABLEKS     v1 = v2.Goalie
[023] :872:GETTABLEKS     v0 = v1.Value
[024] :872:JUMPIFNOT      if v0 then -- goto #137
[025] :872:GETUPVAL       v3 = u_v25
[027] :872:GETTABLEKS     v2 = v3.Values
[029] :872:GETTABLEKS     v1 = v2.IsInPenalty
[031] :872:GETTABLEKS     v0 = v1.Value
[032] :872:JUMPIFNOT      if v0 then -- goto #137
[033] :873:GETUPVAL       v3 = u_v0
[035] :873:GETTABLEKS     v2 = v3.Assets
[037] :873:GETTABLEKS     v1 = v2.Misc
[039] :873:GETTABLEKS     v0 = v1.GkPredict
[042] :873:CALL           v0 = v0:Clone()
[044] :873:SETTABLEKS     p38.PredictOBJ = v0
[046] :874:GETTABLEKS     v0 = p38.PredictOBJ
[048] :874:GETIMPORT      v1 = workspace
[050] :874:SETTABLEKS     v0.Parent = v1
[052] :875:GETTABLEKS     v0 = p38.PredictOBJ
[053] :875:GETUPVAL       v3 = u_v43
[054] :875:MOVE           v4 = p39
[055] :875:MOVE           v5 = p40
[056] :875:CALL           v3 = v3(v4, v5)
[058] :875:GETTABLEKS     v2 = v3.X
[059] :875:LOADN          v3 = 10
[060] :875:GETUPVAL       v5 = u_v43
[061] :875:MOVE           v6 = p39
[062] :875:MOVE           v7 = p40
[063] :875:CALL           v5 = v5(v6, v7)
[065] :875:GETTABLEKS     v4 = v5.Z
[068] :875:GETIMPORT      v1 = Vector3.new
[069] :875:CALL           v1 = v1(v2, v3, v4)
[071] :875:SETTABLEKS     v0.Position = v1
[073] :876:GETTABLEKS     v2 = p38.PredictOBJ
[075] :876:GETTABLEKS     v1 = v2.Position
[077] :876:GETTABLEKS     v0 = v1.X
[078] :876:LOADN          v1 = -226
[080] :876:JUMPIFNOTLT    if v0 < v1 then -- goto #97
[082] :877:GETTABLEKS     v0 = p38.PredictOBJ
[083] :877:LOADN          v2 = -226
[084] :877:LOADN          v3 = 10
[086] :877:GETTABLEKS     v6 = p38.PredictOBJ
[088] :877:GETTABLEKS     v5 = v6.Position
[090] :877:GETTABLEKS     v4 = v5.Z
[093] :877:GETIMPORT      v1 = Vector3.new
[094] :877:CALL           v1 = v1(v2, v3, v4)
[096] :877:SETTABLEKS     v0.Position = v1
end
[098] :880:GETTABLEKS     v2 = p38.PredictOBJ
[100] :880:GETTABLEKS     v1 = v2.Position
[102] :880:GETTABLEKS     v0 = v1.X
[103] :880:LOADN          v1 = 306
[105] :880:JUMPIFNOTLT    if v1 < v0 then -- goto #122
[107] :881:GETTABLEKS     v0 = p38.PredictOBJ
[108] :881:LOADN          v2 = 306
[109] :881:LOADN          v3 = 10
[111] :881:GETTABLEKS     v6 = p38.PredictOBJ
[113] :881:GETTABLEKS     v5 = v6.Position
[115] :881:GETTABLEKS     v4 = v5.Z
[118] :881:GETIMPORT      v1 = Vector3.new
[119] :881:CALL           v1 = v1(v2, v3, v4)
[121] :881:SETTABLEKS     v0.Position = v1
end
[123] :884:GETIMPORT      v1 = tick
[124] :884:CALL           v1 = v1()
[125] :884:ADDK           v0 = v1 + 1
[126] :886:GETUPVAL       v2 = u_v4
[128] :886:GETTABLEKS     v1 = v2.Heartbeat
[129] :886:NEWCLOSURE     v3 = function(p41)
-- proto pool id: 40
-- num upvalues: 2
-- num inner protos: 0
-- size instructions: 48
-- size constants: 12
-- lineinfo gap: 24
-- max stack size: 4
-- is typed: false
[002] :887:GETIMPORT      v0 = workspace
[003] :887:LOADK          v2 = "Football"
[006] :887:CALL           v0 = v0:FindFirstChild(v2)
[008] :888:JUMPXEQKNIL    if v0 == nil then -- goto #22
[009] :888:GETUPVAL       v2 = u_v0
[011] :888:GETTABLEKS     v1 = v2.PredictOBJ
[014] :888:CALL           v1:Destroy()
[015] :888:GETUPVAL       v2 = u_v0
[017] :888:GETTABLEKS     v1 = v2.PredictionTrove
[020] :888:CALL           v1:Disconnect()
[021] :888:RETURN         return
end
[023] :890:GETTABLEKS     v2 = v0.Position
[025] :890:GETTABLEKS     v1 = v2.Y
[026] :890:LOADN          v2 = 10
[028] :890:JUMPIFNOTLE    if v1 <= v2 then -- goto #48
[029] :890:GETUPVAL       v1 = u_v3
[031] :890:GETIMPORT      v2 = tick
[032] :890:CALL           v2 = v2()
[034] :890:JUMPIFNOTLT    if v1 < v2 then -- goto #48
[035] :890:GETUPVAL       v2 = u_v0
[037] :890:GETTABLEKS     v1 = v2.PredictOBJ
[040] :890:CALL           v1:Destroy()
[041] :890:GETUPVAL       v2 = u_v0
[043] :890:GETTABLEKS     v1 = v2.PredictionTrove
[046] :890:CALL           v1:Disconnect()
[047] :890:RETURN         return
end
end
[048] :891:RETURN         return
end
[134] :886:CALL           v1 = v1:Connect(v3)
[136] :886:SETTABLEKS     p39.PredictionTrove = v1
end
end
[137] :886:RETURN         return
[138] :893:GETUPVAL       v3 = u_v0
[140] :893:GETTABLEKS     v2 = v3.Assets
[142] :893:GETTABLEKS     v1 = v2.Misc
[144] :893:GETTABLEKS     v0 = v1.PredictionVFX
[147] :893:CALL           v0 = v0:Clone()
[149] :893:SETTABLEKS     p39.PredictOBJ = v0
[151] :894:GETTABLEKS     v0 = p39.PredictOBJ
[153] :894:GETIMPORT      v1 = workspace
[155] :894:SETTABLEKS     v0.Parent = v1
[157] :895:GETTABLEKS     v1 = p39.PredictOBJ
[159] :895:GETTABLEKS     v0 = v1.PrimaryPart
[160] :895:LOADK          v1 = Vector3.new(0, 8, 0)
[162] :895:SETTABLEKS     v0.Position = v1
[164] :897:GETIMPORT      v1 = tick
[165] :897:CALL           v1 = v1()
[166] :897:ADDK           v0 = v1 + 1
[167] :899:GETUPVAL       v3 = u_v9
[169] :899:GETTABLEKS     v2 = v3.Football
[171] :899:GETTABLEKS     v1 = v2.Value
[172] :900:LOADK          v4 = "Beam"
[175] :900:CALL           v2 = v2:FindFirstChild(v4)
[176] :900:JUMPIFNOT      if v2 then -- goto #191
[178] :901:GETTABLEKS     v2 = v1.Beam
[180] :901:GETTABLEKS     v5 = p39.PredictOBJ
[182] :901:GETTABLEKS     v4 = v5.PrimaryPart
[184] :901:GETTABLEKS     v3 = v4.Attachment1
[186] :901:SETTABLEKS     v2.Attachment1 = v3
[188] :902:GETTABLEKS     v2 = v1.Beam
[189] :902:LOADB          v3 = true
[191] :902:SETTABLEKS     v2.Enabled = v3
[192] :905:GETUPVAL       v3 = u_v4
[194] :905:GETTABLEKS     v2 = v3.Heartbeat
[195] :905:NEWCLOSURE     v4 = function(p42)
-- proto pool id: 41
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 152
-- size constants: 29
-- lineinfo gap: 24
-- max stack size: 9
-- is typed: false
[002] :906:GETIMPORT      v0 = workspace
[003] :906:LOADK          v2 = "Football"
[006] :906:CALL           v0 = v0:FindFirstChild(v2)
[007] :907:JUMPIF         if not v0 then -- goto #40
[008] :908:GETUPVAL       v2 = u_v0
[010] :908:GETTABLEKS     v1 = v2.PredictOBJ
[013] :908:CALL           v1:Destroy()
[014] :909:GETUPVAL       v3 = u_v9
[016] :909:GETTABLEKS     v2 = v3.Football
[018] :909:GETTABLEKS     v1 = v2.Value
[019] :909:LOADK          v3 = "Beam"
[022] :909:CALL           v1 = v1:FindFirstChild(v3)
[023] :909:JUMPIFNOT      if v1 then -- goto #33
[024] :910:GETUPVAL       v4 = u_v9
[026] :910:GETTABLEKS     v3 = v4.Football
[028] :910:GETTABLEKS     v2 = v3.Value
[030] :910:GETTABLEKS     v1 = v2.Beam
[031] :910:LOADB          v2 = false
[033] :910:SETTABLEKS     v1.Enabled = v2
[034] :912:GETUPVAL       v2 = u_v0
[036] :912:GETTABLEKS     v1 = v2.PredictionTrove
[039] :912:CALL           v1:Disconnect()
end
[040] :913:RETURN         return
[041] :915:GETUPVAL       v2 = u_v0
[043] :915:GETTABLEKS     v1 = v2.PredictOBJ
[044] :915:JUMPIFNOT      if v1 then -- goto #50
[045] :915:GETUPVAL       v3 = u_v0
[047] :915:GETTABLEKS     v2 = v3.PredictOBJ
[049] :915:GETTABLEKS     v1 = v2.Parent
end
[050] :915:JUMPIF         if not v1 then -- goto #57
[051] :916:GETUPVAL       v2 = u_v0
[053] :916:GETTABLEKS     v1 = v2.PredictionTrove
[056] :916:CALL           v1:Disconnect()
end
[057] :917:RETURN         return
[059] :920:GETTABLEKS     v4 = v0.Position
[061] :920:GETTABLEKS     v3 = v4.Y
[062] :920:SUBK           v2 = v3 - 8.5
[063] :920:DIVK           v1 = v2 / 20
[064] :921:LOADK          v4 = 0.1
[065] :921:LOADN          v5 = 3
[068] :921:MOVE           v3 = v1
[070] :921:GETIMPORT      v2 = math.clamp
[071] :921:CALL           v2 = v2(v3, v4, v5)
[072] :921:MOVE           v1 = v2
[073] :922:GETUPVAL       v3 = u_v0
[075] :922:GETTABLEKS     v2 = v3.PredictOBJ
[076] :922:MOVE           v4 = v1
[079] :922:CALL           v2:ScaleTo(v4)
[080] :925:GETUPVAL       v4 = u_v0
[082] :925:GETTABLEKS     v3 = v4.PredictOBJ
[084] :925:GETTABLEKS     v2 = v3.PrimaryPart
[086] :925:GETTABLEKS     v5 = v0.Position
[088] :925:GETTABLEKS     v4 = v5.X
[089] :925:LOADK          v5 = 8.5
[091] :925:GETTABLEKS     v7 = v0.Position
[093] :925:GETTABLEKS     v6 = v7.Z
[096] :925:GETIMPORT      v3 = Vector3.new
[097] :925:CALL           v3 = v3(v4, v5, v6)
[099] :925:SETTABLEKS     v2.Position = v3
[101] :927:GETTABLEKS     v3 = v0.Position
[103] :927:GETTABLEKS     v2 = v3.Y
[104] :927:LOADN          v3 = 10
[106] :927:JUMPIFNOTLE    if v2 <= v3 then -- goto #152
[107] :927:GETUPVAL       v2 = u_v3
[109] :927:GETIMPORT      v3 = tick
[110] :927:CALL           v3 = v3()
[112] :927:JUMPIFNOTLT    if v2 < v3 then -- goto #152
[113] :928:GETUPVAL       v3 = u_v0
[115] :928:GETTABLEKS     v2 = v3.PredictOBJ
[118] :928:CALL           v2:Destroy()
[119] :929:GETUPVAL       v4 = u_v9
[121] :929:GETTABLEKS     v3 = v4.Football
[123] :929:GETTABLEKS     v2 = v3.Value
[124] :929:JUMPIFNOT      if v2 then -- goto #144
[125] :929:GETUPVAL       v4 = u_v9
[127] :929:GETTABLEKS     v3 = v4.Football
[129] :929:GETTABLEKS     v2 = v3.Value
[130] :929:LOADK          v4 = "Beam"
[133] :929:CALL           v2 = v2:FindFirstChild(v4)
[134] :929:JUMPIFNOT      if v2 then -- goto #144
[135] :930:GETUPVAL       v5 = u_v9
[137] :930:GETTABLEKS     v4 = v5.Football
[139] :930:GETTABLEKS     v3 = v4.Value
[141] :930:GETTABLEKS     v2 = v3.Beam
[142] :930:LOADB          v3 = false
[144] :930:SETTABLEKS     v2.Enabled = v3
[145] :932:GETUPVAL       v3 = u_v0
[147] :932:GETTABLEKS     v2 = v3.PredictionTrove
[150] :932:CALL           v2:Disconnect()
[151] :933:RETURN         return
end
end
[152] :935:RETURN         return
end
[201] :905:CALL           v2 = v2:Connect(v4)
[203] :905:SETTABLEKS     p40.PredictionTrove = v2
[204] :937:RETURN         return
end
v45 = Predict
[324] :607:SETTABLEKS     v39.Predict = v45
[325] :683:NEWCLOSURE     
local function KnitStart(p43)
-- proto pool id: 62
-- num upvalues: 27
-- num inner protos: 10
-- size instructions: 264
-- size constants: 47
-- lineinfo gap: 6
-- max stack size: 11
-- is typed: false
[001] :940:GETUPVAL       v1 = u_v10
[003] :940:GETTABLEKS     v0 = v1.GetService
[004] :940:LOADK          v1 = "BallService"
[005] :940:CALL           v0 = v0(v1)
[007] :940:SETTABLEKS     p43.BallService = v0
[009] :941:GETIMPORT      v0 = require
[011] :941:GETIMPORT      v3 = script
[013] :941:GETTABLEKS     v2 = v3.Parent
[015] :941:GETTABLEKS     v1 = v2.AnimationController
[016] :941:CALL           v0 = v0(v1)
[018] :941:SETTABLEKS     p43.Animations = v0
[020] :942:GETIMPORT      v0 = require
[022] :942:GETIMPORT      v3 = script
[024] :942:GETTABLEKS     v2 = v3.Parent
[026] :942:GETTABLEKS     v1 = v2.StatesController
[027] :942:CALL           v0 = v0(v1)
[029] :942:SETTABLEKS     p43.StatesController = v0
[030] :943:GETUPVAL       v1 = u_v10
[032] :943:GETTABLEKS     v0 = v1.GetController
[033] :943:LOADK          v1 = "AbilityController"
[034] :943:CALL           v0 = v0(v1)
[036] :943:SETTABLEKS     p43.AbilityController = v0
[037] :944:GETUPVAL       v1 = u_v10
[039] :944:GETTABLEKS     v0 = v1.GetService
[040] :944:LOADK          v1 = "StaminaService"
[041] :944:CALL           v0 = v0(v1)
[043] :944:SETTABLEKS     p43.StaminaService = v0
[044] :946:LOADB          v0 = false
[046] :946:SETTABLEKS     p43.Running = v0
[047] :947:LOADNIL        v0 = nil
[049] :947:SETTABLEKS     p43.Closest = v0
[051] :949:GETIMPORT      v0 = Instance.new
[052] :949:LOADK          v1 = "Attachment"
[053] :949:CALL           v0 = v0(v1)
[055] :949:SETTABLEKS     p43.Attach0 = v0
[057] :950:GETTABLEKS     v0 = p43.Attach0
[059] :950:GETIMPORT      v2 = workspace
[061] :950:GETTABLEKS     v1 = v2.Terrain
[063] :950:SETTABLEKS     v0.Parent = v1
[065] :951:GETIMPORT      v0 = Instance.new
[066] :951:LOADK          v1 = "Attachment"
[067] :951:CALL           v0 = v0(v1)
[069] :951:SETTABLEKS     p43.Attach1 = v0
[071] :952:GETTABLEKS     v0 = p43.Attach1
[073] :952:GETIMPORT      v2 = workspace
[075] :952:GETTABLEKS     v1 = v2.Terrain
[077] :952:SETTABLEKS     v0.Parent = v1
[079] :954:GETIMPORT      v0 = Instance.new
[080] :954:LOADK          v1 = "Beam"
[081] :954:CALL           v0 = v0(v1)
[083] :954:SETTABLEKS     p43.Beam = v0
[085] :955:GETTABLEKS     v0 = p43.Beam
[087] :955:GETIMPORT      v2 = workspace
[089] :955:GETTABLEKS     v1 = v2.Terrain
[091] :955:SETTABLEKS     v0.Parent = v1
[093] :956:GETTABLEKS     v0 = p43.Beam
[095] :956:GETTABLEKS     v1 = p43.Attach0
[097] :956:SETTABLEKS     v0.Attachment0 = v1
[099] :957:GETTABLEKS     v0 = p43.Beam
[101] :957:GETTABLEKS     v1 = p43.Attach1
[103] :957:SETTABLEKS     v0.Attachment1 = v1
[105] :959:GETTABLEKS     v0 = p43.BaseTrove
[107] :959:GETTABLEKS     v3 = p43.BallService
[109] :959:GETTABLEKS     v2 = v3.Pass
[110] :959:NEWCLOSURE     v3 = function(p44)
-- proto pool id: 44
-- num upvalues: 10
-- num inner protos: 1
-- size instructions: 246
-- size constants: 47
-- lineinfo gap: 24
-- max stack size: 21
-- is typed: true
[001] :960:GETUPVAL       v1 = u_v0
[003] :960:GETTABLEKS     v0 = v1.Closest
[004] :961:JUMPIF         if not v0 then -- goto #5
end
[005] :962:RETURN         return
[006] :965:GETUPVAL       v1 = u_v22
[007] :965:GETUPVAL       v2 = u_v19
[008] :965:CALL           v1, v2 = v1(v2)
[009] :967:MOVE           v3 = v0
[010] :967:JUMPIFNOT      if v3 then -- goto #15
[011] :967:GETUPVAL       v3 = u_v3
[012] :967:MOVE           v5 = v0
[015] :967:CALL           v3 = v3:GetPlayerFromCharacter(v5)
[016] :968:LOADK          v6 = "Style"
[019] :968:CALL           v4 = v4:GetAttribute(v6)
[020] :968:JUMPIF         if not v4 then -- goto #28
[021] :968:MOVE           v4 = v3
[022] :968:JUMPIFNOT      if v4 then -- goto #28
[024] :968:GETTABLEKS     v6 = v3.PlayerStats
[026] :968:GETTABLEKS     v5 = v6.Style
[028] :968:GETTABLEKS     v4 = v5.Value
[029] :969:GETUPVAL       v8 = u_v19
[031] :969:GETTABLEKS     v7 = v8.PlayerStats
[033] :969:GETTABLEKS     v6 = v7.Style
[035] :969:GETTABLEKS     v5 = v6.Value
[037] :971:JUMPXEQKS      if v5 == "McNagi Fryshiro" then -- goto #39
[038] :972:LOADK          v5 = "NEL Nagi"
end
[039] :975:JUMPIFNOT      if v2 then -- goto #44
[041] :975:GETTABLEKS     v7 = v2.Stats
[043] :975:GETTABLEKS     v6 = v7.AccuratePassesTime
end
[044] :975:JUMPIF         if not v6 then -- goto #45
end
[045] :975:LOADN          v6 = 0
[047] :977:JUMPXEQKS      if v5 == "Sae" then -- goto #50
[048] :978:ADDK           v6 = v6 + 0.5
[049] :978:JUMP           -- jump to #52
end
[051] :979:JUMPXEQKS      if v4 == "NEL Nagi" then -- goto #53
[052] :980:ADDK           v6 = v6 + 0.4
end
[054] :983:JUMPXEQKS      if v5 == "NEL Reo" then -- goto #58
[056] :983:JUMPXEQKS      if v4 == "NEL Nagi" then -- goto #58
[057] :984:ADDK           v6 = v6 + 0.5
end
end
[059] :986:JUMPXEQKS      if v5 == "NEL Nagi" then -- goto #63
[061] :986:JUMPXEQKS      if v4 == "NEL Reo" then -- goto #63
[062] :987:ADDK           v6 = v6 + 0.5
end
end
[063] :990:LOADN          v7 = 0
[065] :990:JUMPIFNOTLT    if v7 < v6 then -- goto #74
[066] :991:GETUPVAL       v7 = u_v39
[067] :991:MOVE           v9 = p44
[068] :991:MOVE           v10 = v0
[069] :991:MOVE           v11 = v6
[072] :991:CALL           v7:BallFollowPlayer(v9, v10, v11)
[073] :991:RETURN         return
end
[074] :993:JUMPIFNOT      if v2 then -- goto #79
[076] :993:GETTABLEKS     v8 = v2.Stats
[078] :993:GETTABLEKS     v7 = v8.PassArc
end
[079] :993:JUMPIF         if not v7 then -- goto #80
end
[080] :993:LOADK          v7 = 0.1
[082] :994:GETTABLEKS     v11 = v0.HumanoidRootPart
[084] :994:GETTABLEKS     v10 = v11.AssemblyLinearVelocity
[086] :994:GETTABLEKS     v9 = v10.X
[087] :994:LOADN          v10 = 0
[089] :994:GETTABLEKS     v13 = v0.HumanoidRootPart
[091] :994:GETTABLEKS     v12 = v13.AssemblyLinearVelocity
[093] :994:GETTABLEKS     v11 = v12.Z
[096] :994:GETIMPORT      v8 = Vector3.new
[097] :994:CALL           v8 = v8(v9, v10, v11)
[099] :995:GETTABLEKS     v10 = v0.HumanoidRootPart
[101] :995:GETTABLEKS     v9 = v10.Position
[102] :996:ADD            v13 = v9 + v8
[103] :996:GETUPVAL       v15 = u_v27
[105] :996:GETTABLEKS     v14 = v15.Position
[106] :996:SUB            v12 = v13 - v14
[108] :996:GETTABLEKS     v11 = v12.Unit
[109] :996:LOADN          v13 = 0
[110] :996:LOADN          v15 = 0
[113] :996:MOVE           v14 = v7
[115] :996:GETIMPORT      v12 = Vector3.new
[116] :996:CALL           v12 = v12(v13, v14, v15)
[117] :996:ADD            v10 = v11 + v12
[118] :997:GETUPVAL       v15 = u_v27
[120] :997:GETTABLEKS     v14 = v15.Position
[121] :997:SUB            v13 = v9 - v14
[123] :997:GETTABLEKS     v12 = v13.Magnitude
[124] :997:MULK           v11 = v12 * 1.85
[125] :998:GETUPVAL       v12 = u_v25
[126] :998:LOADK          v14 = "DartboardLens"
[129] :998:CALL           v12 = v12:GetAttribute(v14)
[130] :999:JUMPIFNOT      if v12 then -- goto #132
[131] :999:LOADN          v13 = 1
end
[132] :999:JUMP           -- jump to #133
[133] :999:LOADK          v13 = 0.15
[134] :1000:LOADN          v16 = 30
[135] :1000:LOADN          v17 = 200
[138] :1000:MOVE           v15 = v11
[140] :1000:GETIMPORT      v14 = math.clamp
[141] :1000:CALL           v14 = v14(v15, v16, v17)
[142] :1000:MOVE           v11 = v14
[143] :1002:JUMPIFNOT      if v2 then -- goto #153
[145] :1002:GETTABLEKS     v15 = v2.Stats
[147] :1002:GETTABLEKS     v14 = v15.PassPowerMultiplier
[148] :1002:JUMPIFNOT      if v14 then -- goto #153
[150] :1003:GETTABLEKS     v15 = v2.Stats
[152] :1003:GETTABLEKS     v14 = v15.PassPowerMultiplier
end
end
[153] :1003:MUL            v11 = v11 * v14
[154] :1006:GETUPVAL       v17 = u_v19
[156] :1006:GETTABLEKS     v16 = v17.PlayerStats
[158] :1006:GETTABLEKS     v15 = v16.InFlow
[160] :1006:GETTABLEKS     v14 = v15.Value
[161] :1006:JUMPIFNOT      if v14 then -- goto #171
[162] :1007:GETUPVAL       v17 = u_v19
[164] :1007:GETTABLEKS     v16 = v17.PlayerStats
[166] :1007:GETTABLEKS     v15 = v16.Flow
[168] :1007:GETTABLEKS     v14 = v15.Value
[170] :1007:JUMPXEQKS      if v14 == "Ice" then -- goto #172
end
[171] :1008:MULK           v11 = v11 * 1.25
end
[172] :1012:JUMPIFNOT      if v12 then -- goto #178
[173] :1013:GETUPVAL       v16 = u_v27
[175] :1013:GETTABLEKS     v15 = v16.CFrame
[177] :1013:GETTABLEKS     v14 = v15.RightVector
end
[178] :1013:ADD            v10 = v10 + v14
[179] :1016:MUL            v14 = v10 * v11
[181] :1016:SETTABLEKS     p44.AssemblyLinearVelocity = v14
[182] :1018:GETUPVAL       v14 = u_v0
[183] :1018:MOVE           v16 = p44
[186] :1018:CALL           v14:DragBall(v16)
[188] :1020:GETIMPORT      v14 = tick
[189] :1020:CALL           v14 = v14()
[190] :1022:GETUPVAL       v16 = u_v0
[192] :1022:GETTABLEKS     v15 = v16.PassTrove
[193] :1022:JUMPIFNOT      if v15 then -- goto #199
[194] :1022:GETUPVAL       v16 = u_v0
[196] :1022:GETTABLEKS     v15 = v16.PassTrove
[199] :1022:CALL           v15:Destroy()
[201] :1024:GETTABLEKS     v18 = v0.HumanoidRootPart
[203] :1024:GETTABLEKS     v17 = v18.Position
[204] :1024:GETUPVAL       v19 = u_v27
[206] :1024:GETTABLEKS     v18 = v19.Position
[207] :1024:SUB            v16 = v17 - v18
[209] :1024:GETTABLEKS     v15 = v16.Magnitude
[210] :1024:LOADN          v16 = 40
[212] :1024:JUMPIFNOTLE    if v16 <= v15 then -- goto #214
[213] :1024:JUMPIFNOT      if v12 then -- goto #214
end
end
[214] :1024:JUMPIFNOT      if v12 then -- goto #244
[215] :1025:GETUPVAL       v15 = u_v0
[216] :1025:GETUPVAL       v17 = u_v13
[218] :1025:GETTABLEKS     v16 = v17.new
[219] :1025:CALL           v16 = v16()
[221] :1025:SETTABLEKS     v15.PassTrove = v16
[222] :1027:GETUPVAL       v16 = u_v0
[224] :1027:GETTABLEKS     v15 = v16.PassTrove
[225] :1027:GETUPVAL       v18 = u_v4
[227] :1027:GETTABLEKS     v17 = v18.Heartbeat
[228] :1027:NEWCLOSURE     v18 = function(p45)
-- proto pool id: 43
-- num upvalues: 13
-- num inner protos: 0
-- size instructions: 232
-- size constants: 38
-- lineinfo gap: 24
-- max stack size: 10
-- is typed: true
[001] :1028:GETUPVAL       v2 = u_v0
[003] :1028:GETTABLEKS     v1 = v2.OnPlayer
[005] :1028:GETTABLEKS     v0 = v1.Value
[006] :1028:JUMPIFNOT      if v0 then -- goto #17
[007] :1028:GETUPVAL       v1 = u_v0
[009] :1028:GETTABLEKS     v0 = v1.PassTrove
[010] :1028:JUMPIFNOT      if v0 then -- goto #16
[011] :1028:GETUPVAL       v1 = u_v0
[013] :1028:GETTABLEKS     v0 = v1.PassTrove
[016] :1028:CALL           v0:Destroy()
end
[017] :1028:RETURN         return
[019] :1029:GETIMPORT      v0 = tick
[020] :1029:CALL           v0 = v0()
[021] :1029:GETUPVAL       v2 = u_v15
[022] :1029:GETUPVAL       v3 = u_v14
[023] :1029:ADD            v1 = v2 + v3
[025] :1029:JUMPIFNOTLT    if v1 < v0 then -- goto #37
[026] :1029:GETUPVAL       v1 = u_v0
[028] :1029:GETTABLEKS     v0 = v1.PassTrove
[029] :1029:JUMPIFNOT      if v0 then -- goto #35
[030] :1029:GETUPVAL       v1 = u_v0
[032] :1029:GETTABLEKS     v0 = v1.PassTrove
[035] :1029:CALL           v0:Destroy()
[036] :1029:RETURN         return
end
[037] :1030:GETUPVAL       v4 = u_v1
[039] :1030:GETTABLEKS     v3 = v4.HumanoidRootPart
[041] :1030:GETTABLEKS     v2 = v3.Position
[042] :1030:GETUPVAL       v4 = u_v0
[044] :1030:GETTABLEKS     v3 = v4.Position
[045] :1030:SUB            v1 = v2 - v3
[047] :1030:GETTABLEKS     v0 = v1.Magnitude
[048] :1030:LOADN          v1 = 5
[050] :1030:JUMPIFNOTLT    if v0 < v1 then -- goto #58
[051] :1030:GETUPVAL       v1 = u_v0
[053] :1030:GETTABLEKS     v0 = v1.PassTrove
[056] :1030:CALL           v0:Destroy()
[057] :1030:RETURN         return
end
[058] :1031:GETUPVAL       v4 = u_v1
[060] :1031:GETTABLEKS     v3 = v4.HumanoidRootPart
[062] :1031:GETTABLEKS     v2 = v3.AssemblyLinearVelocity
[064] :1031:GETTABLEKS     v1 = v2.X
[065] :1031:LOADN          v2 = 0
[066] :1031:GETUPVAL       v6 = u_v1
[068] :1031:GETTABLEKS     v5 = v6.HumanoidRootPart
[070] :1031:GETTABLEKS     v4 = v5.AssemblyLinearVelocity
[072] :1031:GETTABLEKS     v3 = v4.Z
[075] :1031:GETIMPORT      v0 = Vector3.new
[076] :1031:CALL           v0 = v0(v1, v2, v3)
[077] :1031:SETUPVAL       u_v9 = v0
[078] :1033:GETUPVAL       v5 = u_v1
[080] :1033:GETTABLEKS     v4 = v5.HumanoidRootPart
[082] :1033:GETTABLEKS     v3 = v4.Position
[083] :1033:GETUPVAL       v5 = u_v27
[085] :1033:GETTABLEKS     v4 = v5.Position
[086] :1033:SUB            v2 = v3 - v4
[088] :1033:GETTABLEKS     v1 = v2.Magnitude
[089] :1033:MULK           v0 = v1 * 1.5
[090] :1033:SETUPVAL       u_v12 = v0
[091] :1034:GETUPVAL       v1 = u_v12
[092] :1034:LOADN          v2 = 0
[093] :1034:LOADN          v3 = 120
[096] :1034:GETIMPORT      v0 = math.clamp
[097] :1034:CALL           v0 = v0(v1, v2, v3)
[098] :1034:SETUPVAL       u_v12 = v0
[099] :1036:GETUPVAL       v0 = u_v13
[100] :1036:JUMPIFNOT      if v0 then -- goto #143
[102] :1036:GETIMPORT      v0 = tick
[103] :1036:CALL           v0 = v0()
[104] :1036:GETUPVAL       v2 = u_v15
[105] :1036:ADDK           v1 = v2 + 0.075
[107] :1036:JUMPIFNOTLT    if v1 < v0 then -- goto #144
[109] :1037:GETIMPORT      v2 = tick
[110] :1037:CALL           v2 = v2()
[111] :1037:GETUPVAL       v3 = u_v15
[112] :1037:SUB            v1 = v2 - v3
[113] :1037:LOADK          v2 = 0.075
[115] :1037:JUMPIFLT       if v2 > v1 then -- goto #117
[116] :1037:LOADB          v0 = false +1
end
[117] :1037:LOADB          v0 = true
[118] :1038:GETUPVAL       v1 = u_v11
[119] :1039:GETUPVAL       v6 = u_v10
[120] :1039:GETUPVAL       v8 = u_v0
[122] :1039:GETTABLEKS     v7 = v8.Position
[123] :1039:SUB            v5 = v6 - v7
[125] :1039:GETTABLEKS     v4 = v5.Unit
[126] :1039:LOADN          v6 = 0
[127] :1039:JUMPIFNOT      if v0 then -- goto #129
[128] :1039:LOADK          v7 = 0.15
end
[129] :1039:JUMP           -- jump to #130
[130] :1039:LOADK          v7 = 0.45
[131] :1039:LOADN          v8 = 0
[134] :1039:GETIMPORT      v5 = Vector3.new
[135] :1039:CALL           v5 = v5(v6, v7, v8)
[136] :1039:ADD            v3 = v4 + v5
[137] :1040:LOADK          v5 = 6.5
[138] :1040:MUL            v4 = v5 * p45
[141] :1038:CALL           v1 = v1:Lerp(v3, v4)
[142] :1038:SETUPVAL       u_v11 = v1
end
[143] :1038:JUMP           -- jump to #172
end
[144] :1042:GETUPVAL       v0 = u_v13
[145] :1042:JUMPIFNOT      if v0 then -- goto #152
[146] :1043:GETUPVAL       v2 = u_v1
[148] :1043:GETTABLEKS     v1 = v2.HumanoidRootPart
[150] :1043:GETTABLEKS     v0 = v1.Position
[151] :1043:SETUPVAL       u_v10 = v0
end
[152] :1043:JUMP           -- jump to #172
[153] :1046:GETUPVAL       v0 = u_v11
[154] :1046:GETUPVAL       v8 = u_v1
[156] :1046:GETTABLEKS     v7 = v8.HumanoidRootPart
[158] :1046:GETTABLEKS     v6 = v7.Position
[159] :1046:GETUPVAL       v7 = u_v9
[160] :1046:ADD            v5 = v6 + v7
[161] :1046:GETUPVAL       v7 = u_v0
[163] :1046:GETTABLEKS     v6 = v7.Position
[164] :1046:SUB            v4 = v5 - v6
[166] :1046:GETTABLEKS     v3 = v4.Unit
[167] :1046:LOADK          v4 = Vector3.new(0, 0.22, 0)
[168] :1046:ADD            v2 = v3 + v4
[169] :1046:LOADK          v3 = 1.5
[172] :1046:CALL           v0:Lerp(v2, v3)
[173] :1049:GETUPVAL       v1 = u_v24
[175] :1049:GETTABLEKS     v0 = v1.GetCurrentStyle
[176] :1049:CALL           v0 = v0()
[178] :1049:JUMPXEQKS      if v0 == "NEL Reo" then -- goto #190
[179] :1049:GETUPVAL       v1 = u_v19
[181] :1049:GETTABLEKS     v0 = v1.Character
[182] :1049:LOADK          v2 = "StrikeMode"
[185] :1049:CALL           v0 = v0:GetAttribute(v2)
[186] :1049:JUMPIF         if not v0 then -- goto #189
[187] :1050:GETUPVAL       v0 = u_v12
[188] :1050:MULK           v0 = v0 * 1.2
end
[189] :1050:SETUPVAL       u_v12 = v0
end
[190] :1053:GETUPVAL       v3 = u_v19
[192] :1053:GETTABLEKS     v2 = v3.PlayerStats
[194] :1053:GETTABLEKS     v1 = v2.InFlow
[196] :1053:GETTABLEKS     v0 = v1.Value
[197] :1053:JUMPIFNOT      if v0 then -- goto #218
[198] :1054:GETUPVAL       v3 = u_v19
[200] :1054:GETTABLEKS     v2 = v3.PlayerStats
[202] :1054:GETTABLEKS     v1 = v2.Flow
[204] :1054:GETTABLEKS     v0 = v1.Value
[206] :1054:JUMPXEQKS      if v0 ~= "Ice" then -- goto #216
[207] :1054:GETUPVAL       v3 = u_v19
[209] :1054:GETTABLEKS     v2 = v3.PlayerStats
[211] :1054:GETTABLEKS     v1 = v2.Flow
[213] :1054:GETTABLEKS     v0 = v1.Value
[215] :1054:JUMPXEQKS      if v0 == "Master Of All Trades" then -- goto #219
end
[216] :1055:GETUPVAL       v0 = u_v12
[217] :1055:MULK           v0 = v0 * 1.25
end
[218] :1055:SETUPVAL       u_v12 = v0
end
[219] :1059:GETUPVAL       v0 = u_v0
[220] :1059:GETUPVAL       v2 = u_v0
[222] :1059:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[223] :1059:GETUPVAL       v4 = u_v11
[224] :1059:GETUPVAL       v5 = u_v12
[225] :1059:MUL            v3 = v4 * v5
[226] :1059:LOADN          v4 = 1
[229] :1059:CALL           v1 = v1:Lerp(v3, v4)
[231] :1059:SETTABLEKS     v0.AssemblyLinearVelocity = v1
[232] :1060:RETURN         return
end
[244] :1027:CALL           v15:Connect(v17, v18)
[246] :1063:RETURN         return
end
[123] :959:CALL           v0:Connect(v2, v3)
[125] :1065:GETTABLEKS     v0 = p45.BaseTrove
[127] :1065:GETTABLEKS     v3 = p45.BallService
[129] :1065:GETTABLEKS     v2 = v3.Shoot
[130] :1065:NEWCLOSURE     v3 = function(p46, p47, p48)
-- proto pool id: 47
-- num upvalues: 13
-- num inner protos: 2
-- size instructions: 478
-- size constants: 71
-- lineinfo gap: 24
-- max stack size: 14
-- is typed: true
[001] :1067:GETUPVAL       v1 = u_v0
[003] :1067:GETTABLEKS     v0 = v1.CS
[004] :1067:JUMPIFNOT      if v0 then -- goto #10
[005] :1067:GETUPVAL       v1 = u_v0
[007] :1067:GETTABLEKS     v0 = v1.CS
[010] :1067:CALL           v0:Disconnect()
[012] :1068:JUMPXEQKNIL    if p48 == nil then -- goto #14
[013] :1069:LOADK          p48 = 0.3
end
[014] :1072:JUMPIFNOT      if p46 then -- goto #19
[015] :1072:LOADK          v2 = "Before"
[018] :1072:CALL           v0 = v0:FindFirstChild(v2)
end
[019] :1072:JUMPIF         if not v0 then -- goto #20
end
[020] :1073:RETURN         return
[021] :1077:GETUPVAL       v0 = u_v3
[023] :1077:GETTABLEKS     v3 = p46.Before
[025] :1077:GETTABLEKS     v2 = v3.Value
[028] :1077:CALL           v0 = v0:GetPlayerFromCharacter(v2)
[029] :1078:JUMPIFNOT      if v0 then -- goto #61
[031] :1079:GETTABLEKS     v3 = v0.PlayerStats
[033] :1079:GETTABLEKS     v2 = v3.InFlow
[035] :1079:GETTABLEKS     v1 = v2.Value
[036] :1079:JUMPIFNOT      if v1 then -- goto #45
[038] :1079:GETTABLEKS     v3 = v0.PlayerStats
[040] :1079:GETTABLEKS     v2 = v3.Flow
[042] :1079:GETTABLEKS     v1 = v2.Value
[044] :1079:JUMPXEQKS      if v1 == "Ice" then -- goto #46
end
[045] :1080:MULK           p47 = p47 * 1.15
end
[047] :1082:GETTABLEKS     v3 = v0.PlayerStats
[049] :1082:GETTABLEKS     v2 = v3.InAwakening
[051] :1082:GETTABLEKS     v1 = v2.Value
[052] :1082:JUMPIFNOT      if v1 then -- goto #61
[054] :1082:GETTABLEKS     v3 = v0.PlayerStats
[056] :1082:GETTABLEKS     v2 = v3.Style
[058] :1082:GETTABLEKS     v1 = v2.Value
[060] :1082:JUMPXEQKS      if v1 == "Hiori" then -- goto #62
end
end
[061] :1083:MULK           p47 = p47 * 1.2
end
[062] :1094:GETUPVAL       v3 = u_v0
[064] :1094:GETTABLEKS     v2 = v3.StatesController
[066] :1094:GETTABLEKS     v1 = v2.ShotPowerMultiplier
[067] :1094:MUL            p47 = p47 * v1
[068] :1096:GETUPVAL       v1 = u_v33
[069] :1096:JUMPIFNOT      if v1 then -- goto #80
[070] :1097:GETUPVAL       v5 = u_v27
[072] :1097:GETTABLEKS     v4 = v5.CFrame
[074] :1097:GETTABLEKS     v3 = v4.LookVector
[075] :1097:LOADK          v4 = Vector3.new(0, 0.5, 0)
[076] :1097:ADD            v2 = v3 + v4
[077] :1097:MUL            v1 = v2 * p47
[079] :1097:SETTABLEKS     p46.AssemblyLinearVelocity = v1
end
[080] :1097:JUMP           -- jump to #468
[081] :1098:GETUPVAL       v1 = u_v34
[082] :1098:JUMPIFNOT      if v1 then -- goto #114
[083] :1099:GETUPVAL       v7 = u_v27
[085] :1099:GETTABLEKS     v6 = v7.CFrame
[087] :1099:GETTABLEKS     v5 = v6.LookVector
[089] :1099:GETTABLEKS     v4 = v5.X
[090] :1099:MINUS          v3 = -v4
[091] :1099:GETUPVAL       v8 = u_v27
[093] :1099:GETTABLEKS     v7 = v8.CFrame
[095] :1099:GETTABLEKS     v6 = v7.LookVector
[097] :1099:GETTABLEKS     v5 = v6.Y
[098] :1099:ADDK           v4 = v5 + 0.25
[099] :1099:GETUPVAL       v9 = u_v27
[101] :1099:GETTABLEKS     v8 = v9.CFrame
[103] :1099:GETTABLEKS     v7 = v8.LookVector
[105] :1099:GETTABLEKS     v6 = v7.Z
[106] :1099:MINUS          v5 = -v6
[109] :1099:GETIMPORT      v2 = Vector3.new
[110] :1099:CALL           v2 = v2(v3, v4, v5)
[111] :1099:MULK           v1 = v2 * 120
[113] :1099:SETTABLEKS     p46.AssemblyLinearVelocity = v1
end
[114] :1099:JUMP           -- jump to #468
[115] :1101:GETUPVAL       v3 = u_v28
[117] :1101:GETTABLEKS     v2 = v3.CFrame
[119] :1101:GETTABLEKS     v1 = v2.LookVector
[120] :1102:GETUPVAL       v5 = u_v28
[122] :1102:GETTABLEKS     v4 = v5.CFrame
[124] :1102:GETTABLEKS     v3 = v4.LookVector
[126] :1102:GETTABLEKS     v2 = v3.Y
[127] :1102:LOADK          v3 = -0.05
[129] :1102:JUMPIFNOTLT    if v2 < v3 then -- goto #170
[130] :1103:GETUPVAL       v5 = u_v28
[132] :1103:GETTABLEKS     v4 = v5.CFrame
[134] :1103:GETTABLEKS     v3 = v4.LookVector
[136] :1103:GETTABLEKS     v2 = v3.Y
[137] :1103:LOADK          v3 = -0.5
[139] :1103:JUMPIFNOTLE    if v2 <= v3 then -- goto #150
[140] :1104:GETUPVAL       v4 = u_v0
[142] :1104:GETTABLEKS     v3 = v4.BallService
[144] :1104:GETTABLEKS     v2 = v3.HasShot
[145] :1104:LOADB          v4 = true
[148] :1104:CALL           v2:Fire(v4)
[149] :1104:JUMP           -- jump to #158
end
[150] :1106:GETUPVAL       v4 = u_v0
[152] :1106:GETTABLEKS     v3 = v4.BallService
[154] :1106:GETTABLEKS     v2 = v3.HasShot
[155] :1106:LOADB          v4 = false
[158] :1106:CALL           v2:Fire(v4)
[160] :1108:GETTABLEKS     v3 = v1.X
[161] :1108:LOADK          v4 = -0.05
[163] :1108:GETTABLEKS     v5 = v1.Z
[166] :1108:GETIMPORT      v2 = Vector3.new
[167] :1108:CALL           v2 = v2(v3, v4, v5)
[168] :1108:MOVE           v1 = v2
[169] :1108:JUMP           -- jump to #178
end
[170] :1110:GETUPVAL       v4 = u_v0
[172] :1110:GETTABLEKS     v3 = v4.BallService
[174] :1110:GETTABLEKS     v2 = v3.HasShot
[175] :1110:LOADB          v4 = false
[178] :1110:CALL           v2:Fire(v4)
[179] :1113:GETUPVAL       v2 = u_v26
[182] :1113:CALL           v2 = v2:GetState()
[184] :1113:GETIMPORT      v3 = Enum.HumanoidStateType.Jumping
[186] :1113:JUMPIFEQ       if v2 == v3 then -- goto #195
[187] :1113:GETUPVAL       v2 = u_v26
[190] :1113:CALL           v2 = v2:GetState()
[192] :1113:GETIMPORT      v3 = Enum.HumanoidStateType.Freefall
[194] :1113:JUMPIFNOTEQ    if v2 ~= v3 then -- goto #346
end
[195] :1114:GETUPVAL       v3 = u_v27
[197] :1114:GETTABLEKS     v2 = v3.Anchored
[198] :1114:JUMPIFNOT      if v2 then -- goto #205
[199] :1114:GETUPVAL       v3 = u_v24
[201] :1114:GETTABLEKS     v2 = v3.GetCurrentStyle
[202] :1114:CALL           v2 = v2()
[204] :1114:JUMPXEQKS      if v2 == "Shidou" then -- goto #206
end
[205] :1114:RETURN         return
end
[206] :1115:GETUPVAL       v5 = u_v0
[208] :1115:GETTABLEKS     v4 = v5.StatesController
[210] :1115:GETTABLEKS     v3 = v4.States
[212] :1115:GETTABLEKS     v2 = v3.Ability
[214] :1115:JUMPXEQKB      if v2 == false then -- goto #280
[215] :1117:GETUPVAL       v5 = u_v0
[217] :1117:GETTABLEKS     v4 = v5.Animations
[219] :1117:GETTABLEKS     v3 = v4.Movement
[221] :1117:GETTABLEKS     v2 = v3.Header
[223] :1117:GETIMPORT      v3 = Enum.AnimationPriority.Action3
[225] :1117:SETTABLEKS     v2.Priority = v3
[226] :1118:GETUPVAL       v5 = u_v0
[228] :1118:GETTABLEKS     v4 = v5.Animations
[230] :1118:GETTABLEKS     v3 = v4.Movement
[232] :1118:GETTABLEKS     v2 = v3.Header
[235] :1118:CALL           v2:Play()
[236] :1120:GETUPVAL       v5 = u_v19
[238] :1120:GETTABLEKS     v4 = v5.PlayerStats
[240] :1120:GETTABLEKS     v3 = v4.InFlow
[242] :1120:GETTABLEKS     v2 = v3.Value
[243] :1120:JUMPIFNOT      if v2 then -- goto #266
[244] :1120:GETUPVAL       v5 = u_v19
[246] :1120:GETTABLEKS     v4 = v5.PlayerStats
[248] :1120:GETTABLEKS     v3 = v4.Flow
[250] :1120:GETTABLEKS     v2 = v3.Value
[252] :1120:JUMPXEQKS      if v2 == "Demon Wings" then -- goto #267
[253] :1121:LOADN          v6 = 0
[254] :1121:LOADN          v8 = 0
[257] :1121:MOVE           v7 = p48
[259] :1121:GETIMPORT      v5 = Vector3.new
[260] :1121:CALL           v5 = v5(v6, v7, v8)
[261] :1121:ADD            v4 = v1 + v5
[262] :1121:MUL            v3 = v4 * p47
[263] :1121:MULK           v2 = v3 * 1.2
[265] :1121:SETTABLEKS     p46.AssemblyLinearVelocity = v2
end
[266] :1121:JUMP           -- jump to #468
end
[267] :1123:LOADN          v5 = 0
[268] :1123:LOADN          v7 = 0
[271] :1123:MOVE           v6 = p48
[273] :1123:GETIMPORT      v4 = Vector3.new
[274] :1123:CALL           v4 = v4(v5, v6, v7)
[275] :1123:ADD            v3 = v1 + v4
[276] :1123:MUL            v2 = v3 * p47
[278] :1123:SETTABLEKS     p46.AssemblyLinearVelocity = v2
[279] :1123:JUMP           -- jump to #468
end
[280] :1126:GETUPVAL       v3 = u_v24
[282] :1126:GETTABLEKS     v2 = v3.GetCurrentStyle
[283] :1126:CALL           v2 = v2()
[285] :1126:JUMPXEQKS      if v2 == "Gagamaru" then -- goto #294
[286] :1127:GETUPVAL       v3 = u_v0
[288] :1127:GETTABLEKS     v2 = v3.VfxSpawn
[289] :1127:LOADK          v4 = "Gagamaru header"
[292] :1127:CALL           v2:FireServer(v4)
[293] :1127:JUMP           -- jump to #300
end
[294] :1129:GETUPVAL       v3 = u_v0
[296] :1129:GETTABLEKS     v2 = v3.VfxSpawn
[297] :1129:LOADK          v4 = "ShidouHeader"
[300] :1129:CALL           v2:FireServer(v4)
[301] :1132:GETUPVAL       v5 = u_v19
[303] :1132:GETTABLEKS     v4 = v5.PlayerStats
[305] :1132:GETTABLEKS     v3 = v4.InFlow
[307] :1132:GETTABLEKS     v2 = v3.Value
[308] :1132:JUMPIFNOT      if v2 then -- goto #331
[309] :1132:GETUPVAL       v5 = u_v19
[311] :1132:GETTABLEKS     v4 = v5.PlayerStats
[313] :1132:GETTABLEKS     v3 = v4.Flow
[315] :1132:GETTABLEKS     v2 = v3.Value
[317] :1132:JUMPXEQKS      if v2 == "Demon Wings" then -- goto #332
[318] :1133:LOADN          v6 = 0
[319] :1133:LOADN          v8 = 0
[322] :1133:MOVE           v7 = p48
[324] :1133:GETIMPORT      v5 = Vector3.new
[325] :1133:CALL           v5 = v5(v6, v7, v8)
[326] :1133:ADD            v4 = v1 + v5
[327] :1133:MUL            v3 = v4 * p47
[328] :1133:MULK           v2 = v3 * 1.4
[330] :1133:SETTABLEKS     p46.AssemblyLinearVelocity = v2
end
[331] :1133:JUMP           -- jump to #468
end
[332] :1135:LOADN          v6 = 0
[333] :1135:LOADN          v8 = 0
[336] :1135:MOVE           v7 = p48
[338] :1135:GETIMPORT      v5 = Vector3.new
[339] :1135:CALL           v5 = v5(v6, v7, v8)
[340] :1135:ADD            v4 = v1 + v5
[341] :1135:MUL            v3 = v4 * p47
[342] :1135:MULK           v2 = v3 * 1.2
[344] :1135:SETTABLEKS     p46.AssemblyLinearVelocity = v2
[345] :1135:JUMP           -- jump to #468
end
[346] :1139:GETUPVAL       v5 = u_v19
[348] :1139:GETTABLEKS     v4 = v5.PlayerStats
[350] :1139:GETTABLEKS     v3 = v4.InFlow
[352] :1139:GETTABLEKS     v2 = v3.Value
[353] :1139:JUMPIFNOT      if v2 then -- goto #402
[354] :1139:GETUPVAL       v5 = u_v19
[356] :1139:GETTABLEKS     v4 = v5.PlayerStats
[358] :1139:GETTABLEKS     v3 = v4.Flow
[360] :1139:GETTABLEKS     v2 = v3.Value
[362] :1139:JUMPXEQKS      if v2 == "Destructive Impulses" then -- goto #403
[363] :1140:GETUPVAL       v3 = u_v15
[365] :1140:GETTABLEKS     v2 = v3.FindCurveDirection
[366] :1140:GETUPVAL       v3 = u_v19
[367] :1140:CALL           v2 = v2(v3)
[368] :1141:GETUPVAL       v5 = u_v29
[369] :1141:DIVK           v4 = v5 / 2.75
[370] :1141:MINUS          v3 = -v4
[371] :1143:LOADN          v8 = 0
[372] :1143:LOADN          v10 = 0
[375] :1143:MOVE           v9 = p48
[377] :1143:GETIMPORT      v7 = Vector3.new
[378] :1143:CALL           v7 = v7(v8, v9, v10)
[379] :1143:ADD            v6 = v1 + v7
[380] :1143:DIVK           v7 = v2 / 2
[381] :1143:ADD            v5 = v6 + v7
[382] :1143:MUL            v4 = v5 * p47
[384] :1143:SETTABLEKS     p46.AssemblyLinearVelocity = v4
[385] :1145:GETUPVAL       v4 = u_v0
[386] :1145:GETUPVAL       v6 = u_v4
[388] :1145:GETTABLEKS     v5 = v6.Heartbeat
[389] :1145:NEWCLOSURE     v7 = function(p49)
-- proto pool id: 45
-- num upvalues: 6
-- num inner protos: 0
-- size instructions: 53
-- size constants: 10
-- lineinfo gap: 24
-- max stack size: 9
-- is typed: false
[001] :1146:GETUPVAL       v4 = u_v0
[003] :1146:GETTABLEKS     v3 = v4.Football
[005] :1146:GETTABLEKS     v2 = v3.Value
[007] :1146:GETTABLEKS     v1 = v2.OnPlayer
[009] :1146:GETTABLEKS     v0 = v1.Value
[010] :1146:JUMPIFNOT      if v0 then -- goto #16
[011] :1146:GETUPVAL       v1 = u_v0
[013] :1146:GETTABLEKS     v0 = v1.CS
[016] :1146:CALL           v0:Disconnect()
[017] :1147:GETUPVAL       v0 = u_v6
[018] :1147:GETUPVAL       v3 = u_v29
[019] :1147:DIVK           v2 = v3 / 6
[020] :1147:MUL            v1 = v2 * p49
[021] :1147:ADD            v0 = v0 + v1
[022] :1147:SETUPVAL       u_v6 = v0
[023] :1148:GETUPVAL       v0 = u_v6
[024] :1148:GETUPVAL       v3 = u_v29
[025] :1148:DIVK           v2 = v3 / 8
[026] :1148:MINUS          v1 = -v2
[028] :1148:JUMPIFNOTLE    if v1 <= v0 then -- goto #35
[029] :1148:GETUPVAL       v1 = u_v0
[031] :1148:GETTABLEKS     v0 = v1.CS
[034] :1148:CALL           v0:Disconnect()
end
[035] :1150:GETUPVAL       v0 = u_v0
[036] :1150:GETUPVAL       v2 = u_v0
[038] :1150:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[039] :1150:GETUPVAL       v5 = u_v0
[041] :1150:GETTABLEKS     v4 = v5.AssemblyLinearVelocity
[042] :1150:GETUPVAL       v6 = u_v5
[043] :1150:GETUPVAL       v7 = u_v6
[044] :1150:MUL            v5 = v6 * v7
[045] :1150:ADD            v3 = v4 + v5
[046] :1150:LOADK          v5 = 6.5
[047] :1150:MUL            v4 = v5 * p49
[050] :1150:CALL           v1 = v1:Lerp(v3, v4)
[052] :1150:SETTABLEKS     v0.AssemblyLinearVelocity = v1
[053] :1151:RETURN         return
end
[398] :1145:CALL           v5 = v5:Connect(v7)
[400] :1145:SETTABLEKS     v4.CS = v5
[402] :1145:JUMP           -- jump to #468
end
[403] :1153:GETUPVAL       v3 = u_v24
[405] :1153:GETTABLEKS     v2 = v3.GetCurrentStyle
[406] :1153:CALL           v2 = v2()
[408] :1153:JUMPXEQKS      if v2 == "NEL Rin" then -- goto #457
[409] :1153:GETUPVAL       v5 = u_v19
[411] :1153:GETTABLEKS     v4 = v5.PlayerStats
[413] :1153:GETTABLEKS     v3 = v4.InAwakening
[415] :1153:GETTABLEKS     v2 = v3.Value
[416] :1153:JUMPIFNOT      if v2 then -- goto #456
[417] :1154:GETUPVAL       v3 = u_v15
[419] :1154:GETTABLEKS     v2 = v3.FindCurveDirection
[420] :1154:GETUPVAL       v3 = u_v19
[421] :1154:CALL           v2 = v2(v3)
[422] :1155:GETUPVAL       v5 = u_v29
[423] :1155:DIVK           v4 = v5 / 3.5
[424] :1155:MINUS          v3 = -v4
[425] :1157:LOADN          v8 = 0
[426] :1157:LOADN          v10 = 0
[429] :1157:MOVE           v9 = p49
[431] :1157:GETIMPORT      v7 = Vector3.new
[432] :1157:CALL           v7 = v7(v8, v9, v10)
[433] :1157:ADD            v6 = v1 + v7
[434] :1157:DIVK           v7 = v2 / 2
[435] :1157:ADD            v5 = v6 + v7
[436] :1157:MUL            v4 = v5 * p48
[438] :1157:SETTABLEKS     p47.AssemblyLinearVelocity = v4
[439] :1159:GETUPVAL       v4 = u_v0
[440] :1159:GETUPVAL       v6 = u_v4
[442] :1159:GETTABLEKS     v5 = v6.Heartbeat
[443] :1159:NEWCLOSURE     v7 = function(p50)
-- proto pool id: 46
-- num upvalues: 6
-- num inner protos: 0
-- size instructions: 53
-- size constants: 10
-- lineinfo gap: 24
-- max stack size: 9
-- is typed: false
[001] :1160:GETUPVAL       v4 = u_v0
[003] :1160:GETTABLEKS     v3 = v4.Football
[005] :1160:GETTABLEKS     v2 = v3.Value
[007] :1160:GETTABLEKS     v1 = v2.OnPlayer
[009] :1160:GETTABLEKS     v0 = v1.Value
[010] :1160:JUMPIFNOT      if v0 then -- goto #16
[011] :1160:GETUPVAL       v1 = u_v0
[013] :1160:GETTABLEKS     v0 = v1.CS
[016] :1160:CALL           v0:Disconnect()
[017] :1161:GETUPVAL       v0 = u_v6
[018] :1161:GETUPVAL       v3 = u_v29
[019] :1161:DIVK           v2 = v3 / 6
[020] :1161:MUL            v1 = v2 * p50
[021] :1161:ADD            v0 = v0 + v1
[022] :1161:SETUPVAL       u_v6 = v0
[023] :1162:GETUPVAL       v0 = u_v6
[024] :1162:GETUPVAL       v3 = u_v29
[025] :1162:DIVK           v2 = v3 / 8
[026] :1162:MINUS          v1 = -v2
[028] :1162:JUMPIFNOTLE    if v1 <= v0 then -- goto #35
[029] :1162:GETUPVAL       v1 = u_v0
[031] :1162:GETTABLEKS     v0 = v1.CS
[034] :1162:CALL           v0:Disconnect()
end
[035] :1164:GETUPVAL       v0 = u_v0
[036] :1164:GETUPVAL       v2 = u_v0
[038] :1164:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[039] :1164:GETUPVAL       v5 = u_v0
[041] :1164:GETTABLEKS     v4 = v5.AssemblyLinearVelocity
[042] :1164:GETUPVAL       v6 = u_v5
[043] :1164:GETUPVAL       v7 = u_v6
[044] :1164:MUL            v5 = v6 * v7
[045] :1164:ADD            v3 = v4 + v5
[046] :1164:LOADK          v5 = 6.5
[047] :1164:MUL            v4 = v5 * p50
[050] :1164:CALL           v1 = v1:Lerp(v3, v4)
[052] :1164:SETTABLEKS     v0.AssemblyLinearVelocity = v1
[053] :1165:RETURN         return
end
[452] :1159:CALL           v5 = v5:Connect(v7)
[454] :1159:SETTABLEKS     v4.CS = v5
[456] :1159:JUMP           -- jump to #468
end
[457] :1168:LOADN          v5 = 0
[458] :1168:LOADN          v7 = 0
[461] :1168:MOVE           v6 = p50
[463] :1168:GETIMPORT      v4 = Vector3.new
[464] :1168:CALL           v4 = v4(v5, v6, v7)
[465] :1168:ADD            v3 = v1 + v4
[466] :1168:MUL            v2 = v3 * p49
[468] :1168:SETTABLEKS     p48.AssemblyLinearVelocity = v2
[469] :1175:LOADB          v1 = false
[470] :1175:SETUPVAL       u_v33 = v1
[471] :1176:LOADB          v1 = false
[472] :1176:SETUPVAL       u_v34 = v1
[473] :1178:GETUPVAL       v1 = u_v0
[474] :1178:MOVE           v3 = p48
[477] :1178:CALL           v1:DragBall(v3)
[478] :1179:RETURN         return
end
[146] :1065:CALL           v0:Connect(v2, v3)
[148] :1181:GETTABLEKS     v0 = p50.BaseTrove
[150] :1181:GETTABLEKS     v3 = p50.BallService
[152] :1181:GETTABLEKS     v2 = v3.Prediction
[153] :1181:NEWCLOSURE     v3 = function(p51, p52)
-- proto pool id: 48
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 7
-- size constants: 1
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :1182:GETUPVAL       v0 = u_v0
[002] :1182:MOVE           v2 = p51
[003] :1182:MOVE           v3 = p52
[006] :1182:CALL           v0:Predict(v2, v3)
[007] :1183:RETURN         return
end
[157] :1181:CALL           v0:Connect(v2, v3)
[158] :1184:DUPCLOSURE     
local function setupClientBall(p53)
-- proto pool id: 55
-- num upvalues: 8
-- num inner protos: 2
-- size instructions: 46
-- size constants: 9
-- lineinfo gap: 24
-- max stack size: 10
-- is typed: false
[001] :1185:JUMPIF         if not p53 then -- goto #2
end
[002] :1186:RETURN         return
[003] :1189:LOADN          v0 = 0
[004] :1190:LOADB          v1 = false
[005] :1191:LOADB          v2 = false
[006] :1193:LOADK          v5 = "Char"
[007] :1193:LOADN          v6 = 20
[010] :1193:CALL           v3 = v3:WaitForChild(v5, v6)
[011] :1194:JUMPIFNOT      if v3 then -- goto #20
[013] :1195:GETTABLEKS     v4 = v3.Changed
[014] :1195:NEWCLOSURE     v6 = function(p54)
-- proto pool id: 49
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 25
-- size constants: 10
-- lineinfo gap: 24
-- max stack size: 10
-- is typed: false
[001] :1196:GETUPVAL       v0 = u_v3
[002] :1196:MOVE           v2 = p54
[005] :1196:CALL           v0 = v0:GetPlayerFromCharacter(v2)
[006] :1197:JUMPIFNOT      if v0 then -- goto #24
[007] :1198:GETUPVAL       v2 = u_v0
[009] :1198:GETTABLEKS     v1 = v2.Trail
[011] :1198:GETIMPORT      v2 = ColorSequence.new
[012] :1198:GETUPVAL       v5 = u_v23
[014] :1198:GETTABLEKS     v8 = v0.PlayerStats
[016] :1198:GETTABLEKS     v7 = v8.Style
[018] :1198:GETTABLEKS     v6 = v7.Value
[019] :1198:GETTABLE       v4 = v5[v6]
[021] :1198:GETTABLEKS     v3 = v4.BallColor
[022] :1198:CALL           v2 = v2(v3)
[024] :1198:SETTABLEKS     v1.Color = v2
[025] :1201:RETURN         return
end
[020] :1195:CALL           v4:Connect(v6)
[021] :1204:GETUPVAL       v8 = u_v9
[023] :1204:GETTABLEKS     v7 = v8.Football
[025] :1204:GETTABLEKS     v6 = v7.Value
[027] :1204:GETTABLEKS     v5 = v6.BallAnims
[029] :1204:GETTABLEKS     v4 = v5.BALL
[031] :1205:GETTABLEKS     v5 = v4.Touched
[032] :1205:NEWCLOSURE     v7 = function(p55: userdata)
-- proto pool id: 54
-- num upvalues: 9
-- num inner protos: 4
-- size instructions: 248
-- size constants: 53
-- lineinfo gap: 24
-- max stack size: 8
-- is typed: true
[001] :1206:GETUPVAL       v2 = u_v0
[003] :1206:GETTABLEKS     v1 = v2.OnPlayer
[005] :1206:GETTABLEKS     v0 = v1.Value
[006] :1206:JUMPIF         if not v0 then -- goto #30
[007] :1206:GETUPVAL       v2 = u_v0
[009] :1206:GETTABLEKS     v1 = v2.AssemblyLinearVelocity
[011] :1206:GETTABLEKS     v0 = v1.Magnitude
[012] :1206:LOADN          v1 = 10
[014] :1206:JUMPIFLE       if v0 => v1 then -- goto #31
[016] :1206:GETTABLEKS     v0 = p55.Name
[018] :1206:JUMPXEQKS      if v0 ~= "Hitbox" then -- goto #31
[019] :1206:GETUPVAL       v2 = u_v0
[022] :1206:CALL           v0 = v0:IsDescendantOf(v2)
[023] :1206:JUMPIF         if not v0 then -- goto #30
[025] :1206:GETTABLEKS     v0 = p55.Parent
[026] :1206:LOADK          v2 = "Humanoid"
[029] :1206:CALL           v0 = v0:FindFirstChild(v2)
end
end
[030] :1206:JUMPIFNOT      if v0 then -- goto #31
end
end
end
[031] :1207:RETURN         return
[033] :1210:GETTABLEKS     v0 = p55.Name
[035] :1210:JUMPXEQKS      if v0 ~= "Field" then -- goto #42
[037] :1210:GETTABLEKS     v1 = p55.Parent
[039] :1210:GETTABLEKS     v0 = v1.Name
[041] :1210:JUMPXEQKS      if v0 == "Field" then -- goto #142
end
[042] :1211:GETUPVAL       v3 = u_v0
[044] :1211:GETTABLEKS     v2 = v3.AssemblyLinearVelocity
[046] :1211:GETTABLEKS     v1 = v2.Y
[049] :1211:GETIMPORT      v0 = math.abs
[050] :1211:CALL           v0 = v0(v1)
[051] :1211:LOADN          v1 = 8
[053] :1211:JUMPIFLE       if v0 => v1 then -- goto #56
[054] :1211:GETUPVAL       v0 = u_v3
[055] :1211:JUMPIFNOT      if v0 then -- goto #56
end
end
[056] :1212:RETURN         return
[057] :1215:GETUPVAL       v1 = u_v18
[059] :1215:GETTABLEKS     v0 = v1.Cast
[060] :1215:GETUPVAL       v2 = u_v0
[062] :1215:GETTABLEKS     v1 = v2.Position
[063] :1215:LOADK          v2 = Vector3.new(0, -15, 0)
[065] :1215:NEWTABLE       v3 = {} --[[2 preallocated indexes]]
[066] :1215:GETUPVAL       v4 = u_v0
[068] :1215:GETIMPORT      v6 = workspace
[070] :1215:GETTABLEKS     v5 = v6.Debris
[072] :1215:SETLIST        v3[1] = v4
v4[2] = v5
[073] :1215:LOADB          v4 = false
[074] :1215:LOADB          v5 = true
[075] :1215:CALL           v0 = v0(v1, v2, v3, v4, v5)
[076] :1216:JUMPIF         if not v0 then -- goto #77
end
[077] :1216:RETURN         return
[078] :1218:LOADB          v1 = true
[079] :1218:SETUPVAL       u_v3 = v1
[081] :1219:GETIMPORT      v1 = task.delay
[082] :1219:LOADK          v2 = 0.5
[083] :1219:NEWCLOSURE     v3 = function()
-- proto pool id: 50
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 3
-- size constants: 0
-- lineinfo gap: 24
-- max stack size: 1
-- is typed: false
[001] :1220:LOADB          v0 = false
[002] :1220:SETUPVAL       u_v3 = v0
[003] :1221:RETURN         return
end
[085] :1219:CALL           v1(v2, v3)
[086] :1223:GETUPVAL       v4 = u_v0
[088] :1223:GETTABLEKS     v3 = v4.Assets
[090] :1223:GETTABLEKS     v2 = v3.Vfx
[092] :1223:GETTABLEKS     v1 = v2.FloorHit
[095] :1223:CALL           v1 = v1:Clone()
[097] :1224:GETTABLEKS     v3 = v0.Position
[098] :1224:LOADK          v4 = Vector3.new(0, 1, 0)
[099] :1224:ADD            v2 = v3 + v4
[101] :1224:SETTABLEKS     v1.Position = v2
[103] :1225:GETIMPORT      v3 = workspace
[105] :1225:GETTABLEKS     v2 = v3.Debris
[107] :1225:SETTABLEKS     v1.Parent = v2
[108] :1227:GETUPVAL       v3 = u_v20
[110] :1227:GETTABLEKS     v2 = v3.SpawnSound
[111] :1227:LOADK          v3 = "GrassLand"
[112] :1227:LOADN          v4 = 1
[113] :1227:GETUPVAL       v5 = u_v0
[114] :1227:LOADN          v6 = 70
[115] :1227:CALL           v2 = v2(v3, v4, v5, v6)
[116] :1227:GETUPVAL       v5 = u_v1
[117] :1227:MULK           v4 = v5 * 0.2
[118] :1227:ADDK           v3 = v4 + 1
[120] :1227:SETTABLEKS     v2.PlaybackSpeed = v3
[121] :1228:GETUPVAL       v2 = u_v1
[122] :1228:ADDK           v2 = v2 + 1
[123] :1228:SETUPVAL       u_v1 = v2
[124] :1229:GETUPVAL       v3 = u_v17
[126] :1229:GETTABLEKS     v2 = v3.Emit
[127] :1229:MOVE           v3 = v1
[128] :1229:CALL           v2(v3)
[129] :1231:GETUPVAL       v2 = u_v7
[130] :1231:MOVE           v4 = v1
[131] :1231:LOADN          v5 = 1
[134] :1231:CALL           v2:AddItem(v4, v5)
[136] :1232:GETIMPORT      v2 = task.delay
[137] :1232:LOADN          v3 = 1
[138] :1232:NEWCLOSURE     v4 = function()
-- proto pool id: 51
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 4
-- size constants: 1
-- lineinfo gap: 24
-- max stack size: 1
-- is typed: false
[001] :1233:GETUPVAL       v0 = u_v1
[002] :1233:SUBK           v0 = v0 - 1
[003] :1233:SETUPVAL       u_v1 = v0
[004] :1234:RETURN         return
end
[140] :1232:CALL           v2(v3, v4)
[141] :1232:RETURN         return
end
[142] :1235:LOADK          v2 = "WallBounce"
[145] :1235:CALL           v0 = v0:HasTag(v2)
[146] :1235:JUMPIFNOT      if v0 then -- goto #247
[147] :1236:GETUPVAL       v0 = u_v2
[148] :1236:JUMPIFNOT      if v0 then -- goto #149
end
[149] :1236:RETURN         return
[150] :1237:GETUPVAL       v1 = u_v18
[152] :1237:GETTABLEKS     v0 = v1.Cast
[153] :1237:GETUPVAL       v2 = u_v0
[155] :1237:GETTABLEKS     v1 = v2.Position
[156] :1237:GETUPVAL       v6 = u_v0
[158] :1237:GETTABLEKS     v5 = v6.AssemblyLinearVelocity
[160] :1237:GETTABLEKS     v4 = v5.Unit
[161] :1237:MINUS          v3 = -v4
[162] :1237:MULK           v2 = v3 * 15
[164] :1237:NEWTABLE       v3 = {} --[[2 preallocated indexes]]
[165] :1237:GETUPVAL       v4 = u_v0
[167] :1237:GETIMPORT      v6 = workspace
[169] :1237:GETTABLEKS     v5 = v6.Debris
[171] :1237:SETLIST        v3[1] = v4
v4[2] = v5
[172] :1237:LOADB          v4 = false
[173] :1237:LOADB          v5 = true
[174] :1237:CALL           v0 = v0(v1, v2, v3, v4, v5)
[175] :1238:JUMPIF         if not v0 then -- goto #176
end
[176] :1238:RETURN         return
[177] :1240:LOADB          v1 = true
[178] :1240:SETUPVAL       u_v2 = v1
[180] :1241:GETIMPORT      v1 = task.delay
[181] :1241:LOADN          v2 = 1
[182] :1241:NEWCLOSURE     v3 = function()
-- proto pool id: 52
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 3
-- size constants: 0
-- lineinfo gap: 24
-- max stack size: 1
-- is typed: false
[001] :1242:LOADB          v0 = false
[002] :1242:SETUPVAL       u_v2 = v0
[003] :1243:RETURN         return
end
[184] :1241:CALL           v1(v2, v3)
[185] :1246:GETUPVAL       v4 = u_v0
[187] :1246:GETTABLEKS     v3 = v4.Assets
[189] :1246:GETTABLEKS     v2 = v3.Vfx
[191] :1246:GETTABLEKS     v1 = v2.BarrierHit
[194] :1246:CALL           v1 = v1:Clone()
[196] :1247:GETIMPORT      v2 = CFrame.new
[198] :1247:GETTABLEKS     v3 = v0.Position
[200] :1247:GETTABLEKS     v5 = v0.Position
[202] :1247:GETTABLEKS     v6 = v0.Normal
[203] :1247:ADD            v4 = v5 + v6
[204] :1247:CALL           v2 = v2(v3, v4)
[206] :1247:SETTABLEKS     v1.CFrame = v2
[208] :1248:GETIMPORT      v3 = workspace
[210] :1248:GETTABLEKS     v2 = v3.Debris
[212] :1248:SETTABLEKS     v1.Parent = v2
[213] :1250:GETUPVAL       v3 = u_v17
[215] :1250:GETTABLEKS     v2 = v3.Emit
[216] :1250:MOVE           v3 = v1
[217] :1250:CALL           v2(v3)
[218] :1251:GETUPVAL       v2 = u_v7
[219] :1251:MOVE           v4 = v1
[220] :1251:LOADN          v5 = 1
[223] :1251:CALL           v2:AddItem(v4, v5)
[224] :1252:GETUPVAL       v3 = u_v20
[226] :1252:GETTABLEKS     v2 = v3.SpawnSound
[227] :1252:LOADK          v3 = "BallsHitTheWall"
[228] :1252:LOADK          v4 = 0.65
[229] :1252:GETUPVAL       v5 = u_v0
[230] :1252:LOADN          v6 = 70
[231] :1252:CALL           v2 = v2(v3, v4, v5, v6)
[232] :1253:LOADN          v3 = 80
[234] :1253:SETTABLEKS     v2.RollOffMaxDistance = v3
[236] :1254:GETIMPORT      v3 = Enum.RollOffMode.InverseTapered
[238] :1254:SETTABLEKS     v2.RollOffMode = v3
[239] :1255:GETUPVAL       v3 = u_v1
[240] :1255:ADDK           v3 = v3 + 1
[241] :1255:SETUPVAL       u_v1 = v3
[243] :1256:GETIMPORT      v3 = task.delay
[244] :1256:LOADN          v4 = 1
[245] :1256:NEWCLOSURE     v5 = function()
-- proto pool id: 53
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 4
-- size constants: 1
-- lineinfo gap: 24
-- max stack size: 1
-- is typed: false
[001] :1257:GETUPVAL       v0 = u_v1
[002] :1257:SUBK           v0 = v0 - 1
[003] :1257:SETUPVAL       u_v1 = v0
[004] :1258:RETURN         return
end
[247] :1256:CALL           v3(v4, v5)
[248] :1260:RETURN         return
end
[044] :1205:CALL           v5:Connect(v7)
[046] :1261:RETURN         return
end
v0 = setupClientBall
[167] :1262:MOVE           v1 = v0
[168] :1262:GETUPVAL       v4 = u_v9
[170] :1262:GETTABLEKS     v3 = v4.Football
[172] :1262:GETTABLEKS     v2 = v3.Value
[173] :1262:CALL           v1(v2)
[174] :1263:GETUPVAL       v3 = u_v9
[176] :1263:GETTABLEKS     v2 = v3.Football
[178] :1263:GETTABLEKS     v1 = v2.Changed
[179] :1263:MOVE           v3 = v0
[182] :1263:CALL           v1:Connect(v3)
[184] :1265:GETTABLEKS     v1 = p55.BaseTrove
[185] :1265:GETUPVAL       v5 = u_v19
[187] :1265:GETTABLEKS     v4 = v5.PlayerStats
[189] :1265:GETTABLEKS     v3 = v4.InFlow
[190] :1265:LOADK          v5 = "Value"
[193] :1521:CALL           v3 = v3:GetPropertyChangedSignal(v5)
[194] :1521:NEWCLOSURE     v4 = function()
-- proto pool id: 56
-- num upvalues: 4
-- num inner protos: 0
-- size instructions: 90
-- size constants: 12
-- lineinfo gap: 24
-- max stack size: 4
-- is typed: false
[001] :1267:GETUPVAL       v1 = u_v24
[003] :1267:GETTABLEKS     v0 = v1.GetCurrentStyle
[004] :1267:CALL           v0 = v0()
[006] :1267:JUMPXEQKS      if v0 == "NEL Reo" then -- goto #17
[007] :1267:GETUPVAL       v1 = u_v19
[009] :1267:GETTABLEKS     v0 = v1.Character
[010] :1267:LOADK          v2 = "StrikeMode"
[013] :1267:CALL           v0 = v0:GetAttribute(v2)
[014] :1267:JUMPIF         if not v0 then -- goto #16
[015] :1268:LOADN          v0 = 2
end
[016] :1268:SETUPVAL       u_v31 = v0
end
[017] :1272:GETUPVAL       v1 = u_v24
[019] :1272:GETTABLEKS     v0 = v1.GetCurrentStyle
[020] :1272:CALL           v0 = v0()
[022] :1272:JUMPXEQKS      if v0 == "NEL Reo" then -- goto #33
[023] :1272:GETUPVAL       v1 = u_v19
[025] :1272:GETTABLEKS     v0 = v1.Character
[026] :1272:LOADK          v2 = "StrikeMode"
[029] :1272:CALL           v0 = v0:GetAttribute(v2)
[030] :1272:JUMPIFNOT      if v0 then -- goto #32
[031] :1273:LOADN          v0 = 2
end
[032] :1273:SETUPVAL       u_v30 = v0
end
[033] :1277:GETUPVAL       v3 = u_v19
[035] :1277:GETTABLEKS     v2 = v3.PlayerStats
[037] :1277:GETTABLEKS     v1 = v2.InFlow
[039] :1277:GETTABLEKS     v0 = v1.Value
[040] :1277:JUMPIF         if not v0 then -- goto #41
end
[041] :1277:RETURN         return
[042] :1279:GETUPVAL       v3 = u_v19
[044] :1279:GETTABLEKS     v2 = v3.PlayerStats
[046] :1279:GETTABLEKS     v1 = v2.Flow
[048] :1279:GETTABLEKS     v0 = v1.Value
[050] :1279:JUMPXEQKS      if v0 ~= "Awakened Genius" then -- goto #60
[051] :1279:GETUPVAL       v3 = u_v19
[053] :1279:GETTABLEKS     v2 = v3.PlayerStats
[055] :1279:GETTABLEKS     v1 = v2.Flow
[057] :1279:GETTABLEKS     v0 = v1.Value
[059] :1279:JUMPXEQKS      if v0 == "Soul Harvester" then -- goto #71
end
[060] :1279:GETUPVAL       v3 = u_v19
[062] :1279:GETTABLEKS     v2 = v3.PlayerStats
[064] :1279:GETTABLEKS     v1 = v2.InFlow
[066] :1279:GETTABLEKS     v0 = v1.Value
[067] :1279:JUMPIFNOT      if v0 then -- goto #70
[068] :1280:LOADN          v0 = 2
[069] :1280:SETUPVAL       u_v30 = v0
end
[070] :1280:RETURN         return
end
[071] :1281:GETUPVAL       v3 = u_v19
[073] :1281:GETTABLEKS     v2 = v3.PlayerStats
[075] :1281:GETTABLEKS     v1 = v2.Flow
[077] :1281:GETTABLEKS     v0 = v1.Value
[079] :1281:JUMPXEQKS      if v0 == "Bee Freestyle" then -- goto #90
[080] :1281:GETUPVAL       v3 = u_v19
[082] :1281:GETTABLEKS     v2 = v3.PlayerStats
[084] :1281:GETTABLEKS     v1 = v2.InFlow
[086] :1281:GETTABLEKS     v0 = v1.Value
[087] :1281:JUMPIFNOT      if v0 then -- goto #89
[088] :1282:LOADN          v0 = 3
end
[089] :1282:SETUPVAL       u_v30 = v0
end
[090] :1284:RETURN         return
end
[201] :1521:CALL           v1:Connect(v3, v4)
[203] :1542:GETIMPORT      v1 = tick
[204] :1542:CALL           v1 = v1()
[205] :1543:LOADB          v2 = false
[207] :1545:GETIMPORT      v3 = tick
[208] :1545:CALL           v3 = v3()
[210] :1547:GETTABLEKS     v4 = p55.NewTrove
[211] :1547:GETUPVAL       v7 = u_v4
[213] :1547:GETTABLEKS     v6 = v7.Heartbeat
[214] :1547:NEWCLOSURE     v7 = function()
-- proto pool id: 57
-- num upvalues: 8
-- num inner protos: 0
-- size instructions: 119
-- size constants: 20
-- lineinfo gap: 24
-- max stack size: 5
-- is typed: false
[001] :1292:GETUPVAL       v0 = u_v4
[003] :1292:GETIMPORT      v1 = tick
[004] :1292:CALL           v1 = v1()
[006] :1292:JUMPIFNOTLT    if v1 < v0 then -- goto #8
[007] :1292:RETURN         return
end
[009] :1293:GETIMPORT      v1 = tick
[010] :1293:CALL           v1 = v1()
[011] :1293:ADDK           v0 = v1 + 0.2
[012] :1293:SETUPVAL       u_v4 = v0
[013] :1294:GETUPVAL       v0 = u_v25
[015] :1294:JUMPXEQKNIL    if v0 == nil then -- goto #17
[016] :1294:RETURN         return
end
[017] :1295:GETUPVAL       v0 = u_v27
[019] :1295:JUMPXEQKNIL    if v0 == nil then -- goto #21
[020] :1295:RETURN         return
end
[021] :1296:GETUPVAL       v2 = u_v0
[023] :1296:GETTABLEKS     v1 = v2.Football
[025] :1296:GETTABLEKS     v0 = v1.Value
[026] :1296:LOADK          v2 = "Char"
[029] :1296:CALL           v0 = v0:FindFirstChild(v2)
[030] :1296:JUMPIF         if not v0 then -- goto #31
end
[031] :1296:RETURN         return
[032] :1297:GETUPVAL       v3 = u_v25
[034] :1297:GETTABLEKS     v2 = v3.Values
[036] :1297:GETTABLEKS     v1 = v2.Goalie
[038] :1297:GETTABLEKS     v0 = v1.Value
[039] :1297:JUMPIFNOT      if v0 then -- goto #40
end
[040] :1297:RETURN         return
[041] :1298:GETUPVAL       v4 = u_v0
[043] :1298:GETTABLEKS     v3 = v4.Football
[045] :1298:GETTABLEKS     v2 = v3.Value
[047] :1298:GETTABLEKS     v1 = v2.Char
[049] :1298:GETTABLEKS     v0 = v1.Value
[050] :1298:GETUPVAL       v1 = u_v25
[052] :1298:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #62
[053] :1298:GETUPVAL       v3 = u_v25
[055] :1298:GETTABLEKS     v2 = v3.Values
[057] :1298:GETTABLEKS     v1 = v2.IsInSmallBox
[059] :1298:GETTABLEKS     v0 = v1.Value
[061] :1298:JUMPXEQKB      if v0 == false then -- goto #66
end
[063] :1298:GETIMPORT      v0 = tick
[064] :1298:CALL           v0 = v0()
[065] :1298:SETUPVAL       u_v2 = v0
end
[066] :1299:GETUPVAL       v0 = u_v25
[067] :1299:LOADK          v2 = "Values"
[070] :1299:CALL           v0 = v0:FindFirstChild(v2)
[071] :1299:JUMPIF         if not v0 then -- goto #72
end
[072] :1299:RETURN         return
[073] :1300:GETUPVAL       v1 = u_v19
[075] :1300:GETTABLEKS     v0 = v1.Team
[077] :1300:GETIMPORT      v3 = game
[079] :1300:GETTABLEKS     v2 = v3.Teams
[081] :1300:GETTABLEKS     v1 = v2.Visitor
[083] :1300:JUMPIFNOTEQ    if v0 ~= v1 then -- goto #85
[084] :1300:RETURN         return
end
[085] :1302:GETUPVAL       v1 = u_v2
[086] :1302:ADDK           v0 = v1 + 10
[088] :1302:GETIMPORT      v1 = tick
[089] :1302:CALL           v1 = v1()
[091] :1302:JUMPIFNOTLT    if v0 < v1 then -- goto #117
[092] :1303:GETUPVAL       v3 = u_v25
[094] :1303:GETTABLEKS     v2 = v3.Values
[096] :1303:GETTABLEKS     v1 = v2.HasBall
[098] :1303:GETTABLEKS     v0 = v1.Value
[099] :1303:JUMPIFNOT      if v0 then -- goto #118
[100] :1303:GETUPVAL       v0 = u_v3
[101] :1303:JUMPIF         if not v0 then -- goto #118
[103] :1304:GETIMPORT      v0 = tick
[104] :1304:CALL           v0 = v0()
[105] :1304:SETUPVAL       u_v2 = v0
[106] :1305:LOADB          v0 = true
[107] :1305:SETUPVAL       u_v3 = v0
[108] :1307:GETUPVAL       v2 = u_v0
[110] :1307:GETTABLEKS     v1 = v2.BallService
[112] :1307:GETTABLEKS     v0 = v1.ResetToMid
[115] :1307:CALL           v0:Fire()
[116] :1307:RETURN         return
end
[117] :1312:LOADB          v0 = false
end
end
[118] :1312:SETUPVAL       u_v3 = v0
[119] :1316:RETURN         return
end
[225] :1547:CALL           v4:Connect(v6, v7)
[226] :1574:DUPCLOSURE     
local function destroyMainBallSkin()
-- proto pool id: 58
-- num upvalues: 1
-- num inner protos: 0
-- size instructions: 32
-- size constants: 10
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :1319:GETUPVAL       v4 = u_v9
[003] :1319:GETTABLEKS     v3 = v4.Football
[005] :1319:GETTABLEKS     v2 = v3.Value
[007] :1319:GETTABLEKS     v1 = v2.BallAnims
[009] :1319:GETTABLEKS     v0 = v1.BALL
[011] :1320:GETTABLEKS     v2 = v0.Parent
[013] :1320:GETTABLEKS     v1 = v2.Parent
[014] :1321:LOADK          v4 = "BallSkinBall"
[017] :1321:CALL           v2 = v2:FindFirstChild(v4)
[018] :1322:JUMPIFNOT      if v2 then -- goto #31
[021] :1323:CALL           v3:Destroy()
[022] :1324:LOADK          v5 = "Highlight"
[025] :1324:CALL           v3 = v3:FindFirstChild(v5)
[026] :1324:JUMPIFNOT      if v3 then -- goto #31
[028] :1325:GETTABLEKS     v3 = v1.Highlight
[029] :1325:LOADB          v4 = true
[031] :1325:SETTABLEKS     v3.Enabled = v4
[032] :1328:RETURN         return
end
v4 = destroyMainBallSkin
[228] :1585:DUPCLOSURE     
local function updateMainBallSkin()
-- proto pool id: 59
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 235
-- size constants: 29
-- lineinfo gap: 24
-- max stack size: 12
-- is typed: false
[001] :1330:GETUPVAL       v4 = u_v9
[003] :1330:GETTABLEKS     v3 = v4.Football
[005] :1330:GETTABLEKS     v2 = v3.Value
[007] :1330:GETTABLEKS     v1 = v2.BallAnims
[009] :1330:GETTABLEKS     v0 = v1.BALL
[011] :1331:GETTABLEKS     v2 = v0.Parent
[013] :1331:GETTABLEKS     v1 = v2.Parent
[014] :1333:GETUPVAL       v6 = u_v0
[016] :1333:GETTABLEKS     v5 = v6.Football
[018] :1333:GETTABLEKS     v4 = v5.Value
[020] :1333:GETTABLEKS     v3 = v4.Char
[022] :1333:GETTABLEKS     v2 = v3.Value
[023] :1334:JUMPIF         if not v2 then -- goto #55
[024] :1319:GETUPVAL       v7 = u_v9
[026] :1319:GETTABLEKS     v6 = v7.Football
[028] :1319:GETTABLEKS     v5 = v6.Value
[030] :1319:GETTABLEKS     v4 = v5.BallAnims
[032] :1319:GETTABLEKS     v3 = v4.BALL
[034] :1320:GETTABLEKS     v5 = v3.Parent
[036] :1320:GETTABLEKS     v4 = v5.Parent
[037] :1321:LOADK          v7 = "BallSkinBall"
[040] :1321:CALL           v5 = v5:FindFirstChild(v7)
[041] :1322:JUMPIFNOT      if v5 then -- goto #54
[044] :1323:CALL           v6:Destroy()
[045] :1324:LOADK          v8 = "Highlight"
[048] :1324:CALL           v6 = v6:FindFirstChild(v8)
[049] :1324:JUMPIFNOT      if v6 then -- goto #54
[051] :1325:GETTABLEKS     v6 = v4.Highlight
[052] :1325:LOADB          v7 = true
[054] :1325:SETTABLEKS     v6.Enabled = v7
end
[055] :1336:RETURN         return
[057] :1339:GETTABLEKS     v5 = v2.Values
[059] :1339:GETTABLEKS     v4 = v5.HasBall
[061] :1339:GETTABLEKS     v3 = v4.Value
[062] :1339:JUMPIFNOT      if v3 then -- goto #94
[063] :1319:GETUPVAL       v7 = u_v9
[065] :1319:GETTABLEKS     v6 = v7.Football
[067] :1319:GETTABLEKS     v5 = v6.Value
[069] :1319:GETTABLEKS     v4 = v5.BallAnims
[071] :1319:GETTABLEKS     v3 = v4.BALL
[073] :1320:GETTABLEKS     v5 = v3.Parent
[075] :1320:GETTABLEKS     v4 = v5.Parent
[076] :1321:LOADK          v7 = "BallSkinBall"
[079] :1321:CALL           v5 = v5:FindFirstChild(v7)
[080] :1322:JUMPIFNOT      if v5 then -- goto #93
[083] :1323:CALL           v6:Destroy()
[084] :1324:LOADK          v8 = "Highlight"
[087] :1324:CALL           v6 = v6:FindFirstChild(v8)
[088] :1324:JUMPIFNOT      if v6 then -- goto #93
[090] :1325:GETTABLEKS     v6 = v4.Highlight
[091] :1325:LOADB          v7 = true
[093] :1325:SETTABLEKS     v6.Enabled = v7
end
[094] :1341:RETURN         return
[095] :1343:GETUPVAL       v3 = u_v3
[096] :1343:MOVE           v5 = v2
[099] :1343:CALL           v3 = v3:GetPlayerFromCharacter(v5)
[100] :1344:JUMPIF         if not v3 then -- goto #132
[101] :1319:GETUPVAL       v8 = u_v9
[103] :1319:GETTABLEKS     v7 = v8.Football
[105] :1319:GETTABLEKS     v6 = v7.Value
[107] :1319:GETTABLEKS     v5 = v6.BallAnims
[109] :1319:GETTABLEKS     v4 = v5.BALL
[111] :1320:GETTABLEKS     v6 = v4.Parent
[113] :1320:GETTABLEKS     v5 = v6.Parent
[114] :1321:LOADK          v8 = "BallSkinBall"
[117] :1321:CALL           v6 = v6:FindFirstChild(v8)
[118] :1322:JUMPIFNOT      if v6 then -- goto #131
[121] :1323:CALL           v7:Destroy()
[122] :1324:LOADK          v9 = "Highlight"
[125] :1324:CALL           v7 = v7:FindFirstChild(v9)
[126] :1324:JUMPIFNOT      if v7 then -- goto #131
[128] :1325:GETTABLEKS     v7 = v5.Highlight
[129] :1325:LOADB          v8 = true
[131] :1325:SETTABLEKS     v7.Enabled = v8
end
[132] :1346:RETURN         return
[133] :1348:LOADK          v6 = "EquippedBallSkin"
[136] :1348:CALL           v4 = v4:GetAttribute(v6)
[138] :1349:JUMPXEQKS      if v4 == "" then -- goto #171
[139] :1319:GETUPVAL       v9 = u_v9
[141] :1319:GETTABLEKS     v8 = v9.Football
[143] :1319:GETTABLEKS     v7 = v8.Value
[145] :1319:GETTABLEKS     v6 = v7.BallAnims
[147] :1319:GETTABLEKS     v5 = v6.BALL
[149] :1320:GETTABLEKS     v7 = v5.Parent
[151] :1320:GETTABLEKS     v6 = v7.Parent
[152] :1321:LOADK          v9 = "BallSkinBall"
[155] :1321:CALL           v7 = v7:FindFirstChild(v9)
[156] :1322:JUMPIFNOT      if v7 then -- goto #169
[159] :1323:CALL           v8:Destroy()
[160] :1324:LOADK          v10 = "Highlight"
[163] :1324:CALL           v8 = v8:FindFirstChild(v10)
[164] :1324:JUMPIFNOT      if v8 then -- goto #169
[166] :1325:GETTABLEKS     v8 = v6.Highlight
[167] :1325:LOADB          v9 = true
[169] :1325:SETTABLEKS     v8.Enabled = v9
[170] :1351:RETURN         return
end
[171] :1353:LOADK          v7 = "BallSkinBall"
[174] :1353:CALL           v5 = v5:FindFirstChild(v7)
[175] :1353:JUMPIFNOT      if v5 then -- goto #183
[177] :1353:GETTABLEKS     v5 = v0.BallSkinBall
[178] :1353:MOVE           v7 = v4
[181] :1353:CALL           v5 = v5:FindFirstChild(v7)
[182] :1353:JUMPIFNOT      if v5 then -- goto #183
end
end
[183] :1354:RETURN         return
[184] :1356:GETUPVAL       v9 = u_v9
[186] :1356:GETTABLEKS     v8 = v9.Assets
[188] :1356:GETTABLEKS     v7 = v8.Customization
[190] :1356:GETTABLEKS     v6 = v7.Misc
[192] :1356:GETTABLEKS     v5 = v6.BallSkinBall
[195] :1356:CALL           v5 = v5:Clone()
[197] :1357:SETTABLEKS     v5.Parent = v0
[199] :1359:GETTABLEKS     v6 = v0.CFrame
[201] :1359:SETTABLEKS     v5.CFrame = v6
[203] :1360:GETIMPORT      v6 = Instance.new
[204] :1360:LOADK          v7 = "WeldConstraint"
[205] :1360:CALL           v6 = v6(v7)
[207] :1361:SETTABLEKS     v6.Part0 = v0
[209] :1362:SETTABLEKS     v6.Part1 = v5
[211] :1363:SETTABLEKS     v6.Parent = v5
[212] :1365:GETUPVAL       v11 = u_v9
[214] :1365:GETTABLEKS     v10 = v11.Assets
[216] :1365:GETTABLEKS     v9 = v10.Customization
[218] :1365:GETTABLEKS     v8 = v9.BallSkins
[219] :1365:GETTABLE       v7 = v8[v4]
[222] :1365:CALL           v7 = v7:Clone()
[224] :1366:SETTABLEKS     v7.Parent = v5
[225] :1367:LOADK          v10 = "Highlight"
[228] :1367:CALL           v8 = v8:FindFirstChild(v10)
[229] :1367:JUMPIFNOT      if v8 then -- goto #234
[231] :1368:GETTABLEKS     v8 = v1.Highlight
[232] :1368:LOADB          v9 = false
[234] :1368:SETTABLEKS     v8.Enabled = v9
[235] :1372:RETURN         return
end
v5 = updateMainBallSkin
[233] :1630:GETTABLEKS     v6 = p55.BaseTrove
[234] :1630:GETUPVAL       v9 = u_v4
[236] :1630:GETTABLEKS     v8 = v9.Heartbeat
[237] :1630:DUPCLOSURE     v9 = function(p56)
-- proto pool id: 60
-- num upvalues: 3
-- num inner protos: 0
-- size instructions: 123
-- size constants: 29
-- lineinfo gap: 24
-- max stack size: 16
-- is typed: false
[001] :1375:GETUPVAL       v0 = u_v6
[002] :1375:CALL           v0()
[003] :1377:GETUPVAL       v0 = u_v3
[006] :1377:CALL           v0 = v0:GetPlayers()
[008] :1378:GETIMPORT      v1 = pairs
[009] :1378:MOVE           v2 = v0
[010] :1378:CALL           v1, v2, v3 = v1(v2)
[011] :1378:FORGPREP_NEXT  for v4, v5 in pairs(v2) do -- could be doing next, t
[013] :1379:GETTABLEKS     v6 = v5.Character
[015] :1379:JUMPXEQKNIL    if v6 ~= nil then -- goto #121
[017] :1380:GETTABLEKS     v6 = v5.Character
[018] :1380:LOADK          v8 = "PlrFootball"
[021] :1380:CALL           v6 = v6:FindFirstChild(v8)
[022] :1380:JUMPIFNOT      if v6 then -- goto #120
[024] :1381:GETTABLEKS     v9 = v5.Character
[026] :1381:GETTABLEKS     v8 = v9.Values
[028] :1381:GETTABLEKS     v7 = v8.HasBall
[030] :1381:GETTABLEKS     v6 = v7.Value
[031] :1381:JUMPIF         if not v6 then -- goto #44
[033] :1382:GETTABLEKS     v7 = v5.Character
[035] :1382:GETTABLEKS     v6 = v7.PlrFootball
[036] :1382:LOADK          v8 = "BallSkinBall"
[039] :1382:CALL           v6 = v6:FindFirstChild(v8)
[040] :1383:JUMPIFNOT      if v6 then -- goto #120
[043] :1384:CALL           v7:Destroy()
end
[044] :1384:JUMP           -- jump to #120
[046] :1389:GETTABLEKS     v7 = v5.Character
[048] :1389:GETTABLEKS     v6 = v7.PlrFootball
[049] :1389:LOADK          v8 = "BallSkinBall"
[052] :1389:CALL           v6 = v6:FindFirstChild(v8)
[053] :1390:LOADK          v9 = "EquippedBallSkin"
[056] :1390:CALL           v7 = v7:GetAttribute(v9)
[057] :1391:JUMPIF         if not v6 then -- goto #120
[059] :1391:JUMPXEQKS      if v7 ~= "" then -- goto #121
[060] :1392:GETUPVAL       v12 = u_v9
[062] :1392:GETTABLEKS     v11 = v12.Assets
[064] :1392:GETTABLEKS     v10 = v11.Customization
[066] :1392:GETTABLEKS     v9 = v10.Misc
[068] :1392:GETTABLEKS     v8 = v9.BallSkinBall
[071] :1392:CALL           v8 = v8:Clone()
[073] :1393:GETTABLEKS     v10 = v5.Character
[075] :1393:GETTABLEKS     v9 = v10.PlrFootball
[077] :1393:SETTABLEKS     v8.Parent = v9
[079] :1395:GETTABLEKS     v13 = v5.Character
[081] :1395:GETTABLEKS     v12 = v13.PlrFootball
[083] :1395:GETTABLEKS     v11 = v12.BallAnims
[085] :1395:GETTABLEKS     v10 = v11.BALL
[087] :1395:GETTABLEKS     v9 = v10.CFrame
[089] :1395:SETTABLEKS     v8.CFrame = v9
[091] :1396:GETIMPORT      v9 = Instance.new
[092] :1396:LOADK          v10 = "WeldConstraint"
[093] :1396:CALL           v9 = v9(v10)
[095] :1397:GETTABLEKS     v13 = v5.Character
[097] :1397:GETTABLEKS     v12 = v13.PlrFootball
[099] :1397:GETTABLEKS     v11 = v12.BallAnims
[101] :1397:GETTABLEKS     v10 = v11.BALL
[103] :1397:SETTABLEKS     v9.Part0 = v10
[105] :1398:SETTABLEKS     v9.Part1 = v8
[107] :1399:SETTABLEKS     v9.Parent = v8
[108] :1401:GETUPVAL       v14 = u_v9
[110] :1401:GETTABLEKS     v13 = v14.Assets
[112] :1401:GETTABLEKS     v12 = v13.Customization
[114] :1401:GETTABLEKS     v11 = v12.BallSkins
[115] :1401:GETTABLE       v10 = v11[v7]
[118] :1401:CALL           v10 = v10:Clone()
[120] :1402:SETTABLEKS     v10.Parent = v8
end
end
[122] :1378:FORGLOOP       end -- iterate + jump to #12
[123] :1410:RETURN         return
end
[243] :1630:CALL           v6:Connect(v8, v9)
[245] :1668:GETTABLEKS     v6 = p56.BaseTrove
[246] :1668:GETUPVAL       v9 = u_v4
[248] :1668:GETTABLEKS     v8 = v9.Heartbeat
[249] :1668:NEWCLOSURE     v9 = function(p57)
-- proto pool id: 61
-- num upvalues: 7
-- num inner protos: 0
-- size instructions: 282
-- size constants: 44
-- lineinfo gap: 24
-- max stack size: 21
-- is typed: false
[001] :1413:GETUPVAL       v0 = u_v25
[002] :1413:LOADK          v2 = "Values"
[005] :1413:CALL           v0 = v0:WaitForChild(v2)
[007] :1413:JUMPXEQKNIL    if v0 == nil then -- goto #9
[008] :1413:RETURN         return
end
[009] :1415:GETUPVAL       v0 = u_v25
[010] :1415:LOADK          v2 = "Football"
[013] :1415:CALL           v0 = v0:FindFirstChild(v2)
[014] :1415:JUMPIFNOT      if v0 then -- goto #35
[015] :1416:GETUPVAL       v3 = u_v19
[017] :1416:GETTABLEKS     v2 = v3.PlayerGui
[019] :1416:GETTABLEKS     v1 = v2.Mobile
[021] :1416:GETTABLEKS     v0 = v1.NoBall
[022] :1416:LOADB          v1 = false
[024] :1416:SETTABLEKS     v0.Visible = v1
[025] :1417:GETUPVAL       v3 = u_v19
[027] :1417:GETTABLEKS     v2 = v3.PlayerGui
[029] :1417:GETTABLEKS     v1 = v2.Mobile
[031] :1417:GETTABLEKS     v0 = v1.Ball
[032] :1417:LOADB          v1 = true
[034] :1417:SETTABLEKS     v0.Visible = v1
end
[035] :1417:JUMP           -- jump to #55
[036] :1419:GETUPVAL       v3 = u_v19
[038] :1419:GETTABLEKS     v2 = v3.PlayerGui
[040] :1419:GETTABLEKS     v1 = v2.Mobile
[042] :1419:GETTABLEKS     v0 = v1.NoBall
[043] :1419:LOADB          v1 = true
[045] :1419:SETTABLEKS     v0.Visible = v1
[046] :1420:GETUPVAL       v3 = u_v19
[048] :1420:GETTABLEKS     v2 = v3.PlayerGui
[050] :1420:GETTABLEKS     v1 = v2.Mobile
[052] :1420:GETTABLEKS     v0 = v1.Ball
[053] :1420:LOADB          v1 = false
[055] :1420:SETTABLEKS     v0.Visible = v1
[056] :1423:GETUPVAL       v3 = u_v25
[058] :1423:GETTABLEKS     v2 = v3.Values
[060] :1423:GETTABLEKS     v1 = v2.HasBall
[062] :1423:GETTABLEKS     v0 = v1.Value
[064] :1423:JUMPXEQKB      if v0 == false then -- goto #93
[065] :1424:GETUPVAL       v1 = u_v0
[067] :1424:GETTABLEKS     v0 = v1.Closest
[069] :1424:JUMPXEQKNIL    if v0 ~= nil then -- goto #92
[070] :1425:GETUPVAL       v1 = u_v0
[072] :1425:GETTABLEKS     v0 = v1.Closest
[073] :1425:LOADK          v2 = "Highlight"
[076] :1425:CALL           v0 = v0:FindFirstChild(v2)
[077] :1425:JUMPIFNOT      if v0 then -- goto #87
[078] :1426:GETUPVAL       v1 = u_v0
[080] :1426:GETTABLEKS     v0 = v1.Closest
[081] :1426:LOADK          v2 = "Highlight"
[084] :1426:CALL           v0 = v0:FindFirstChild(v2)
[087] :1426:CALL           v0:Destroy()
[088] :1429:GETUPVAL       v0 = u_v0
[089] :1429:LOADNIL        v1 = nil
[091] :1429:SETTABLEKS     v0.Closest = v1
end
[092] :1432:RETURN         return
end
[093] :1434:GETUPVAL       v2 = u_v25
[095] :1434:GETTABLEKS     v1 = v2.IsRagdoll
[097] :1434:GETTABLEKS     v0 = v1.Value
[098] :1434:JUMPIFNOT      if v0 then -- goto #99
end
[099] :1434:RETURN         return
[101] :1436:NEWTABLE       v0 = {}
[102] :1438:GETUPVAL       v1 = u_v3
[105] :1438:CALL           v1 = v1:GetPlayers()
[107] :1439:GETIMPORT      v2 = pairs
[108] :1439:MOVE           v3 = v1
[109] :1439:CALL           v2, v3, v4 = v2(v3)
[110] :1439:FORGPREP_NEXT  for v5, v6 in pairs(v3) do -- could be doing next, t
[112] :1440:GETTABLEKS     v7 = v6.Character
[114] :1440:JUMPXEQKNIL    if v7 ~= nil then -- goto #133
[116] :1442:GETTABLEKS     v7 = v6.Team
[117] :1442:GETUPVAL       v9 = u_v19
[119] :1442:GETTABLEKS     v8 = v9.Team
[121] :1442:JUMPIFNOTEQ    if v7 ~= v8 then -- goto #133
[122] :1443:GETUPVAL       v7 = u_v19
[124] :1443:JUMPIFEQ       if v6 == v7 then -- goto #133
[126] :1445:GETTABLEKS     v9 = v6.Character
[129] :1445:MOVE           v8 = v0
[131] :1445:GETIMPORT      v7 = table.insert
[132] :1445:CALL           v7(v8, v9)
end
end
end
[134] :1439:FORGLOOP       end -- iterate + jump to #111
[135] :1449:GETUPVAL       v2 = u_v4
[138] :1449:CALL           v2 = v2:IsStudio()
[139] :1449:JUMPIFNOT      if v2 then -- goto #150
[140] :1450:MOVE           v3 = v0
[142] :1450:GETIMPORT      v4 = workspace
[143] :1450:LOADK          v6 = "PassRig"
[146] :1450:CALL           ... = v4:FindFirstChild(v6)
[149] :1450:GETIMPORT      v2 = table.insert
end
[150] :1450:CALL           v2(...)
[151] :1453:LOADNIL        v2 = nil
[152] :1454:LOADN          v3 = 9999
[154] :1455:GETIMPORT      v4 = pairs
[155] :1455:MOVE           v5 = v0
[156] :1455:CALL           v4, v5, v6 = v4(v5)
[157] :1455:FORGPREP_NEXT  for v7, v8 in pairs(v5) do -- could be doing next, t
[159] :1456:GETTABLEKS     v9 = v8.HumanoidRootPart
[161] :1456:JUMPXEQKNIL    if v9 ~= nil then -- goto #222
[163] :1458:GETIMPORT      v10 = workspace
[165] :1458:GETTABLEKS     v9 = v10.CurrentCamera
[167] :1458:GETTABLEKS     v12 = v8.HumanoidRootPart
[169] :1458:GETTABLEKS     v11 = v12.Position
[172] :1458:CALL           v9, v10 = v9:WorldToScreenPoint(v11)
[173] :1459:JUMPIFNOT      if v10 then -- goto #221
[175] :1461:GETIMPORT      v11 = Vector2.new
[177] :1461:GETTABLEKS     v12 = v9.X
[179] :1461:GETTABLEKS     v13 = v9.Y
[180] :1461:CALL           v11 = v11(v12, v13)
[182] :1462:GETIMPORT      v12 = Vector2.new
[184] :1462:GETIMPORT      v17 = workspace
[186] :1462:GETTABLEKS     v16 = v17.CurrentCamera
[188] :1462:GETTABLEKS     v15 = v16.ViewportSize
[190] :1462:GETTABLEKS     v14 = v15.X
[191] :1462:DIVK           v13 = v14 / 2
[193] :1462:GETIMPORT      v19 = workspace
[195] :1462:GETTABLEKS     v18 = v19.CurrentCamera
[197] :1462:GETTABLEKS     v17 = v18.ViewportSize
[199] :1462:GETTABLEKS     v16 = v17.Y
[200] :1462:DIVK           v15 = v16 / 2
[201] :1462:GETUPVAL       v18 = u_v6
[204] :1462:CALL           v18 = v18:GetGuiInset()
[206] :1462:GETTABLEKS     v17 = v18.Y
[207] :1462:DIVK           v16 = v17 / 2
[208] :1462:SUB            v14 = v15 - v16
[209] :1462:CALL           v12 = v12(v13, v14)
[210] :1464:SUB            v14 = v11 - v12
[212] :1464:GETTABLEKS     v13 = v14.Magnitude
[214] :1466:JUMPXEQKNIL    if v2 == nil then -- goto #218
[215] :1467:MOVE           v2 = v8
[216] :1468:MOVE           v3 = v13
[217] :1468:JUMP           -- jump to #221
end
[219] :1470:JUMPIFNOTLT    if v13 < v3 then -- goto #222
[220] :1471:MOVE           v3 = v13
end
[221] :1472:MOVE           v2 = v8
end
end
[223] :1455:FORGLOOP       end -- iterate + jump to #158
[224] :1478:GETUPVAL       v5 = u_v0
[226] :1478:GETTABLEKS     v4 = v5.Closest
[228] :1478:JUMPXEQKNIL    if v4 ~= nil then -- goto #279
[229] :1479:GETUPVAL       v5 = u_v0
[231] :1479:GETTABLEKS     v4 = v5.Closest
[232] :1479:LOADK          v6 = "Highlight"
[235] :1479:CALL           v4 = v4:FindFirstChild(v6)
[237] :1479:JUMPXEQKNIL    if v4 == nil then -- goto #256
[238] :1480:GETUPVAL       v4 = u_v11
[239] :1480:GETUPVAL       v7 = u_v0
[241] :1480:GETTABLEKS     v6 = v7.Closest
[244] :1480:CALL           v4 = v4:Highlight(v6)
[245] :1481:GETUPVAL       v6 = u_v0
[247] :1481:GETTABLEKS     v5 = v6.Closest
[249] :1481:SETTABLEKS     v4.Parent = v5
[250] :1482:LOADK          v5 = 0.5
[252] :1482:SETTABLEKS     v4.OutlineTransparency = v5
[253] :1483:LOADK          v5 = 0.5
[255] :1483:SETTABLEKS     v4.FillTransparency = v5
end
[256] :1486:GETUPVAL       v5 = u_v0
[258] :1486:GETTABLEKS     v4 = v5.Closest
[260] :1486:JUMPIFEQ       if v4 == v2 then -- goto #279
[261] :1487:GETUPVAL       v5 = u_v0
[263] :1487:GETTABLEKS     v4 = v5.Closest
[264] :1487:LOADK          v6 = "Highlight"
[267] :1487:CALL           v4 = v4:FindFirstChild(v6)
[268] :1487:JUMPIFNOT      if v4 then -- goto #278
[269] :1488:GETUPVAL       v5 = u_v0
[271] :1488:GETTABLEKS     v4 = v5.Closest
[272] :1488:LOADK          v6 = "Highlight"
[275] :1488:CALL           v4 = v4:FindFirstChild(v6)
[278] :1488:CALL           v4:Destroy()
end
end
[279] :1493:GETUPVAL       v4 = u_v0
[281] :1493:SETTABLEKS     v4.Closest = v2
[282] :1494:RETURN         return
end
[259] :1924:CALL           v6:Connect(v8, v9)
[262] :2008:CALL           v6:CheckInput()
[264] :2009:RETURN         return
end
v45 = KnitStart
[354] :683:SETTABLEKS     v39.KnitStart = v45
[355] :1243:NEWCLOSURE     
local function KnitInit(p58)
-- proto pool id: 65
-- num upvalues: 10
-- num inner protos: 2
-- size instructions: 76
-- size constants: 19
-- lineinfo gap: 24
-- max stack size: 6
-- is typed: false
[001] :1500:GETUPVAL       v1 = u_v10
[003] :1500:GETTABLEKS     v0 = v1.GetController
[004] :1500:LOADK          v1 = "AbilityController"
[005] :1500:CALL           v0 = v0(v1)
[006] :1500:SETUPVAL       u_v24 = v0
[007] :1502:GETUPVAL       v1 = u_v13
[009] :1502:GETTABLEKS     v0 = v1.new
[010] :1502:CALL           v0 = v0()
[012] :1502:SETTABLEKS     p58.BaseTrove = v0
[013] :1503:GETUPVAL       v1 = u_v13
[015] :1503:GETTABLEKS     v0 = v1.new
[016] :1503:CALL           v0 = v0()
[018] :1503:SETTABLEKS     p58.NewTrove = v0
[019] :1505:LOADN          v0 = 50
[020] :1505:SETUPVAL       u_v29 = v0
[021] :1507:LOADB          v0 = false
[023] :1507:SETTABLEKS     p58.HoldingShoot = v0
[024] :1509:GETUPVAL       v2 = u_v19
[026] :1509:GETTABLEKS     v1 = v2.PlayerGui
[028] :1509:GETTABLEKS     v0 = v1.ForceBar
[029] :1509:GETUPVAL       v1 = u_v27
[031] :1509:SETTABLEKS     v0.Adornee = v1
[032] :1510:GETUPVAL       v0 = u_v27
[033] :1510:LOADK          v2 = "Running"
[036] :1510:CALL           v0 = v0:WaitForChild(v2)
[037] :1510:LOADN          v1 = 0
[039] :1510:SETTABLEKS     v0.Volume = v1
[041] :1512:GETTABLEKS     v0 = p58.BaseTrove
[042] :1512:GETUPVAL       v3 = u_v19
[044] :1512:GETTABLEKS     v2 = v3.CharacterAdded
[045] :1512:NEWCLOSURE     v3 = function(p59)
-- proto pool id: 63
-- num upvalues: 7
-- num inner protos: 0
-- size instructions: 45
-- size constants: 14
-- lineinfo gap: 24
-- max stack size: 4
-- is typed: false
[001] :1513:SETUPVAL       u_v25 = p59
[002] :1514:GETUPVAL       v0 = u_v25
[003] :1514:LOADK          v2 = "Humanoid"
[006] :1514:CALL           v0 = v0:WaitForChild(v2)
[007] :1514:SETUPVAL       u_v26 = v0
[008] :1515:GETUPVAL       v0 = u_v25
[009] :1515:LOADK          v2 = "HumanoidRootPart"
[012] :1515:CALL           v0 = v0:WaitForChild(v2)
[013] :1515:SETUPVAL       u_v27 = v0
[014] :1517:GETUPVAL       v2 = u_v19
[016] :1517:GETTABLEKS     v1 = v2.PlayerGui
[018] :1517:GETTABLEKS     v0 = v1.ForceBar
[019] :1517:GETUPVAL       v1 = u_v27
[021] :1517:SETTABLEKS     v0.Adornee = v1
[022] :1519:GETUPVAL       v0 = u_v28
[024] :1519:GETIMPORT      v1 = Enum.CameraType.Custom
[026] :1519:SETTABLEKS     v0.CameraType = v1
[027] :1520:GETUPVAL       v0 = u_v28
[028] :1520:GETUPVAL       v1 = u_v26
[030] :1520:SETTABLEKS     v0.CameraSubject = v1
[031] :1522:LOADB          v0 = false
[032] :1522:SETUPVAL       u_v33 = v0
[033] :1524:GETUPVAL       v0 = u_v0
[036] :1524:CALL           v0:ResetChecks()
[037] :1526:GETUPVAL       v0 = u_v27
[038] :1526:LOADK          v2 = "Running"
[041] :1526:CALL           v0 = v0:WaitForChild(v2)
[042] :1526:LOADN          v1 = 0
[044] :1526:SETTABLEKS     v0.Volume = v1
[045] :1527:RETURN         return
end
[055] :1512:CALL           v0:Connect(v2, v3)
[057] :1529:GETTABLEKS     v0 = p59.BaseTrove
[059] :1529:GETIMPORT      v4 = game
[061] :1529:GETTABLEKS     v3 = v4.Players
[063] :1529:GETTABLEKS     v2 = v3.PlayerRemoving
[064] :1529:NEWCLOSURE     v3 = function(p60)
-- proto pool id: 64
-- num upvalues: 5
-- num inner protos: 0
-- size instructions: 16
-- size constants: 2
-- lineinfo gap: 24
-- max stack size: 3
-- is typed: false
[001] :1530:GETUPVAL       v0 = u_v19
[003] :1530:JUMPIFNOTEQ    if p60 ~= v0 then -- goto #16
[004] :1531:LOADNIL        v0 = nil
[005] :1531:SETUPVAL       u_v25 = v0
[006] :1532:LOADNIL        v0 = nil
[007] :1532:SETUPVAL       u_v27 = v0
[008] :1533:LOADNIL        v0 = nil
[009] :1533:SETUPVAL       u_v26 = v0
[010] :1535:GETUPVAL       v1 = u_v0
[012] :1535:GETTABLEKS     v0 = v1.BaseTrove
[015] :1535:CALL           v0:Destroy()
end
[016] :1537:RETURN         return
end
[072] :1529:CALL           v0:Connect(v2, v3)
[075] :1539:CALL           v0:ResetChecks()
[076] :1540:RETURN         return
end
v45 = KnitInit
[367] :1243:SETTABLEKS     v39.KnitInit = v45
[369] :1286:RETURN         return v39

-- // Function Dumper made by King.Kevin
-- // Script Path: ReplicatedStorage.Controllers.BallController

--[[
Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table]:
		1 [table] table: 0x646ba78ba66e6005
				1 [function] = Dribble
				2 [table]:
				Animations [table] table: 0x5a577bdd98109be5
						1 [table]:
						EC [table] table: 0xaf321f1d90edfb75
								1 [table]:
								NewTrove [table] table: 0x243c2612dd01b575
										1 [table]:
										_objects [table] table: 0x4e21e31395fc58c5
										2 [boolean] = false
								2 [table]:
								EmotesLoaded [table] table: 0x98623dd2b14ec455
								3 [function] = Emote
								4 [table]:
								EmoteService [table] table: 0xb90040a87be16035
										1 [table]:
										ForceStopEmote [table] table: 0x99a5a5bca0f86005
												1 [boolean] = true
												2 [boolean] = false
												3 [Instance] = ForceStopEmote
										2 [table]:
										EndEmote [table] table: 0x3555af382f9f2925
												1 [boolean] = true
												2 [boolean] = false
												3 [Instance] = EndEmote
										3 [table]:
										Emote [table] table: 0x52daf6b16a0f4ae5
												1 [boolean] = true
												2 [boolean] = false
												3 [Instance] = Emote
										4 [table]:
										RunClientEmotes [table] table: 0xae5153349cb611c5
												1 [boolean] = true
												2 [boolean] = false
												3 [Instance] = RunClientEmotes
								5 [boolean] = false
								6 [function] = KnitStart
								7 [function] = KnitInit
								8 [table]:
								RigEmotes [table] table: 0x273ddd378d65dcb5
										1 [table]:
										1 [table] table: 0xed61e7b656016005
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
										2 [table]:
										4 [table] table: 0xae38a7bb90a77ef5
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
										3 [table]:
										3 [table] table: 0x705d7cb257c4a765
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
										4 [table]:
										2 [table] table: 0xc37da0b01f5e0f95
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
								9 [boolean] = false
								10 [table]:
								BaseTrove [table] table: 0x40fe6bc8cb5c5215
										1 [table]:
										_objects [table] table: 0xf2991d5514e1f1e5
												1 [table]:
												1 [table] table: 0xf1f2d7aeae3f5695
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												2 [table]:
												2 [table] table: 0xdc5b380395591d45
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												3 [table]:
												3 [table] table: 0x6198ee3aa2a2d645
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												4 [table]:
												4 [table] table: 0x5f37af35eacfd935
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												5 [table]:
												5 [table] table: 0x0f834d8458af4505
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												6 [table]:
												6 [table] table: 0x6dbced2b762b9bf5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												7 [table]:
												7 [table] table: 0x54b9a74c16e13a35
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												8 [table]:
												8 [table] table: 0x532dd610441c0935
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												9 [table]:
												9 [table] table: 0x42e136ca8e8453e5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												10 [table]:
												10 [table] table: 0xd968256f592c6255
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												11 [table]:
												11 [table] table: 0xffb3e40c344d9905
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												12 [table]:
												12 [table] table: 0x97832ff7117aff45
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												13 [table]:
												13 [table] table: 0x4e8905faf6a05d85
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												14 [table]:
												14 [table] table: 0x06b57bfeea1533c5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												15 [table]:
												15 [table] table: 0x17a6137dab72a2b5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
										2 [boolean] = false
								11 [string] = EmoteController
								12 [table]:
								Customization [table] table: 0x948daac9a7e1b7e5
										1 [table]:
										EmotesEquipped [table] table: 0x558d749ab7b83e15
												1 [string] = Default
												2 [string] = 
												3 [string] = 
												4 [string] = 
										2 [table]:
										Showcase [table] table: 0x1a094975bf6dd2b5
												1 [function] = SetUpShowroom
												2 [function] = SetUpMythic
												3 [function] = KnitInit
												4 [function] = SetUpNormalPurchases
												5 [function] = HandleShowType
												6 [function] = KnitStart
												7 [string] = ShowcaseController
												8 [table]:
												Trove [table] table: 0x6811f28f32c7a065
														1 [table]:
														_objects [table] table: 0xd9b5b2a9309a07f5
																1 [table]:
																1 [table] table: 0x87e627ab15074b85
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																2 [table]:
																2 [table] table: 0x3f7672363384c9c5
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																3 [table]:
																3 [table] table: 0xdc951935351d14b5
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																4 [table]:
																4 [table] table: 0xf24400bd9efd1f65
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																5 [table]:
																5 [table] table: 0xdb1b183e4847d9d5
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																6 [table]:
																6 [table] table: 0xa5f3ff3b0d228c85
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																7 [table]:
																7 [table] table: 0x979b1fb0438de375
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																8 [table]:
																8 [table] table: 0x86a03e368016fa25
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																9 [table]:
																9 [table] table: 0x84d9dec3cebbfc95
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																10 [table]:
																10 [table] table: 0xb37e7dac06dee745
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																11 [table]:
																11 [table] table: 0xe9dcdc0df879ce35
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
														2 [boolean] = false
												9 [table]:
												InventoryData [table] table: 0xd29234ee6a34fb25
														1 [table]:
														BallSkins [table] table: 0xbe2859ea788f5205
														2 [table]:
														EmotesEquipped [table] table: 0xc86bc4886b93fd95
																1 [string] = Default
																2 [string] = 
																3 [string] = 
																4 [string] = 
														3 [string] = Water
														4 [string] = Basic
														5 [table]:
														Cards [table] table: 0x2b63c0eb6b561965
																1 [string] = Basic
														6 [table]:
														StyleSkins [table] table: 0x9d2346555ae88cf5
														7 [number] = 0
														8 [table]:
														Cosmetics [table] table: 0xc72c7bd11d7ce045
														9 [string] = 
														10 [string] = 
														11 [table]:
														Emotes [table] table: 0x31eb481755e25fd5
																1 [string] = Default
														12 [string] = 
														13 [table]:
														GoalEffects [table] table: 0x642b4f4c7ab212b5
																1 [string] = Water
														14 [number] = 51
														15 [string] = JapanFALOL2
												10 [table]:
												CS [table] table: 0x151ebc5347eec9b5
														1 [table]:
														Jersey [table] table: 0x98456a24a8e7b0f5
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = Jersey
														2 [table]:
														Customize [table] table: 0x6759a5a03bfc6bd5
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = Customize
														3 [function] = Unknown Name
														4 [function] = Unknown Name
														5 [function] = Unknown Name
														6 [function] = Unknown Name
										3 [table]:
										ButtonTrove [table] table: 0xefbfbd528b9294e5
												1 [table]:
												_objects [table] table: 0xb55fc795d4b46875
												2 [boolean] = false
										4 [function] = KnitInit
										5 [function] = EmoteSelect
										6 [table]:
										NewItems [table] table: 0x19df42d3cb913115
										7 [function] = KnitStart
										8 [string] = Customization
										9 [table] (Recursive table detected)
										10 [table]:
										InventoryData [table] table: 0x63ead517ad41a7a5
												1 [table]:
												BallSkins [table] table: 0x0c5051d83f8d9685
												2 [table] (Recursive table detected)
												3 [string] = Water
												4 [string] = Basic
												5 [table]:
												Cards [table] table: 0x5b49ba83b0cad5e5
														1 [string] = Basic
												6 [table]:
												StyleSkins [table] table: 0x0909e962d1176975
												7 [number] = 0
												8 [table]:
												Cosmetics [table] table: 0xb6cda7c11e1004c5
												9 [string] = 
												10 [string] = 
												11 [table]:
												Emotes [table] table: 0x7c81a15cd54fe055
														1 [string] = Default
												12 [string] = 
												13 [table]:
												GoalEffects [table] table: 0xb632d25636a50f35
														1 [string] = Water
												14 [number] = 51
												15 [string] = JapanFALOL2
										11 [table]:
										Trove [table] table: 0xf54a7f20596bbb25
												1 [table]:
												_objects [table] table: 0x8388b40219f7d2b5
														1 [table]:
														1 [table] table: 0x8dc244df4392d965
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														2 [table]:
														2 [table] table: 0xef0dc55081391fd5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														3 [table]:
														3 [table] table: 0x4afefa013062da05
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														4 [table]:
														4 [table] table: 0x4b21a3da56d914f5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														5 [table]:
														5 [table] table: 0x51b9bb5c6d3f2fa5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														6 [table]:
														6 [table] table: 0x89bc955b68cf6de5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														7 [table]:
														7 [table] table: 0x6c8384845d656855
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														8 [table]:
														8 [table] table: 0xaefb846527b50305
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														9 [table]:
														9 [table] table: 0xa910f3caa01f5df5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														10 [table]:
														10 [table] table: 0xf4399a8fe37aa8a5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														11 [table]:
														11 [table] table: 0xc1e1a2e8fac58f15
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														12 [table]:
														12 [table] table: 0x3776d945e82eb5c5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														13 [table]:
														13 [table] table: 0x54d471e4967238b5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														14 [table]:
														14 [table] table: 0x8f404bf2b2249af5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														15 [table]:
														15 [table] table: 0xc7d4c9fe92a97535
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
												2 [boolean] = false
										12 [table] (Recursive table detected)
								13 [number] = 1757113698.7240255
								14 [table]:
								InvRig [table] table: 0xd5dce93b76bbd645
										1 [table]:
										1 [table] table: 0x1bfe9c397daf91d5
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
										2 [table]:
										4 [table] table: 0x3d5fbb406b74c485
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
										3 [table]:
										3 [table] table: 0xf73f8e3f6c16d935
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
										4 [table]:
										2 [table] table: 0xa9de973d755375a5
												1 [Instance] = Dragon Dragon
												2 [Instance] = Present
												3 [Instance] = Coconut
												4 [Instance] = Reo Chameleon Idle
												5 [Instance] = Tongue Car
												6 [Instance] = Cloudy
												7 [Instance] = Headless
												8 [Instance] = Isagi's Slide
												9 [Instance] = Chameleon Pet
												10 [Instance] = Dragon Ride Dragon
												11 [Instance] = Santa Laugh
												12 [Instance] = Dab
												13 [Instance] = Bee Flight
												14 [Instance] = Prism Compression
												15 [Instance] = T Pose WalkStart
												16 [Instance] = Knees
												17 [Instance] = Hydra Hiss Snake3
												18 [Instance] = Water Gun
												19 [Instance] = Grills
												20 [Instance] = Skull
												21 [Instance] = Sheesh
												22 [Instance] = Rat Dance
												23 [Instance] = Puppeteer Hand
												24 [Instance] = Snowglobe
												25 [Instance] = T Pose Walk
												26 [Instance] = Team Celebration
												27 [Instance] = Sleigh
												28 [Instance] = Default
												29 [Instance] = Bee King Bee
												30 [Instance] = Divine Summon
												31 [Instance] = Zombie Walk
												32 [Instance] = Hydra Snake1
												33 [Instance] = T Pose Walk2
												34 [Instance] = Running Cheetah Idle
												35 [Instance] = Confused
												36 [Instance] = Emperor's Stance
												37 [Instance] = Hammock
												38 [Instance] = Hydra Hiss
												39 [Instance] = Moves
												40 [Instance] = Instantly Flip It
												41 [Instance] = Steps
												42 [Instance] = Confident
												43 [Instance] = Break
												44 [Instance] = Team Celebration Char2
												45 [Instance] = Ultra Instinct
												46 [Instance] = Eating Burger
												47 [Instance] = SEEEEE!!!
												48 [Instance] = Bunny Hop
												49 [Instance] = Loki Blitz
												50 [Instance] = Rock Paper ScissorsPlr2
												51 [Instance] = L Dance
												52 [Instance] = Yum
												53 [Instance] = Predator Shark
												54 [Instance] = Dragon
												55 [Instance] = Chameleon Pose
												56 [Instance] = Throwing Burger
												57 [Instance] = 100 Million
												58 [Instance] = Hydra Ride Snake2
												59 [Instance] = Crab Rave
												60 [Instance] = Bee King
												61 [Instance] = Predator Ride Shark
												62 [Instance] = Juggle
												63 [Instance] = Monster Trance Monster
												64 [Instance] = Whip
												65 [Instance] = Reo Chameleon Chameleon
												66 [Instance] = Snowball
												67 [Instance] = Crying
												68 [Instance] = Passo Bem Solto
												69 [Instance] = Troll
												70 [Instance] = Petting Rabbit
												71 [Instance] = Hydra Hiss Snake2
												72 [Instance] = ROAR
												73 [Instance] = Interactable Team PosePlr2
												74 [Instance] = Reo Chameleon
												75 [Instance] = Hydra
												76 [Instance] = King Team PosePlr1
												77 [Instance] = Amalgamation
												78 [Instance] = HypeHype
												79 [Instance] = Charles Blitz
												80 [Instance] = Fries Car
												81 [Instance] = Banana Song
												82 [Instance] = King Team PosePlr4
												83 [Instance] = Ramen Bowl
												84 [Instance] = Bee Flight Bee
												85 [Instance] = Running Cheetah Cheetah Idle
												86 [Instance] = Hammerhead Shark
												87 [Instance] = Petting Cheetah
												88 [Instance] = The Power
												89 [Instance] = Chameleon Pose Chameleon
												90 [Instance] = Predator Shark Shark
												91 [Instance] = Sleeping Cheetah
												92 [Instance] = Juggling Eggs
												93 [Instance] = Dragon Ride
												94 [Instance] = Sae
												95 [Instance] = Petting Cheetah Cheetah
												96 [Instance] = Hydra Snake2
												97 [Instance] = Hydra Hiss Snake1
												98 [Instance] = Sleeping Standing
												99 [Instance] = Emperor's Pose
												100 [Instance] = Night Spirit
												101 [Instance] = Amalgamation Monster
												102 [Instance] = VolleyballPlr2
												103 [Instance] = Flipping Burger
												104 [Instance] = Panther
												105 [Instance] = Eating Fries
												106 [Instance] = CrowCrow
												107 [Instance] = Burger Car
												108 [Instance] = Hydra Ride Snake3
												109 [Instance] = Ninja Run
												110 [Instance] = Puppeteer
												111 [Instance] = Monster Trance
												112 [Instance] = Money Rain
												113 [Instance] = King Team PosePlr2
												114 [Instance] = Hydra Snake3
												115 [Instance] = Surfing
												116 [Instance] = King Team PosePlr3
												117 [Instance] = Hammerhead Ride Shark
												118 [Instance] = Juggling Fries
												119 [Instance] = PresentGIFT
												120 [Instance] = Hitboxes
												121 [Instance] = Bouncy Ball
												122 [Instance] = Unlimited Strength
												123 [Instance] = Nirvana
												124 [Instance] = Hammerhead Ride
												125 [Instance] = Running Cheetah
												126 [Instance] = Hitboxes Other
												127 [Instance] = Parrot
												128 [Instance] = Cat!
												129 [Instance] = Volleyball
												130 [Instance] = CatCat
												131 [Instance] = Running Cheetah Cheetah
												132 [Instance] = Predator Ride
												133 [Instance] = Rock Paper ScissorsPlr1
												134 [Instance] = King Team Pose
												135 [Instance] = Six Eyes
												136 [Instance] = Interactable Team PosePlr1
												137 [Instance] = Helicopter
												138 [Instance] = PantherPanther
												139 [Instance] = Gentleman
												140 [Instance] = Friendly LovePlr1
												141 [Instance] = Friendly LovePlr2
												142 [Instance] = Sleeping Cheetah Cheetah
												143 [Instance] = Dance Step
												144 [Instance] = Hydra Ride Snake1
												145 [Instance] = Rin
												146 [Instance] = Glitch Loki Camera
												147 [Instance] = Friendly Heart
												148 [Instance] = Dap UpPlr2
												149 [Instance] = Rock Paper Scissors
												150 [Instance] = Interactable Team Pose
												151 [Instance] = Dap Up
												152 [Instance] = Montagem Mysterious Game
												153 [Instance] = Skull Skull
												154 [Instance] = TPose
												155 [Instance] = Bizarre
												156 [Instance] = King's Roar
												157 [Instance] = Glitch Loki
												158 [Instance] = Waterbending
												159 [Instance] = Hitboxes Start
												160 [Instance] = Snowcone
												161 [Instance] = Dap UpPlr1
												162 [Instance] = Volleyball Ball
												163 [Instance] = Tropical Dance
												164 [Instance] = Garry
												165 [Instance] = Next
												166 [Instance] = Juggling Burger
												167 [Instance] = Monster Contract Monster
												168 [Instance] = Popcorn
												169 [Instance] = Hatching
												170 [Instance] = Hammerhead Shark Shark
												171 [Instance] = Laugh
												172 [Instance] = The Sitting Emperor
												173 [Instance] = Crow!
												174 [Instance] = Life Force
												175 [Instance] = Reo Chameleon Chameleon Idle
												176 [Instance] = Hydra Ride
												177 [Instance] = Sleeping
								15 [table]:
								CameraController [table] table: 0xa218c85c540d51a5
										1 [Vector3] = 1, 1, 1
										2 [table] (Recursive table detected)
										3 [function] = KnitInit
										4 [table]:
										BaseTrove [table] table: 0x30b6b4c467e22665
												1 [table]:
												_objects [table] table: 0xe114e86a609cf9f5
														1 [table]:
														1 [table] table: 0xf7c760cca235f4a5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														2 [table]:
														2 [table] table: 0x1587af0fbbd4e315
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														3 [table]:
														3 [table] table: 0x5933e4c68add30e5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														4 [table]:
														4 [table] table: 0x0022b0cc964bef25
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														5 [table]:
														5 [table] table: 0x49354cccb1726d65
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														6 [table]:
														6 [table] table: 0x4c55cc73dcca6bd5
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														7 [table]:
														7 [table] table: 0x5284d3e6eaae8285
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														8 [table]:
														8 [table] table: 0x29466b41e90b7d75
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														9 [table]:
														9 [table] table: 0x2437e2f89f916825
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
														10 [table]:
														10 [table] table: 0xf1d8297e26390e95
																1 [RBXScriptConnection] = Connection
																2 [string] = Disconnect
												2 [boolean] = false
										5 [Instance] = Wind
										6 [function] = Shake
										7 [function] = HeadMovement
										8 [table]:
										StatesController [table] table: 0x57e71ad287dab235
												1 [number] = 0
												2 [boolean] = false
												3 [table]:
												Spectator [table] table: 0x6705743e73fad0a5
														1 [function] = StopSpectating
														2 [function] = KnitInit
														3 [function] = Spectate
														4 [function] = _makeNametag
														5 [table]:
														TargetListUpdated [table] table: 0x038292be7483af85
																1 [table]:
																_handlerListHead [table] table: 0x2297596c7f893f05
																		1 [function] = Unknown Name
																		2 [boolean] = true
																		3 [table] (Recursive table detected)
																		4 [boolean] = false
														6 [function] = KnitStart
														7 [Instance] = JapanFALOL2
														8 [Instance] = State
														9 [table]:
														NametagBin [table] table: 0x8d4d0d8cb50744d5
														10 [table]:
														SpectatingTrove [table] table: 0x45ef686e8b89b295
																1 [table]:
																_objects [table] table: 0x938e2acfcb9d1265
																2 [boolean] = false
														11 [Instance] = Camera
														12 [string] = SpectatorController
														13 [table]:
														NametagConnectionTrove [table] table: 0xe1cf126f34ce95f5
																1 [table]:
																_objects [table] table: 0x570817f13c603945
																2 [boolean] = false
														14 [table]:
														TargetChanged [table] table: 0xad4291bc73677435
																1 [table]:
																_handlerListHead [table] table: 0x5ec4c0c511e30455
																		1 [function] = Unknown Name
																		2 [boolean] = true
																		3 [table] (Recursive table detected)
																		4 [boolean] = false
														15 [table]:
														SpectateTargets [table] table: 0x3c2c3d09d8b5db05
																1 [string] = Ball
																2 [Instance] = JapanFALOL2
														16 [table] (Recursive table detected)
														17 [boolean] = false
												4 [number] = 1
												5 [function] = KnitInit
												6 [table]:
												BaseTrove [table] table: 0x120c88a7acc116d5
														1 [table]:
														_objects [table] table: 0x65cb8746b324bea5
																1 [table]:
																1 [table] table: 0xa5b83787994920a5
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																2 [table]:
																2 [table] table: 0x1da4ed33bc426ee5
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																3 [table]:
																3 [table] table: 0x38932c4ed6d76955
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
														2 [boolean] = false
												7 [table]:
												NewTrove [table] table: 0xd8d5796691462885
														1 [table]:
														_objects [table] table: 0x0afa4401d0a94415
																1 [table]:
																1 [table] table: 0x02435b68b277aec5
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
														2 [boolean] = false
												8 [number] = 0
												9 [number] = 1
												10 [table] (Recursive table detected)
												11 [table] (Recursive table detected)
												12 [function] = RespawnChecks
												13 [table]:
												Trove [table] table: 0x77b8a0ffd916b8b5
														1 [table]:
														_objects [table] table: 0x29e6a27c99d34405
																1 [table]:
																1 [table] table: 0xf059ae7affc4ca45
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
																2 [table]:
																2 [table] table: 0xa6b04ec7d625f535
																		1 [RBXScriptConnection] = Connection
																		2 [string] = Disconnect
														2 [boolean] = false
												14 [table]:
												AbilityService [table] table: 0xab03842bb04bb915
														1 [table]:
														StateChange [table] table: 0xb24ab48f1ecd43c5
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = StateChange
														2 [table]:
														ChangeSpeed [table] table: 0x36b0b3b08c09fb25
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = ChangeSpeed
														3 [table]:
														Ability [table] table: 0x9af5982cfe425205
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = Ability
														4 [table]:
														CutCooldown [table] table: 0xc8a5e22889831965
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = CutCooldown
														5 [table]:
														CamAnim [table] table: 0x7c6664a51b4be045
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = CamAnim
														6 [table]:
														Effects [table] table: 0x87a8dfa68b72a7a5
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = Effects
														7 [table]:
														UpdateCooldown [table] table: 0x23f6b33a05529685
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = UpdateCooldown
														8 [table]:
														AbilityUsed [table] table: 0x3fb7b53a86b9d5e5
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = AbilityUsed
														9 [table]:
														ChemicalShidou [table] table: 0x168043bc86ee4425
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = ChemicalShidou
														10 [table]:
														SetProperty [table] table: 0xaa07deb1002504c5
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = SetProperty
														11 [table]:
														RequestCooldowns [table] table: 0xf106c63805e79b05
																1 [boolean] = true
																2 [boolean] = false
																3 [Instance] = RequestCooldowns
												15 [function] = KnitStart
												16 [string] = StatesController
												17 [table]:
												States [table] table: 0x9be6eff1e96fe395
														1 [number] = 0
														2 [boolean] = true
														3 [boolean] = false
														4 [boolean] = false
														5 [boolean] = false
										9 [boolean] = false
										10 [boolean] = false
										11 [function] = KnitStart
										12 [string] = CameraController
										13 [table] (Recursive table detected)
										14 [table] (Recursive table detected)
										15 [table]:
										GoalService [table] table: 0x5f4095131d175b45
												1 [table]:
												ScoredGoal [table] table: 0x7c0aa494487d2a35
														1 [boolean] = true
														2 [boolean] = false
														3 [Instance] = ScoredGoal
										16 [function] = SetShiftlock
										17 [boolean] = false
								16 [function] = StopAnims
						2 [function] = KnitInit
						3 [function] = WalkAnimations
						4 [table]:
						Ball [table] table: 0x7ce7c5cfd0e7e255
								1 [Instance] = KarasuPlr
								2 [Instance] = Surpass
								3 [Instance] = YukiDribble3
								4 [Instance] = McNagi FryshiroDribble
								5 [Instance] = BodyBlockR
								6 [Instance] = KaiserDribbleShoot
								7 [Instance] = KuronaDribble
								8 [Instance] = NEL IsagiDribble
								9 [Instance] = OtoyaDribble
								10 [Instance] = Bicycle
								11 [Instance] = Scissors
								12 [Instance] = KaiserDribbleZigZag
								13 [Instance] = TrapDancePassBall
								14 [Instance] = KaiserMagnus
								15 [Instance] = HioriFlowPass
								16 [Instance] = TrapDanceShotBall
								17 [Instance] = Flick
								18 [Instance] = SideTrapShotBallLeft
								19 [Instance] = TwoGunVolleyBall
								20 [Instance] = Catch
								21 [Instance] = BallChopFeintFront
								22 [Instance] = SaePlr
								23 [Instance] = KablamoBall
								24 [Instance] = Opposite
								25 [Instance] = NinjaDribble
								26 [Instance] = CloseQuartersDribbleBall
								27 [Instance] = BachiraDribble
								28 [Instance] = ShidouDribble
								29 [Instance] = CrowTheftLeft
								30 [Instance] = BallChopFeintRight
								31 [Instance] = PickUp
								32 [Instance] = GagamaruDribble
								33 [Instance] = KarasuDribble
								34 [Instance] = CreativeDribbleBall
								35 [Instance] = IAmNagi
								36 [Instance] = SideTrapShotBallRight
								37 [Instance] = IgaguriDribble
								38 [Instance] = DonLorenzoPlr
								39 [Instance] = KunigamiDribble
								40 [Instance] = HioriFlowPassDribble
								41 [Instance] = YukiDribble4
								42 [Instance] = AirDribbleStart
								43 [Instance] = PowerShot
								44 [Instance] = HioriCurvedPass
								45 [Instance] = InfiniteDribble1
								46 [Instance] = JuggleShotBall
								47 [Instance] = ChigiriDribble
								48 [Instance] = AirDribbleLeft
								49 [Instance] = StreetSweepBall
								50 [Instance] = NEL NagiDribble
								51 [Instance] = CounterAttackBall
								52 [Instance] = BodyBlockL
								53 [Instance] = AirDribbleFall
								54 [Instance] = TrapShotBall
								55 [Instance] = AirDribbleUp
								56 [Instance] = DivineLiftBall
								57 [Instance] = Idle
								58 [Instance] = MagicalTurn
								59 [Instance] = Volley
								60 [Instance] = OPCurve
								61 [Instance] = ZombieDashBall
								62 [Instance] = Walk
								63 [Instance] = CrowTheftRight
								64 [Instance] = FinalShot
								65 [Instance] = LethalTouch
								66 [Instance] = LokiDribble
								67 [Instance] = JuggleFeintBall
								68 [Instance] = TrapDanceBall
								69 [Instance] = NEL BachiraDribble
								70 [Instance] = YoMichaelBall
								71 [Instance] = NEL RinDribble
								72 [Instance] = LokiDashIntercept
								73 [Instance] = BearClawBall
								74 [Instance] = KingsImpact
								75 [Instance] = IsagiDribble
								76 [Instance] = ContrarianDribbleBall
								77 [Instance] = FallenHero
								78 [Instance] = AirDribbleRight
								79 [Instance] = YukimiyaPlr
								80 [Instance] = Hold
								81 [Instance] = ZeroResetTurnBall
								82 [Instance] = Don LorenzoDribble
								83 [Instance] = RinDribble
								84 [Instance] = DirectShot
								85 [Instance] = Hide
								86 [Instance] = KingsRun
								87 [Instance] = ShidouDriveCR
								88 [Instance] = HioriLaser
								89 [Instance] = YukimiyaDribble
								90 [Instance] = KaiserDribble
								91 [Instance] = GyroShot
								92 [Instance] = NEL ReoDribble
								93 [Instance] = HioriDribble
								94 [Instance] = TrapBall
								95 [Instance] = SaeDribble
								96 [Instance] = NagiDribble
								97 [Instance] = KaiserBeinschuss
								98 [Instance] = Devour
								99 [Instance] = HeelPass
								100 [Instance] = AirDribbleShoot
								101 [Instance] = Curved
								102 [Instance] = ShidouHeader
								103 [Instance] = KaiserVolley
								104 [Instance] = BeautifulShotL
								105 [Instance] = HeelFlick
								106 [Instance] = ZombieDribble2
								107 [Instance] = MonsterTrance
								108 [Instance] = ShidouDrive
								109 [Instance] = NinjaShot
								110 [Instance] = PerfectPass
								111 [Instance] = CurveShot
								112 [Instance] = BeautifulShotR
								113 [Instance] = InfiniteDribble2
								114 [Instance] = OtoyaPlr
								115 [Instance] = YukiDribble2
								116 [Instance] = YukiDribble1
								117 [Instance] = LaBobaBall
								118 [Instance] = ThrowBall
								119 [Instance] = RavenDribble
								120 [Instance] = CrowClearance
								121 [Instance] = BallChopFeintLeft
								122 [Instance] = Joker
								123 [Instance] = KaiserImpact
								124 [Instance] = ShidouBigBang
								125 [Instance] = AikuDribble
								126 [Instance] = DemonKingBall
								127 [Instance] = InfiniteDribble3
								128 [Instance] = CharlesDribble
								129 [Instance] = BallChopFeintBack
								130 [Instance] = Reverse2StageShotBall
								131 [Instance] = KingDribble
								132 [Instance] = CrossElasticoNutmegBall
								133 [Instance] = ZombieDribble1
						5 [table]:
						ChemicalReaction [table] table: 0x1dc70b764881cf75
								1 [Instance] = Plr1
								2 [Instance] = Plr2
								3 [Instance] = KuronaPlayer2
								4 [Instance] = KuronaPlayer1
						6 [function] = LoadAnimations
						7 [table]:
						WalkTrove [table] table: 0xf311c80d587cd525
								1 [table]:
								_objects [table] table: 0x479f49c2ceac8a45
										1 [table]:
										1 [table] table: 0x98aceda0b3a5e7a5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
								2 [boolean] = false
						8 [function] = StopAnims
						9 [table]:
						Reset [table] table: 0x1fa7a8c9a3c55165
								1 [table]:
								_objects [table] table: 0xb033b85c917b1df5
										1 [table]:
										1 [table] table: 0x817dd71318e13155
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
								2 [boolean] = false
						10 [table]:
						MM [table] table: 0x4317a78e228e9a05
								1 [Instance] = Fall
								2 [Instance] = Land
								3 [Instance] = Jump
						11 [table]:
						Shots [table] table: 0x5bcc7af284995f65
								1 [Instance] = Shoot
								2 [Instance] = Volley
						12 [function] = Watch
						13 [table]:
						Abilities [table] table: 0x86ee13e804130b85
								1 [Instance] = GingaMonster
								2 [Instance] = CrossElasticoNutmeg
								3 [Instance] = RouletteOffballSlide
								4 [Instance] = GodspeedDash
								5 [Instance] = Surpass
								6 [Instance] = ChopFeintRight
								7 [Instance] = HandstandEnd
								8 [Instance] = KOTJDummy1
								9 [Instance] = YukiDribble3
								10 [Instance] = ChargeSteal
								11 [Instance] = ShidouHeader
								12 [Instance] = IgaguriDharmaBall
								13 [Instance] = CobraBall
								14 [Instance] = ScorpionKick
								15 [Instance] = ZombieDash
								16 [Instance] = BodyBlockR
								17 [Instance] = KaiserDribbleShoot
								18 [Instance] = GoldenDefenseLHeader
								19 [Instance] = SnakeUp
								20 [Instance] = KingPlr2
								21 [Instance] = GodspeedDribble
								22 [Instance] = CobraRig
								23 [Instance] = HeelFlick
								24 [Instance] = BeautifulShotR
								25 [Instance] = ZeroResetTurn
								26 [Instance] = KingBall
								27 [Instance] = GodspeedDribbleRight
								28 [Instance] = DivineLift
								29 [Instance] = DieUser
								30 [Instance] = PowerShot
								31 [Instance] = KingsPredation
								32 [Instance] = Scissors
								33 [Instance] = Reverse2StageShot
								34 [Instance] = ANewToyMonster
								35 [Instance] = YukiSBStart
								36 [Instance] = RouletteOnBall
								37 [Instance] = ChopFeintFront
								38 [Instance] = PlanetHotline
								39 [Instance] = KaiserMagnus
								40 [Instance] = HioriFlowPass
								41 [Instance] = DestructiveCrashShotBall
								42 [Instance] = NinjaStealPlayer
								43 [Instance] = ContrarianDribble
								44 [Instance] = AikuHeader
								45 [Instance] = KaiserImpact
								46 [Instance] = TrivelaShot
								47 [Instance] = Camouflage
								48 [Instance] = ChopFeintBack
								49 [Instance] = DemonKing
								50 [Instance] = NinjaStealBall
								51 [Instance] = YukiDribble1
								52 [Instance] = NELNagiCR
								53 [Instance] = InfiniteDribble2
								54 [Instance] = HioriFrostbite
								55 [Instance] = ANewToyBall
								56 [Instance] = YukiDribble2
								57 [Instance] = CenterGravityDummy
								58 [Instance] = BearClaw
								59 [Instance] = NelRinBall
								60 [Instance] = Opposite
								61 [Instance] = GyroShot
								62 [Instance] = NinjaDribble
								63 [Instance] = InfiniteDribble1
								64 [Instance] = ScissorsAffected
								65 [Instance] = ChameleonDefense
								66 [Instance] = KaiserDribbleZigZag
								67 [Instance] = HioriLaser
								68 [Instance] = LionChopRight
								69 [Instance] = Curved
								70 [Instance] = Joker
								71 [Instance] = GingaStealRun
								72 [Instance] = Stun
								73 [Instance] = ShidouDriveCR
								74 [Instance] = RavenDribble
								75 [Instance] = KingsRun
								76 [Instance] = ZombieDashOffball
								77 [Instance] = NELIsagixKaiserCRUser
								78 [Instance] = RouletteOffBall
								79 [Instance] = ANewToyPlayer
								80 [Instance] = NinjaShot
								81 [Instance] = CrowTheftLeft
								82 [Instance] = SideStepsRin
								83 [Instance] = ZombieDribble1
								84 [Instance] = MonsterTrance
								85 [Instance] = PlanetHotline_Partner
								86 [Instance] = CobraUser
								87 [Instance] = RouletteRunPart
								88 [Instance] = GingaMonsterBall
								89 [Instance] = SnakeShot
								90 [Instance] = ShadowShot
								91 [Instance] = PerfectPass
								92 [Instance] = GodspeedLooseBall
								93 [Instance] = IAmNagi
								94 [Instance] = KingChop3
								95 [Instance] = GingaSpinning
								96 [Instance] = LeftyShoot_Victim
								97 [Instance] = Reverse2Stage
								98 [Instance] = GodspeedDribbleLeft
								99 [Instance] = CenterGravity
								100 [Instance] = CrowClearance
								101 [Instance] = ImpulseTackle
								102 [Instance] = HioriFlowPassDribble
								103 [Instance] = DevourDummy
								104 [Instance] = YukiDribble4
								105 [Instance] = GingaNutmeg2
								106 [Instance] = GingaDribble
								107 [Instance] = HioriIceShot
								108 [Instance] = NinjaStealVictim
								109 [Instance] = ShidouDemonDrive
								110 [Instance] = GoldenDefenseR
								111 [Instance] = GoldenDefenseRHeader
								112 [Instance] = SnakeDown
								113 [Instance] = ForcePass
								114 [Instance] = DieVictim
								115 [Instance] = AirDribbleLeft
								116 [Instance] = NELIsagixKaiserCRTarget
								117 [Instance] = ViperRig
								118 [Instance] = ButterflyNutmegRight
								119 [Instance] = Devour
								120 [Instance] = CounterAttack
								121 [Instance] = OneTwo_Pass
								122 [Instance] = Ambush1
								123 [Instance] = GagamaruHeader
								124 [Instance] = AirDribbleFall
								125 [Instance] = Charge
								126 [Instance] = CobraVictim
								127 [Instance] = AirDribbleUp
								128 [Instance] = NinjaShotDummy
								129 [Instance] = OffBalanceVictim
								130 [Instance] = ANewToyUser
								131 [Instance] = GoldenDefenseL
								132 [Instance] = GingaRoulette1
								133 [Instance] = SharkSteal
								134 [Instance] = IgaguriAirMalicia
								135 [Instance] = LeftyShoot
								136 [Instance] = HandstandActive
								137 [Instance] = SkyArcPass
								138 [Instance] = BasiliskUser
								139 [Instance] = SideTrapShotLeft
								140 [Instance] = DestructionShot
								141 [Instance] = KOTJDummy2
								142 [Instance] = TrapDancePass
								143 [Instance] = MagicalTurn
								144 [Instance] = LethalTouch
								145 [Instance] = OneTwo_Receive
								146 [Instance] = CurveShot
								147 [Instance] = BasiliskBall
								148 [Instance] = HioriXIsagiBall
								149 [Instance] = OPCurve
								150 [Instance] = KickDefenseL
								151 [Instance] = UndeadModeRun
								152 [Instance] = GodspeedShot
								153 [Instance] = KOTJDummy3
								154 [Instance] = ChopFeintLeft
								155 [Instance] = DirectShot
								156 [Instance] = BeinschussPlr2
								157 [Instance] = Nutmeg
								158 [Instance] = TrapDanceShot
								159 [Instance] = FinalShot
								160 [Instance] = CloseQuartersDribble
								161 [Instance] = GeniusKillingMaliciaPlr
								162 [Instance] = GeniusKillingMaliciaPlr2
								163 [Instance] = IgaguriDharmaPlr
								164 [Instance] = IgaguriDharmaPlr2
								165 [Instance] = NELDash
								166 [Instance] = RouletteDizzy
								167 [Instance] = MonsterSmashLift
								168 [Instance] = DestructiveCrashShotVictim
								169 [Instance] = TwoGunVolley
								170 [Instance] = JuggleShot
								171 [Instance] = HioriXIsagiIsagi
								172 [Instance] = ShidouDrive
								173 [Instance] = YoMichaelPlr2
								174 [Instance] = Steal
								175 [Instance] = TrapDance
								176 [Instance] = NELBachiraIdle
								177 [Instance] = AirDribbleRight
								178 [Instance] = ButterflyNutmegLeft
								179 [Instance] = HioriAwkBall
								180 [Instance] = TrapShot
								181 [Instance] = ButterflyNutmegVictim
								182 [Instance] = SurpassDummy
								183 [Instance] = CamRigFreestyleBeeshot
								184 [Instance] = KingsImpact
								185 [Instance] = ViperBall
								186 [Instance] = IgaguriMonkPass
								187 [Instance] = ImpulseRun
								188 [Instance] = Trap
								189 [Instance] = GingaNutmeg1
								190 [Instance] = FallenHero
								191 [Instance] = AirDribbleStart
								192 [Instance] = E1FreestyleBeeshot
								193 [Instance] = OffBalance
								194 [Instance] = NeoHexFreestyleBeeshot
								195 [Instance] = Fadeaway
								196 [Instance] = GingaMonsterE1
								197 [Instance] = TwoGunVolley_Gun1
								198 [Instance] = GingaMonsterE3
								199 [Instance] = ViperUser
								200 [Instance] = KingChop2
								201 [Instance] = OcclusionBreak2
								202 [Instance] = ShidouKablamo
								203 [Instance] = OcclusionBreakOLD
								204 [Instance] = TwoGunVolley_Gun2
								205 [Instance] = KingChop1
								206 [Instance] = CrowTheftRight
								207 [Instance] = DestructionDribble
								208 [Instance] = LionSteal
								209 [Instance] = DestructiveCharge2
								210 [Instance] = AirDribbleShoot
								211 [Instance] = OcclusionBreak1
								212 [Instance] = GingaRoulette2
								213 [Instance] = GingaMonsterE2
								214 [Instance] = GodspeedDeflect
								215 [Instance] = DieBall
								216 [Instance] = LongPass
								217 [Instance] = HeelPass
								218 [Instance] = KOTJBall
								219 [Instance] = HioriXIsagiHiori
								220 [Instance] = Territory
								221 [Instance] = KaiserVolley
								222 [Instance] = JuggleFeint
								223 [Instance] = ContrarianDefense
								224 [Instance] = ZombieDribble2
								225 [Instance] = DestructiveCharge1
								226 [Instance] = KingsDribble
								227 [Instance] = Ambush2
								228 [Instance] = FallenHeroDummy
								229 [Instance] = CreativeDribble
								230 [Instance] = BodyBlockL
								231 [Instance] = DestructiveCrashShotPlr
								232 [Instance] = HandstandLoop
								233 [Instance] = KickDefenseR
								234 [Instance] = SharkSteal_Victim
								235 [Instance] = GodspeedDistortion
								236 [Instance] = KingsPredationDummy
								237 [Instance] = StreetSweep
								238 [Instance] = SideTrapShotRight
								239 [Instance] = LionChopLeft
								240 [Instance] = NELReoCR
								241 [Instance] = LaBoba
								242 [Instance] = ContrarianPass
								243 [Instance] = HandstandStart
								244 [Instance] = BeinschussPlr1
								245 [Instance] = InfiniteDribble3
								246 [Instance] = Periscope
								247 [Instance] = LokiWhiplash
								248 [Instance] = ShidouBigBang
								249 [Instance] = BeautifulShotL
								250 [Instance] = YoMichaelPlr
								251 [Instance] = GingaSteal
						14 [table] (Recursive table detected)
						15 [table]:
						Bicycles [table] table: 0x68af35564b169835
								1 [Instance] = Bicycle
						16 [table]:
						Flicks [table] table: 0x32a04c2d1eb65ce5
								1 [Instance] = Flick
						17 [table]:
						Dribbles [table] table: 0x342bdd16d3c16335
								1 [Instance] = Isagi
								2 [Instance] = Don Lorenzo
								3 [Instance] = Charles
								4 [Instance] = McNagi Fryshiro
								5 [Instance] = NEL Reo
								6 [Instance] = Yukimiya
								7 [Instance] = Hiori
								8 [Instance] = Sae
								9 [Instance] = Gagamaru
								10 [Instance] = NEL Isagi
								11 [Instance] = Kunigami
								12 [Instance] = Otoya
								13 [Instance] = NEL Bachira
								14 [Instance] = Bachira
								15 [Instance] = Shidou
								16 [Instance] = King
								17 [Instance] = Chigiri
								18 [Instance] = Loki
								19 [Instance] = Nagi
								20 [Instance] = NEL Nagi
								21 [Instance] = Igaguri
								22 [Instance] = Kaiser
								23 [Instance] = Aiku
								24 [Instance] = NEL Rin
								25 [Instance] = Karasu
								26 [Instance] = Kurona
						18 [function] = KnitStart
						19 [string] = AnimationController
						20 [table]:
						Trove [table] table: 0x472ba17b5caef495
								1 [table]:
								_objects [table] table: 0xfdebdcfb15805065
								2 [boolean] = false
						21 [table]:
						Movement [table] table: 0xbc8ad59d3e6ed0c5
								1 [Instance] = Slide
								2 [Instance] = DiveF
								3 [Instance] = Hold
								4 [Instance] = CustomW
								5 [Instance] = Request
								6 [Instance] = Idle
								7 [Instance] = GoalieJump
								8 [Instance] = CustomR
								9 [Instance] = StandUp
								10 [Instance] = SixthSenseIdle
								11 [Instance] = PickUp
								12 [Instance] = Catch
								13 [Instance] = Header
								14 [Instance] = ThrowBall
								15 [Instance] = DiveL
								16 [Instance] = DiveR
								17 [Instance] = GoalieIdle
						22 [table]:
						StartingCutscene [table] table: 0x07ce07ee0561e805
								1 [Instance] = Home5
								2 [Instance] = Away5
								3 [Instance] = Home2
								4 [Instance] = Home1
								5 [Instance] = Away4
								6 [Instance] = Away3
								7 [Instance] = Away1
								8 [Instance] = Home3
								9 [Instance] = Home4
								10 [Instance] = Away2
						23 [function] = ResetChecks
						24 [table]:
						Podium [table] table: 0x0f9d195cb02bd175
								1 [Instance] = 1
								2 [Instance] = 3
								3 [Instance] = 2
								4 [Instance] = 5
								5 [Instance] = 4
				3 [function] = Slide
				4 [function] = KnitInit
				5 [function] = BallFollowPlayer
				6 [table]:
				BaseTrove [table] table: 0x577509967d9cbbb5
						1 [table]:
						_objects [table] table: 0xa11a07d471920b05
								1 [table]:
								1 [table] table: 0xdbbb0b5852cb34d5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								2 [table]:
								2 [table] table: 0xf11213debd6f2f85
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								3 [table]:
								3 [table] table: 0x29af5b45f7660945
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								4 [table]:
								4 [table] table: 0x1320fca41d9e7435
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								5 [table]:
								5 [table] table: 0xd42dc1333b2fc675
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								6 [table]:
								6 [table] table: 0x4f8b2b217eb8c245
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								7 [table]:
								7 [table] table: 0x2268ea334468f7e5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								8 [table]:
								8 [table] table: 0xf4e2152db981fe55
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								9 [table]:
								9 [table] table: 0x94947d5b15a43475
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								10 [table]:
								10 [table] table: 0x80f6dcdcbf7faf25
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								11 [table]:
								11 [table] table: 0x8a66339da8d48995
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								12 [table]:
								12 [table] table: 0xab395bdb6aa5dc45
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								13 [table]:
								13 [table] table: 0x61d0c250630ce335
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								14 [table]:
								14 [table] table: 0x6e7b5a8961eb09e5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								15 [table]:
								15 [table] table: 0x64fb7201a73aa825
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								16 [table]:
								16 [table] table: 0x7652db6eade54e95
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								17 [table]:
								17 [table] table: 0x8939a3f3184f1545
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								18 [table]:
								18 [table] table: 0x84219c74f5331835
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								19 [table]:
								19 [table] table: 0x917efce5ee9542e5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								20 [table]:
								20 [table] table: 0xee9f9d42d07d9555
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								21 [table]:
								21 [table] table: 0xac3fbdf83d9c6805
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								22 [table]:
								22 [table] table: 0x511c91714b3446f5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								23 [table]:
								23 [table] table: 0x4bfe78f5884c7da5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								24 [table]:
								24 [table] table: 0x4599e0647eec7815
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								25 [table]:
								25 [table] table: 0x30a0bf83070442c5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								26 [table]:
								26 [table] table: 0x26db5f6e419c6db5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								27 [table]:
								27 [table] table: 0xe573fed083fd9865
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								28 [table]:
								28 [table] table: 0x13db5e8bc5455ed5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								29 [table]:
								29 [table] table: 0x3d843de608a31585
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								30 [table]:
								30 [table] table: 0x1f55dc45f60f2875
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								31 [table]:
								31 [table] table: 0x70f67c9c9c954325
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								32 [table]:
								32 [table] table: 0x1d271b1e333ab595
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								33 [table]:
								33 [table] table: 0x3bb833d931dfb845
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								34 [table]:
								34 [table] table: 0x63b419c617ccde85
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								35 [table]:
								35 [table] table: 0x3a8502297835d175
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								36 [table]:
								36 [table] table: 0x1cc61a936aa48c25
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								37 [table]:
								37 [table] table: 0xff11734e24ffaa95
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								38 [table]:
								38 [table] table: 0x1a28e42d20943145
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								39 [table]:
								39 [table] table: 0x3be33b84a6343c35
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								40 [table]:
								40 [table] table: 0x616a5337edcc26e5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								41 [table]:
								41 [table] table: 0x76ccfa32fb63b155
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								42 [table]:
								42 [table] table: 0x570c41b9da348405
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								43 [table]:
								43 [table] table: 0xc04db93eac9d5af5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								44 [table]:
								44 [table] table: 0xcb8ed03bb77b51a5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								45 [table]:
								45 [table] table: 0xedaf78b411c70415
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								46 [table]:
								46 [table] table: 0xa02f9f354bad6ec5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								47 [table]:
								47 [table] table: 0xaeeebfcb896d71b5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								48 [table]:
								48 [table] table: 0x8a4e9ea05e877c65
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								49 [table]:
								49 [table] table: 0x838dfd0904227ad5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								50 [table]:
								50 [table] table: 0xb5cc9c52c15e7185
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								51 [table]:
								51 [table] table: 0x9672bdd783f60c75
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								52 [table]:
								52 [table] table: 0xe0eb9d04c42a6725
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								53 [table]:
								53 [table] table: 0xd4a062a20e8e5195
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								54 [table]:
								54 [table] table: 0xbba8da58d6e98445
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								55 [table]:
								55 [table] table: 0x41f1b313bc52ab35
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								56 [table]:
								56 [table] table: 0x8a464587932bf575
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
						2 [boolean] = false
				7 [table]:
				Settings [table] table: 0x9c4f6085bde2a2d5
						1 [function] = KeybindSet
						2 [function] = SFX
						3 [function] = SpinOffWarning
						4 [function] = Crowd
						5 [function] = KnitInit
						6 [function] = CosmeticPhysics
						7 [table]:
						BaseTrove [table] table: 0x016a0f06dcfcee45
								1 [table]:
								_objects [table] table: 0xb36b7838154b59d5
										1 [table]:
										1 [table] table: 0x58f200b138af0c85
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										2 [table]:
										2 [table] table: 0x454d36cd86096375
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										3 [table]:
										3 [table] table: 0x795702d62eb325e5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										4 [table]:
										4 [table] table: 0x6fe337f5b66e6f85
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										5 [table]:
										5 [table] table: 0x0e6bd7440fc68675
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										6 [table]:
										6 [table] table: 0x56f23e7b0c47f0b5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										7 [table]:
										7 [table] table: 0x428d5efc43ecfb65
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										8 [table]:
										8 [table] table: 0x484df07d816dfdd5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										9 [table]:
										9 [table] table: 0x2d0d5ff94c84f085
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										10 [table]:
										10 [table] table: 0xee6ebf600623cf75
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										11 [table]:
										11 [table] table: 0xe8af9e8ad97ce625
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										12 [table]:
										12 [table] table: 0xe6acb6f0f42a7465
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										13 [table]:
										13 [table] table: 0xf58c8649914762d5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										14 [table]:
										14 [table] table: 0xcbcd87e2d7fb7985
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										15 [table]:
										15 [table] table: 0xf04ab1e635d1dfc5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										16 [table]:
										16 [table] table: 0x85136d931ba886b5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										17 [table]:
										17 [table] table: 0x862becdc6a07ed65
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										18 [table]:
										18 [table] table: 0x97a4ac5e6498ebd5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										19 [table]:
										19 [table] table: 0x65f24f835f310285
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										20 [table]:
										20 [table] table: 0xaa49cf582256fd75
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
								2 [boolean] = false
						8 [function] = SetValues
						9 [function] = Emotes
						10 [table]:
						CustomData [table] table: 0x98953b2161350205
								1 [table]:
								BallSkins [table] table: 0x0d252edc6559c965
								2 [table]:
								EmotesEquipped [table] table: 0x6366129e1c8d5cf5
										1 [string] = Default
										2 [string] = 
										3 [string] = 
										4 [string] = 
								3 [string] = Water
								4 [string] = Basic
								5 [table]:
								Cards [table] table: 0xb2671199a462b045
										1 [string] = Basic
								6 [table]:
								StyleSkins [table] table: 0x00240f5aabc00fd5
								7 [number] = 0
								8 [table]:
								Cosmetics [table] table: 0x56277ad32a6357a5
								9 [string] = 
								10 [string] = 
								11 [table]:
								Emotes [table] table: 0xa3f63911391fbf35
										1 [string] = Default
								12 [string] = 
								13 [table]:
								GoalEffects [table] table: 0xc738785e61d5ad95
										1 [string] = Water
								14 [number] = 51
								15 [string] = JapanFALOL2
						11 [table]:
						SettingsService [table] table: 0xbc8830fa9f7d1695
								1 [table]:
								Setting [table] table: 0xb8ac4ceef9824d55
										1 [boolean] = true
										2 [boolean] = false
										3 [Instance] = Setting
								2 [table]:
								Keybind [table] table: 0x0cce39eae6c89cb5
										1 [boolean] = true
										2 [boolean] = false
										3 [Instance] = Keybind
								3 [function] = Unknown Name
								4 [table]:
								Restore [table] table: 0x50c8c2d2e733cf95
										1 [boolean] = true
										2 [boolean] = false
										3 [Instance] = Restore
								5 [function] = Unknown Name
						12 [function] = Shadows
						13 [table]:
						Keybinds [table] table: 0x3b243977ccea7115
								1 [table]:
								Mobile [table] table: 0x1e7755f29ab67bc5
										1 [table]:
										Flow [table] table: 0x64106f73cab4a355
												1 [number] = 0.723
												2 [number] = 0.798
										2 [table]:
										Shoot [table] table: 0xff97e549f85a6ab5
												1 [number] = 0.875
												2 [number] = 0.656
										3 [table]:
										Emote [table] table: 0xb1c72feefae59a05
												1 [number] = 0.87
												2 [number] = 0.337
										4 [table]:
										Run [table] table: 0xc7862e41c44cd4f5
												1 [number] = 0.957
												2 [number] = 0.427
										5 [table]:
										Pass [table] table: 0x1d4764ef0de25165
												1 [number] = 0.874
												2 [number] = 0.512
										6 [table]:
										Dribble [table] table: 0x6304608fca013595
												1 [number] = 0.957
												2 [number] = 0.572
										7 [table]:
										Awaken [table] table: 0xb23738ea0ba8c325
												1 [number] = 0.786
												2 [number] = 0.66
										8 [table]:
										Shiftlock [table] table: 0x6844f9ec9c9b3845
												1 [number] = 0.955
												2 [number] = 0.269
								2 [table]:
								Console [table] table: 0x6926ccf5141fd4e5
										1 [string] = ButtonL3
										2 [string] = DPadUp
										3 [string] = ButtonR1
										4 [string] = DPadRight
										5 [string] = DPadDown
										6 [string] = ButtonX
										7 [string] = ButtonL1
										8 [string] = ButtonL1
										9 [string] = ButtonY
										10 [string] = ButtonR1
										11 [string] = ButtonB
								3 [table]:
								ConsoleImages [table] table: 0xc23041255cdee665
										1 [table]:
										Enum.KeyCode.ButtonB [table] table: 0xffab3abdf1b894b5
												1 [string] = rbxassetid://105312766601341
												2 [string] = rbxassetid://70974133654990
										2 [table]:
										Enum.KeyCode.ButtonSelect [table] table: 0x0be32fa3f355c795
												1 [string] = rbxassetid://99017970804096
												2 [string] = rbxassetid://99017970804096
										3 [table]:
										Enum.KeyCode.ButtonL2 [table] table: 0x2f76c7262a355545
												1 [string] = rbxassetid://83697731945448
												2 [string] = rbxassetid://138599713361244
										4 [table]:
										Enum.KeyCode.ButtonA [table] table: 0x45ea7abcf08a2805
												1 [string] = rbxassetid://117557825423309
												2 [string] = rbxassetid://95717013376600
										5 [table]:
										Enum.KeyCode.ButtonL3 [table] table: 0xd908ce442b3590d5
												1 [string] = rbxassetid://93729859351124
												2 [string] = rbxassetid://90877672738700
										6 [table]:
										Enum.KeyCode.ButtonL1 [table] table: 0x75973c019b4839f5
												1 [string] = rbxassetid://72974413874934
												2 [string] = rbxassetid://70466834217349
										7 [table]:
										Enum.KeyCode.ButtonX [table] table: 0x4b11213fee265555
												1 [string] = rbxassetid://91817919366170
												2 [string] = rbxassetid://80479027436990
										8 [table]:
										Enum.KeyCode.ButtonY [table] table: 0x29b4efb8f144f125
												1 [string] = rbxassetid://130052377775011
												2 [string] = rbxassetid://101128500176794
										9 [table]:
										Enum.KeyCode.ButtonStart [table] table: 0xdda01142d3d19f65
												1 [string] = rbxassetid://111835518770071
												2 [string] = rbxassetid://99017970804096
										10 [table]:
										Enum.KeyCode.ButtonR2 [table] table: 0x26956f319feffa75
												1 [string] = rbxassetid://89922098499871
												2 [string] = rbxassetid://78892629635376
										11 [table]:
										Enum.KeyCode.ButtonR1 [table] table: 0x70c83830d77b82e5
												1 [string] = rbxassetid://115268346280207
												2 [string] = rbxassetid://115706592561396
										12 [table]:
										Enum.KeyCode.ButtonR3 [table] table: 0x9d72223cd70049c5
												1 [string] = rbxassetid://130267784051765
												2 [string] = rbxassetid://122958464649802
										13 [table]:
										Enum.KeyCode.DPadLeft [table] table: 0xf4c62ebb298acb85
												1 [string] = rbxassetid://80137534731403
												2 [string] = rbxassetid://76560372152681
										14 [table]:
										Enum.KeyCode.DPadDown [table] table: 0x8205fbb32ee82315
												1 [string] = rbxassetid://74001736372697
												2 [string] = rbxassetid://99809626200804
										15 [table]:
										Enum.KeyCode.DPadUp [table] table: 0x9b4453a6b85034a5
												1 [string] = rbxassetid://88998279874543
												2 [string] = rbxassetid://123662468503587
										16 [table]:
										Enum.KeyCode.DPadRight [table] table: 0x2e8150b9b9dd5835
												1 [string] = rbxassetid://89376419969117
												2 [string] = rbxassetid://74919166333399
								4 [table]:
								PC [table] table: 0xc896d371ddd3a875
										1 [string] = T
										2 [string] = F
										3 [string] = E
										4 [string] = G
										5 [string] = X
										6 [string] = C
										7 [string] = R
										8 [string] = Q
										9 [string] = V
										10 [string] = Q
										11 [string] = B
						14 [function] = ContentCreatorTag
						15 [table]:
						SettingsData [table] table: 0x80f0f10f6d095b55
								1 [number] = 10
								2 [boolean] = true
								3 [boolean] = true
								4 [boolean] = false
								5 [boolean] = true
								6 [number] = 10
								7 [number] = 10
								8 [number] = 10
								9 [boolean] = true
								10 [boolean] = true
						16 [function] = GetConsoleKeybindImage
						17 [function] = KnitStart
						18 [string] = Settings
						19 [table]:
						DefaultKeyBinds [table] table: 0xd7a31225937206f5
								1 [table]:
								Mobile [table] table: 0x9ed4ab2b25ae2a15
										1 [table]:
										Flow [table] table: 0xa9677d4e60188c55
												1 [number] = 0.723
												2 [number] = 0.798
										2 [table]:
										Run [table] table: 0xf017464b64830e95
												1 [number] = 0.957
												2 [number] = 0.427
										3 [table]:
										Dribble [table] table: 0xd438de0d9eb1c9e5
												1 [number] = 0.957
												2 [number] = 0.572
										4 [table]:
										Emote [table] table: 0x0aa6d72e66b57d75
												1 [number] = 0.87
												2 [number] = 0.337
										5 [table]:
										Pass [table] table: 0x5da7c8896643dfb5
												1 [number] = 0.874
												2 [number] = 0.512
										6 [table]:
										Shoot [table] table: 0x0b27b7ac60ef6825
												1 [number] = 0.875
												2 [number] = 0.656
										7 [table]:
										Awaken [table] table: 0x7f66b0d06fd610c5
												1 [number] = 0.786
												2 [number] = 0.66
										8 [table]:
										Shiftlock [table] table: 0xa7f7dcab6de7a705
												1 [number] = 0.955
												2 [number] = 0.269
								2 [table]:
								PC [table] table: 0xc2d1bea4aad92335
										1 [string] = T
										2 [string] = Q
										3 [string] = E
										4 [string] = G
										5 [string] = X
										6 [string] = R
										7 [string] = V
										8 [string] = C
										9 [string] = B
								3 [table] (Recursive table detected)
								4 [table]:
								Console [table] table: 0x10f664cb2c548285
										1 [string] = ButtonL3
										2 [string] = ButtonR1
										3 [string] = ButtonR1
										4 [string] = DPadRight
										5 [string] = DPadUp
										6 [string] = ButtonL1
										7 [string] = ButtonY
										8 [string] = ButtonX
										9 [string] = ButtonB
						20 [table] (Recursive table detected)
						21 [function] = Music
						22 [function] = RunLock
						23 [function] = UISFX
				8 [table]:
				BallService [table] table: 0xe69b7b42f255eb95
						1 [table]:
						Prediction [table] table: 0x34420025f4fcf245
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Prediction
						2 [table]:
						HasShot [table] table: 0x5b380fd799e729a5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = HasShot
						3 [table]:
						Dribble [table] table: 0xeff1f49628ae2085
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Dribble
						4 [table]:
						Jump [table] table: 0x023c11d3a634e7e5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Jump
						5 [table]:
						Slide [table] table: 0x4b2023dfa27a5625
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Slide
						6 [table]:
						Pass [table] table: 0x38fe2680634b0505
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Pass
						7 [table]:
						GoalieShoot [table] table: 0x943fe9dc6303c465
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = GoalieShoot
						8 [table]:
						Shoot [table] table: 0x507e72197dbb8b45
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Shoot
						9 [table]:
						Shot [table] table: 0xbbb59a3af57001d5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Shot
						10 [table]:
						ResetToMid [table] table: 0xe67e29192451b6c5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = ResetToMid
						11 [table]:
						UpdateDribbleCooldown [table] table: 0x1471f0a6d96d4935
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = UpdateDribbleCooldown
						12 [table]:
						Dive [table] table: 0x908875a6c7a5f015
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Dive
						13 [table]:
						Network [table] table: 0xff02e528c620ab75
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Network
						14 [table]:
						SetIsHoldingShoot [table] table: 0x6a84af2c45db2255
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = SetIsHoldingShoot
						15 [table]:
						GOD_GrabBall [table] table: 0xfd38d7d76c9ad2a5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = GOD_GrabBall
				9 [Instance] = Attachment
				10 [function] = CheckInput
				11 [table] (Recursive table detected)
				12 [function] = Pass
				13 [table]:
				Effects [table] table: 0x08b5058cd728f505
						1 [table]:
						Vfx [table] table: 0x079404230c77ebf5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Vfx
						2 [table]:
						Popup [table] table: 0xa3063e29fd6c22d5
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = Popup
						3 [table]:
						GoalEffects [table] table: 0xcf801057f3296a35
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = GoalEffects
				14 [function] = KnitStart
				15 [table]:
				StaminaService [table] table: 0xeecc9aafd4ce5425
						1 [table]:
						DecreaseStamina [table] table: 0xee8fa22aeeca6295
								1 [boolean] = true
								2 [boolean] = false
								3 [Instance] = DecreaseStamina
				16 [function] = LocalDragBall
				17 [function] = Bicycle
				18 [RBXScriptConnection] = Connection
				19 [function] = Shoot
				20 [boolean] = false
				21 [function] = ResetChecks
				22 [Instance] = Attachment
				23 [table]:
				NewTrove [table] table: 0x80b3f441b6da8715
						1 [table]:
						_objects [table] table: 0x569c39232f28fee5
								1 [table]:
								1 [table] table: 0x48a32059e6b1f955
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								2 [table]:
								2 [table] table: 0x435a7f90fcc8cc05
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								3 [table]:
								3 [table] table: 0xcdf1df2be367e2f5
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								4 [table]:
								4 [table] table: 0x197cc5a02eb66d35
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
								5 [table]:
								5 [table] table: 0x29d0228802d3ed35
										1 [RBXScriptConnection] = Connection
										2 [string] = Disconnect
						2 [boolean] = false
				24 [function] = Flick
				25 [RBXScriptConnection] = Connection
				26 [Instance] = PredictionVFX
				27 [table]:
				ShootTrove [table] table: 0x057a2f183a3c1685
						1 [table]:
						_objects [table] table: 0x532360563d0fbe15
						2 [boolean] = false
				28 [table] (Recursive table detected)
				29 [table]:
				Awakening [table] table: 0x4ec9aee0ed4c7c35
						1 [table] (Recursive table detected)
						2 [table] (Recursive table detected)
						3 [table] (Recursive table detected)
						4 [function] = KnitInit
						5 [table]:
						AwakeningService [table] table: 0x99f20bf8aba51935
								1 [table]:
								AwakenEveryone [table] table: 0xb45d14623a3543e5
										1 [boolean] = true
										2 [boolean] = false
										3 [Instance] = AwakenEveryone
								2 [table]:
								StartAwakening [table] table: 0x17217e67acd20ac5
										1 [boolean] = true
										2 [boolean] = false
										3 [Instance] = StartAwakening
						6 [table] (Recursive table detected)
						7 [function] = KnitStart
						8 [string] = AwakeningController
						9 [table]:
						Trove [table] table: 0x9550d3284c102825
								1 [table]:
								_objects [table] table: 0xcf7450061b369fb5
										1 [table]:
										1 [table] table: 0xcdc7c8a1499ba665
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										2 [table]:
										2 [table] table: 0xab0642db77fed0d5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
								2 [boolean] = false
						10 [table] (Recursive table detected)
						11 [function] = Awakening
						12 [table]:
						Ability [table] table: 0x06cb7253bc12a905
								1 [table] (Recursive table detected)
								2 [table] (Recursive table detected)
								3 [function] = KnitInit
								4 [table] (Recursive table detected)
								5 [table]:
								BaseTrove [table] table: 0xb5bb51da94e1b495
										1 [table]:
										_objects [table] table: 0x441ad49b4c011065
												1 [table]:
												1 [table] table: 0x9b63c9bb6faa4945
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												2 [table]:
												2 [table] table: 0xb4eb40b47402b435
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												3 [table]:
												3 [table] table: 0x3030fd3052cb4715
														1 [table]:
														1 [table] table: 0x62ecc2366d7cef85
																1 [function] = reloadAbility
																2 [boolean] = true
																3 [table]:
																_signal [table] table: 0x6c8ab19537cf0495
																		1 [table] (Recursive table detected)
																4 [table]:
																_next [table] table: 0x04fddfc9564655b5
																		1 [function] = updAwakeningAnim
																		2 [boolean] = true
																		3 [table] (Recursive table detected)
																		4 [boolean] = false
														2 [string] = Destroy
										2 [boolean] = false
								6 [table]:
								ResetTrove [table] table: 0x2c012935e0250e15
										1 [table]:
										_objects [table] table: 0x66461e32a0c1a5e5
												1 [table]:
												1 [table] table: 0xa5357fbda368b055
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
										2 [boolean] = false
								7 [table] (Recursive table detected)
								8 [function] = TryActivateAbilityFromId
								9 [table] (Recursive table detected)
								10 [function] = Reo
								11 [number] = 1757113698.759002
								12 [function] = AbilityText
								13 [function] = KnitStart
								14 [table] (Recursive table detected)
								15 [table]:
								Trove [table] table: 0x074c568217db70f5
										1 [table]:
										_objects [table] table: 0xb90b339bdf87dc45
												1 [table]:
												1 [table] table: 0x5fd04b1d35eae335
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												2 [table]:
												2 [table] table: 0x514563c176a8c6d5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												3 [table]:
												3 [table] table: 0x083129c9967f4915
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												4 [table]:
												4 [table] table: 0x9a27002d99182d95
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												5 [table]:
												5 [table] table: 0x85501982e4703045
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												6 [table]:
												6 [table] table: 0x2d085dcb10af6dc5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												7 [table]:
												7 [table] table: 0xdfc8ac2ecf6ddb95
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												8 [table]:
												8 [table] table: 0xfd10adcb18cc8245
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												9 [table]:
												9 [table] table: 0xd8efee90fa37ad35
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												10 [table]:
												10 [table] table: 0xa2ae8e19839d37e5
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
												11 [table]:
												11 [table] table: 0x1bae82a1806e6625
														1 [RBXScriptConnection] = Connection
														2 [string] = Disconnect
										2 [boolean] = false
								16 [table]:
								AbilitiesTable [table] table: 0x95cdb2ee70d28205
										1 [table]:
										Isagi [table] table: 0xb83c94a388a71485
												1 [table]:
												Ability1 [table] table: 0xf5596cbba342ed95
														1 [function] = DirectShot
														2 [string] = Direct Shot
														3 [string] = DirectShot
												2 [table]:
												Ability2 [table] table: 0x7003ac1328b0c935
														1 [function] = Fadeaway
														2 [string] = Fadeaway
														3 [string] = Fadeaway
												3 [table]:
												Ability3 [table] table: 0x98085aaa9fac4b25
														1 [function] = FinalShot
														2 [string] = Final Shot
														3 [string] = FinalShot
										2 [table]:
										Shidou [table] table: 0x1f01154835f66005
												1 [table]:
												Ability1 [table] table: 0x55466eae4c930f95
														1 [function] = Unknown Name
														2 [string] = KABLAMO!!!
														3 [string] = Kablamo
												2 [table]:
												Ability2 [table] table: 0x4047767d8236ba35
														1 [function] = Unknown Name
														2 [string] = Dragon Header
														3 [string] = ShidouVMove
												3 [table]:
												Ability3 [table] table: 0x663b097dce8c1ed5
														1 [function] = BigBang
														2 [string] = Big Bang Drive
														3 [string] = BigBang
														4 [boolean] = true
										3 [table]:
										Charles [table] table: 0xc10f58702b39fb75
												1 [table]:
												Ability5 [table] table: 0x0f251a54d7269075
														1 [function] = Unknown Name
														2 [string] = The Final Boss
														3 [string] = TheFinalBoss
														4 [boolean] = true
												2 [table]:
												Ability4 [table] table: 0xd28cc3d207e88225
														1 [function] = Unknown Name
														2 [string] = Rabona Cross
														3 [string] = RabonaCross
														4 [boolean] = true
												3 [table]:
												Ability2 [table] table: 0xd18a0b962a6fc3c5
														1 [function] = Unknown Name
														2 [string] = Contrarian Dribble
														3 [string] = CharlesVMove
												4 [table]:
												Ability1 [table] table: 0xca4ff0f6ea90f225
														1 [function] = SkyArcPass
														2 [string] = Sky Arc Pass
														3 [string] = SkyArcPass
												5 [table]:
												Ability6 [table] table: 0xe136b9ad03e65f85
														1 [function] = Unknown Name
														2 [string] = Contrarian Defense
														3 [string] = CharlesBMove
												6 [table]:
												Ability3 [table] table: 0x2ee47391fe83cb25
														1 [function] = Unknown Name
														2 [string] = Contrarian Defense
														3 [string] = CharlesBMove
										4 [table]:
										Kurona [table] table: 0xbdd92d904b71b0f5
												1 [table]:
												Ability1 [table] table: 0x49413a5c596e6bd5
														1 [function] = Unknown Name
														2 [string] = One-Two
														3 [string] = OneTwo
												2 [table]:
												Ability2 [table] table: 0x06157e23df4b5835
														1 [function] = Unknown Name
														2 [string] = Shark Steal
														3 [string] = SharkSteal
												3 [table]:
												Ability3 [table] table: 0x226d97c357b19135
														1 [function] = Unknown Name
														2 [string] = Planet Hotline
														3 [string] = PlanetHotline
										5 [table]:
										NEL Reo [table] table: 0x5397becc9a984e15
												1 [table]:
												Ability2 [table] table: 0xf179fd00021a4b25
														1 [function] = Unknown Name
														2 [string] = ReoVMove
														3 [string] = ReoVMove
												2 [table]:
												Ability1 [table] table: 0x1f66f9a637d83bb5
														1 [function] = Unknown Name
														2 [string] = Chameleon
														3 [string] = Chameleon
												3 [table]:
												Ability6 [table] table: 0x570527d2b18a02e5
														1 [function] = Unknown Name
														2 [string] = Strike Mode
														3 [string] = ModeSwitch
												4 [table]:
												Ability3 [table] table: 0x1cf1d2ebd8838775
														1 [function] = Unknown Name
														2 [string] = Chameleon Tap Lift
														3 [string] = ReoBMove
														4 [boolean] = true
										6 [table]:
										Yukimiya [table] table: 0xaaecf513cc0cd8c5
												1 [table]:
												Ability5 [table] table: 0x7bf9f14009ed9895
														1 [function] = Unknown Name
														2 [string] = Goal In Time
														3 [string] = GoalInTime
														4 [boolean] = true
												2 [table]:
												Ability4 [table] table: 0xd2835b43af725d85
														1 [function] = StreetDribbling
														2 [string] = Street Dribbling
														3 [string] = StreetDribbling
												3 [table]:
												Ability6 [table] table: 0x80dad6e237f1c635
														1 [function] = GyroShot
														2 [string] = Gyro Shot
														3 [string] = GyroShot
												4 [table]:
												Ability1 [table] table: 0x87ae4265bfdcae65
														1 [function] = Unknown Name
														2 [string] = LaBoba
														3 [string] = LaBoba
												5 [table]:
												Ability2 [table] table: 0xb530cb03043d28d5
														1 [function] = Unknown Name
														2 [string] = Street Sweep
														3 [string] = StreetSweep
												6 [table]:
												Ability3 [table] table: 0x73f305d193b3b945
														1 [function] = GyroShot
														2 [string] = Gyro Shot
														3 [string] = GyroShot
										7 [table]:
										Hiori [table] table: 0x595d19bab78d4345
												1 [table]:
												Ability1 [table] table: 0x5b7a1abb0fe0fad5
														1 [function] = Unknown Name
														2 [string] = Laser
														3 [string] = Laser
												2 [table]:
												Ability2 [table] table: 0xada027a8a78ba8f5
														1 [function] = PerfectPass
														2 [string] = Ice Dribble
														3 [string] = Flow Pass
												3 [table]:
												Ability3 [table] table: 0x8d0745a5e04418c5
														1 [function] = Curved
														2 [string] = Curved Pass
														3 [string] = Curved
										8 [table]:
										Sae [table] table: 0x01ed30f8587652f5
												1 [table]:
												Ability6 [table] table: 0x51495286661cba85
														1 [function] = Surpass
														2 [string] = Beautiful Shot
														3 [string] = Surpass
														4 [boolean] = true
												2 [table]:
												Ability1 [table] table: 0x5fee4f7d68953245
														1 [function] = Unknown Name
														2 [string] = Off Balance
														3 [string] = SaeCMove
												3 [table]:
												Ability2 [table] table: 0xf00604f51e1ae625
														1 [function] = Unknown Name
														2 [string] = Creative Dash
														3 [string] = SaeVMove
												4 [table]:
												Ability3 [table] table: 0xf5b75682894b7155
														1 [function] = Surpass
														2 [string] = You'll Never Surpass Me.
														3 [string] = Surpass
										9 [table]:
										Gagamaru [table] table: 0xb86570abdc3dbf35
												1 [table]:
												Ability1 [table] table: 0xf96a0d43050de685
														1 [function] = Scorpion
														2 [string] = Scorpion
														3 [string] = Scorpion
												2 [table]:
												Ability2 [table] table: 0xee501cbd92fa90a5
														1 [function] = DivingHeader
														2 [string] = Diving Header
														3 [string] = DivingHeader
												3 [table]:
												Ability3 [table] table: 0xdc3772f2c67249e5
														1 [function] = BearClaw
														2 [string] = Bear Claw
														3 [string] = BearClaw
										10 [table]:
										NEL Isagi [table] table: 0x018fa64b22de1105
												1 [table]:
												Ability5 [table] table: 0x80173e0ec69c7145
														1 [function] = TwoGunVolley
														2 [string] = Two-Gun Volley
														3 [string] = TwoGunVolley
												2 [table]:
												Ability4 [table] table: 0x8b241ee30f246a95
														1 [function] = DemonKing
														2 [string] = Demon King
														3 [string] = DemonKing
												3 [table]:
												Ability6 [table] table: 0xd6955564ce261525
														1 [function] = NELDash
														2 [string] = Dash
														3 [string] = NELDash
												4 [table]:
												Ability1 [table] table: 0xa50fd409e035d865
														1 [function] = NELDirectShot
														2 [string] = Lefty Shoot
														3 [string] = NELDirectShot
												5 [table]:
												Ability2 [table] table: 0xc3cb7a1d5eff1165
														1 [function] = NELMetavision
														2 [string] = Metavision
														3 [string] = NELMetavision
												6 [table]:
												Ability3 [table] table: 0xfd34f2d314093615
														1 [function] = TrueDirectShot
														2 [string] = True Direct Shot
														3 [string] = TrueDirectShot
										11 [table]:
										McNagi Fryshiro [table] table: 0x09a6ad58054cf575
												1 [table]:
												Ability5 [table] table: 0x2a60a6f54bda6925
														1 [function] = Unknown Name
														2 [string] = Five Stage Volley
														3 [string] = FiveStageVolley
														4 [boolean] = true
												2 [table]:
												Ability4 [table] table: 0xdf6361708b6ccd55
														1 [function] = Unknown Name
														2 [string] = Death Dance
														3 [string] = DeathDance
														4 [boolean] = true
												3 [table]:
												Ability2 [table] table: 0x87f39468889fab15
														1 [function] = Unknown Name
														2 [string] = Trap Dance
														3 [string] = NELNagiVMove
												4 [table]:
												Ability1 [table] table: 0xeb1693d7cc3898c5
														1 [function] = Unknown Name
														2 [string] = Trap
														3 [string] = NELNagiCMove
												5 [table]:
												Ability6 [table] table: 0x2b2bf97419677275
														1 [function] = Unknown Name
														2 [string] = Juggling Shot
														3 [string] = JugglingShot
												6 [table]:
												Ability3 [table] table: 0xcfce41fb3c608485
														1 [function] = Unknown Name
														2 [string] = Tap Lift
														3 [string] = TapLift
														4 [boolean] = true
										12 [table]:
										Otoya [table] table: 0x186a24611274a7a5
												1 [table]:
												Ability2 [table] table: 0xf9c81f5be5fd9b05
														1 [function] = NinjaDribble
														2 [string] = Ninja Dribble
														3 [string] = NinjaDribble
												2 [table]:
												Ability1 [table] table: 0x5a93f9c32cca0f35
														1 [function] = StealthySteps
														2 [string] = Stealthy Steps
														3 [string] = StealthySteps
												3 [table]:
												Ability4 [table] table: 0x4d63db38d5045625
														1 [function] = NinjaShot
														2 [string] = Shadow Steal
														3 [string] = ShadowSteal
												4 [table]:
												Ability3 [table] table: 0x437a402951e929a5
														1 [function] = NinjaShot
														2 [string] = Ninja Shot
														3 [string] = NinjaShot
										13 [table]:
										NEL Bachira [table] table: 0x614e1c002b48b945
												1 [table]:
												Ability5 [table] table: 0x6dfb16d23df6dd85
														1 [function] = Unknown Name
														2 [string] = GingaMonster
														3 [string] = GingaMonster
												2 [table]:
												Ability4 [table] table: 0xf510316e7d17a5b5
														1 [function] = Move
														2 [string] = GingaDribble
														3 [string] = GingaDribble
												3 [table]:
												Ability1 [table] table: 0x366f0b222bfcc4d5
														1 [function] = Move
														2 [string] = Roulette
														3 [string] = Roulette
												4 [table]:
												Ability2 [table] table: 0x9e6adada5e98f6c5
														1 [function] = Nutmeg
														2 [string] = ButterflyNutmeg
														3 [string] = ButterflyNutmeg
												5 [table]:
												Ability3 [table] table: 0x4454fa0c49e192a5
														1 [function] = move
														2 [string] = Freestyle Bee Shot
														3 [string] = FreestyleBeeshot
										14 [table]:
										Bachira [table] table: 0xf2c323cb9784b815
												1 [table]:
												Ability2 [table] table: 0xda5af5c7b1121a55
														1 [function] = Nutmeg
														2 [string] = Nutmeg
														3 [string] = Nutmeg
												2 [table]:
												Ability1 [table] table: 0xa48265a45ce6dbe5
														1 [function] = Steal
														2 [string] = Steal
														3 [string] = Steal
												3 [table]:
												Ability4 [table] table: 0x686505df8eed1ed5
														1 [function] = MonsterTrance
														2 [string] = Monster Trance
														3 [string] = MonsterTrance
												4 [table]:
												Ability3 [table] table: 0xa1d91fdb92997c95
														1 [function] = InfiniteDribbles
														2 [string] = Infinite Dribbles
														3 [string] = InfiniteDribbles
										15 [table]:
										Don Lorenzo [table] table: 0xed17e0590ca162b5
												1 [table]:
												Ability5 [table] table: 0x9f192502e7993e55
														1 [function] = CounterAttack
														2 [string] = Counter Attack
														3 [string] = ZombieCounterAttack
												2 [table]:
												Ability4 [table] table: 0x70bdd3f856cb6dc5
														1 [function] = YoMichael
														2 [string] = Yo Michael
														3 [string] = YoMichael
												3 [table]:
												Ability6 [table] table: 0x603805c9366df985
														1 [function] = GoldenDefense
														2 [string] = Golden Defense
														3 [string] = GoldenDefense
												4 [table]:
												Ability1 [table] table: 0x7e4497c2410c3045
														1 [function] = ZombieDribble
														2 [string] = Zombie Dribble
														3 [string] = ZombieDribble
												5 [table]:
												Ability2 [table] table: 0x9a9a894bf8c4b055
														1 [function] = ZombieDash
														2 [string] = Zombie Dash
														3 [string] = ZombieDash
												6 [table]:
												Ability3 [table] table: 0x4572e2eab38510a5
														1 [function] = UndeadMode
														2 [string] = Undead Mode
														3 [string] = UndeadMode
										16 [table]:
										King [table] table: 0xa54106efd6c5bda5
												1 [table]:
												Ability2 [table] table: 0x3c3181ed39bfbb75
														1 [function] = KingsDribble
														2 [string] = Kings Dribble
														3 [string] = KingsDribble
												2 [table]:
												Ability1 [table] table: 0x739c0b4ee9621135
														1 [function] = Unknown Name
														2 [string] = Lion Steal
														3 [string] = KingCMove
												3 [table]:
												Ability4 [table] table: 0x0bc5d49e86825975
														1 [function] = Unknown Name
														2 [string] = Feast
														3 [string] = Feast
														4 [boolean] = true
												4 [table]:
												Ability3 [table] table: 0x1ec08d01c0a9f015
														1 [function] = Unknown Name
														2 [string] = TwistedPath
														3 [string] = TwistedPath
														4 [boolean] = true
										17 [table]:
										Chigiri [table] table: 0x24f4141cf88bd585
												1 [table]:
												Ability1 [table] table: 0x5e9773e38ebfb115
														1 [function] = Speedster
														2 [string] = Speedster
														3 [string] = Speedster
												2 [table]:
												Ability2 [table] table: 0x7c482884c41abbc5
														1 [function] = Accelerate
														2 [string] = Accelerate
														3 [string] = Accelerate
												3 [table]:
												Ability3 [table] table: 0x95c4fd1540e05a05
														1 [function] = Blast
														2 [string] = Blast
														3 [string] = Blast
										18 [table]:
										Loki [table] table: 0x4f71b6b0f521c245
												1 [table]:
												Ability5 [table] table: 0x2f223949d4c409e5
														1 [function] = Unknown Name
														2 [string] = Too Slow
														3 [string] = TooSlow
														4 [boolean] = true
												2 [table]:
												Ability4 [table] table: 0xf9e17be41d616a15
														1 [function] = Unknown Name
														2 [string] = Godspeed Distortion
														3 [string] = LokiCMove
														4 [boolean] = true
												3 [table]:
												Ability2 [table] table: 0xa148331b40a19fc5
														1 [function] = Unknown Name
														2 [string] = Godspeed Dribble
														3 [string] = LokiVMove
												4 [table]:
												Ability1 [table] table: 0x1955fdb5ec4dbdd5
														1 [function] = Unknown Name
														2 [string] = Godspeed Distortion
														3 [string] = LokiCMove
												5 [table]:
												Ability6 [table] table: 0xfccbe05dc5572d65
														1 [function] = Unknown Name
														2 [string] = Gear Shift
														3 [string] = GearShift
												6 [table]:
												Ability3 [table] table: 0x962a1c45f8c98ba5
														1 [function] = Unknown Name
														2 [string] = ItsSlow
														3 [string] = ItsSlow
														4 [boolean] = true
										19 [table]:
										Nagi [table] table: 0x2d568ef16d4addf5
												1 [table]:
												Ability1 [table] table: 0x9770f47575f87145
														1 [function] = AirDribble
														2 [string] = Trap
														3 [string] = AirDribble
												2 [table]:
												Ability2 [table] table: 0xa1d248f4d890db95
														1 [function] = AirDash
														2 [string] = Dash
														3 [string] = AirDash
												3 [table]:
												Ability3 [table] table: 0x9e9c69c2f240ad35
														1 [function] = IAmNagi
														2 [string] = I Am Nagi
														3 [string] = IAmNagi
										20 [table]:
										NEL Nagi [table] table: 0x602e0f5130d3a825
												1 [table]:
												Ability5 [table] table: 0x5075e19ac34207d5
														1 [function] = Unknown Name
														2 [string] = Five Stage Volley
														3 [string] = FiveStageVolley
														4 [boolean] = true
												2 [table]:
												Ability4 [table] table: 0x7fb784944a242875
														1 [function] = Unknown Name
														2 [string] = Death Dance
														3 [string] = DeathDance
														4 [boolean] = true
												3 [table]:
												Ability2 [table] table: 0xa7cf23f868cbe315
														1 [function] = Unknown Name
														2 [string] = Trap Dance
														3 [string] = NELNagiVMove
												4 [table]:
												Ability1 [table] table: 0xb2d13aceb0371fb5
														1 [function] = Unknown Name
														2 [string] = Trap
														3 [string] = NELNagiCMove
												5 [table]:
												Ability6 [table] table: 0x4660706c91fea745
														1 [function] = Unknown Name
														2 [string] = Juggling Shot
														3 [string] = JugglingShot
												6 [table]:
												Ability3 [table] table: 0x2133c2c2d8a863b5
														1 [function] = Unknown Name
														2 [string] = Tap Lift
														3 [string] = TapLift
														4 [boolean] = true
										21 [table]:
										Igaguri [table] table: 0xd1a56e654387de25
												1 [table]:
												Ability2 [table] table: 0x773d1406d3a82725
														1 [function] = MonkPass
														2 [string] = Monk Pass
														3 [string] = MonkPass
												2 [table]:
												Ability1 [table] table: 0x75e0e460c25c8d05
														1 [function] = Malicia
														2 [string] = Malicia
														3 [string] = Malicia
												3 [table]:
												Ability4 [table] table: 0x1009f54103808d85
														1 [function] = move
														2 [string] = Dharma Chains
														3 [string] = DharmaChains
												4 [table]:
												Ability3 [table] table: 0x4e393878b67eb565
														1 [function] = move
														2 [string] = Genius Killing Malicia
														3 [string] = GeniusKillingMalicia
										22 [table]:
										Kaiser [table] table: 0xb17ac7f07237f535
												1 [table]:
												Ability5 [table] table: 0x532fe7d1258815e5
														1 [function] = Unknown Name
														2 [string] = Magnus
														3 [string] = Magnus
												2 [table]:
												Ability4 [table] table: 0xe4e33912d6932075
														1 [function] = Unknown Name
														2 [string] = Beinschuss
														3 [string] = Beinschuss
												3 [table]:
												Ability2 [table] table: 0x537e8f0cebc17235
														1 [function] = KaiserDribble
														2 [string] = Emperor's Dribble
														3 [string] = KaiserDribble
												4 [table]:
												Ability1 [table] table: 0x8cb876e61d6df655
														1 [function] = Unknown Name
														2 [string] = Kaiser Impact
														3 [string] = KaiserImpact
												5 [table]:
												Ability6 [table] table: 0x58f5093b4f4f3b75
														1 [function] = Unknown Name
														2 [string] = Royal Volley
														3 [string] = KaiserVolley
												6 [table]:
												Ability3 [table] table: 0x468ce007d46fc935
														1 [function] = KaiserDribble
														2 [string] = Emperor's Dribble
														3 [string] = KaiserDribbleULT
										23 [table]:
										Aiku [table] table: 0xde0e77506e742d95
												1 [table]:
												Ability5 [table] table: 0x8bd977a89b97c795
														1 [function] = Unknown Name
														2 [string] = Basilisk
														3 [string] = Basilisk
												2 [table]:
												Ability4 [table] table: 0x34787b47a04249c5
														1 [function] = NinjaShot
														2 [string] = Cobra
														3 [string] = Cobra
												3 [table]:
												Ability2 [table] table: 0x8efc8eb391128285
														1 [function] = Unknown Name
														2 [string] = Snake Clear
														3 [string] = VMove
												4 [table]:
												Ability1 [table] table: 0xd04949ce57fb4965
														1 [function] = Unknown Name
														2 [string] = Ambush
														3 [string] = CMove
												5 [table]:
												Ability6 [table] table: 0x3ffcf8a39a25a705
														1 [function] = Unknown Name
														2 [string] = Sixth Sense
														3 [string] = SixthSense
												6 [table]:
												Ability3 [table] table: 0x1eba682d79243da5
														1 [function] = Unknown Name
														2 [string] = Viper
														3 [string] = Viper
										24 [table]:
										NEL Rin [table] table: 0x605c349cc7abd075
												1 [table]:
												Ability5 [table] table: 0x4eda873de87f1b95
														1 [function] = Unknown Name
														2 [string] = DestructiveCrashShot
														3 [string] = DestructiveCrashShot
												2 [table]:
												Ability4 [table] table: 0xf97b92a12c3c2dc5
														1 [function] = ANEWTOY
														2 [string] = A New Toy
														3 [string] = A New Toy
												3 [table]:
												Ability2 [table] table: 0x95d83610ae3fff35
														1 [function] = Unknown Name
														2 [string] = Occlusion Break
														3 [string] = OcclusionBreak
												4 [table]:
												Ability1 [table] table: 0x32796ad91fc7b3c5
														1 [function] = Move
														2 [string] = Destroyers Domain
														3 [string] = DestroyersDomain
												5 [table]:
												Ability6 [table] table: 0xad416cb56d1f0945
														1 [function] = CurveShot
														2 [string] = ANNIHILATE
														3 [string] = ANNIHILATE
												6 [table]:
												Ability3 [table] table: 0x7398ec37a0e17435
														1 [function] = NinjaShot
														2 [string] = Die
														3 [string] = Die
										25 [table]:
										Karasu [table] table: 0xcc69be9339360ca5
												1 [table]:
												Ability1 [table] table: 0x7a25e5daaa38a035
														1 [function] = RavenDribble
														2 [string] = Raven Dribble
														3 [string] = RavenDribble
												2 [table]:
												Ability2 [table] table: 0x3f4c826e8d1a9645
														1 [function] = CrowTheft
														2 [string] = Crow Theft
														3 [string] = CrowTheft
												3 [table]:
												Ability3 [table] table: 0x3e4f59e33b8c5635
														1 [function] = CrowClearance
														2 [string] = Crow Clearance
														3 [string] = CrowClearance
										26 [table]:
										Kunigami [table] table: 0x0e6118c12905e5a5
												1 [table]:
												Ability2 [table] table: 0xd64a55b2f5102255
														1 [function] = BodyBlock
														2 [string] = Body Block
														3 [string] = BodyBlock
												2 [table]:
												Ability1 [table] table: 0xc4ace72719e04935
														1 [function] = PowerShot
														2 [string] = Power Shot
														3 [string] = PowerShot
												3 [table]:
												Ability4 [table] table: 0x08277bd07a0973c5
														1 [function] = Joker
														2 [string] = Joker
														3 [string] = Joker
												4 [table]:
												Ability3 [table] table: 0x6bc8424c364197f5
														1 [function] = FallenHero
														2 [string] = Fallen Hero
														3 [string] = FallenHero
								17 [string] = Offensive Mode
								18 [function] = TryActivateAbility
								19 [function] = GetAbilityCooldowns
								20 [function] = CanActivateAbility
								21 [table] (Recursive table detected)
								22 [table] (Recursive table detected)
								23 [function] = GetAbilityDisplayFromNum
								24 [boolean] = false
								25 [function] = Abilities
								26 [number] = 0
								27 [boolean] = false
								28 [table] (Recursive table detected)
								29 [function] = GetCurrentStyle
								30 [number] = 1757113698.7589996
								31 [number] = 1757113698.7589993
								32 [function] = GetAbilityNameFromNum
								33 [function] = Debug
								34 [function] = AutoCharacterRotateToCamera
								35 [table] (Recursive table detected)
								36 [number] = 1757113698.7590017
								37 [table] (Recursive table detected)
								38 [number] = 1757113698.7590017
								39 [table]:
								ABC [table] table: 0xf74dd7aab1333955
										1 [table]:
										_objects [table] table: 0x3981ec8db234dd25
										2 [boolean] = false
								40 [string] = AbilityController
								41 [function] = Unknown Name
								42 [table]:
								ChemicalReactionController [table] table: 0xaaa5c6bca8238f35
										1 [function] = KnitStart
										2 [table]:
										ChemicalReactions [table] table: 0x68a540bda8c01685
												1 [table]:
												Loki-Charles-CR [table] table: 0xc074710157156055
														1 [function] = create_args
														2 [number] = 60
														3 [function] = check
														4 [string] = LokiXCharles
														5 [string] = Loki
														6 [string] = Chemical Reaction with Loki is ready!
												2 [table]:
												Hiori-Isagi-CR [table] table: 0x638bd53b574dabb5
														1 [function] = create_args
														2 [number] = 60
														3 [function] = check
														4 [string] = TheIdealGoalCR
														5 [string] = NEL Isagi
														6 [string] = Chemical Reaction with NEL Isagi is ready!
												3 [table]:
												NEL Reo-NEL Nagi-CR [table] table: 0xd6d4d9be3d8f55e5
														1 [function] = create_args
														2 [number] = 60
														3 [function] = check
														4 [string] = TrapCR
														5 [string] = NEL Nagi
														6 [string] = Chemical Reaction with NEL Reo is ready!
												4 [table]:
												NEL Reo-McNagi-CR [table] table: 0x6cb2cf3cb578e975
														1 [function] = create_args
														2 [number] = 60
														3 [function] = check
														4 [string] = TrapCR
														5 [string] = McNagi Fryshiro
														6 [string] = Chemical Reaction with NEL Reo is ready!
												5 [table]:
												Sae-Shidou-CR [table] table: 0x3252b421acf684c5
														1 [function] = create_args
														2 [number] = 60
														3 [function] = check
														4 [string] = DragonDriveCR
														5 [string] = Shidou
														6 [string] = Chemical Reaction with Sae is ready!
												6 [table]:
												NEL Isagi-Kaiser-CR [table] table: 0x1ee843b83a63be15
														1 [function] = create_args
														2 [number] = 60
														3 [function] = check
														4 [string] = KaiserCRShot
														5 [string] = Kaiser
														6 [string] = Chemical Reaction with Isagi is ready!
										3 [string] = ChemicalReactionController
								43 [table] (Recursive table detected)
								44 [function] = GetCooldownSpeed
								45 [function] = Reset
						13 [table]:
						BaseTrove [table] table: 0x317a01feedebbef5
								1 [table]:
								_objects [table] table: 0x875b037fe57f1645
										1 [table]:
										1 [table] table: 0x0a9d3f7071226065
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										2 [table]:
										2 [table] table: 0xf33c5cef538996d5
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
										3 [table]:
										3 [table] table: 0x2c1ffc428a774d85
												1 [RBXScriptConnection] = Connection
												2 [string] = Disconnect
								2 [boolean] = false
				30 [string] = BallController
				31 [function] = DragBall
				32 [boolean] = false
				33 [table] (Recursive table detected)
				34 [Instance] = Beam
				35 [function] = Predict
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [number] = 1757113698.7306278
		5 [Instance] = ReplicatedStorage
		6 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = KeyCode
		15 [string] = Enum
		16 [string] = LeftShift
		17 [EnumItem] = Enum.KeyCode.LeftShift
		18 [string] = ButtonL2
		19 [EnumItem] = Enum.KeyCode.ButtonL2
		20 [string] = Settings
		21 [string] = SettingsData
		22 [string] = RunLock
		23 [string] = Running
		24 [string] = Values
		25 [string] = Goalie
		26 [string] = IsInPenalty
		27 [string] = UserInputType
		28 [string] = MouseButton1
		29 [EnumItem] = Enum.UserInputType.MouseButton1
		30 [string] = ButtonR2
		31 [EnumItem] = Enum.KeyCode.ButtonR2
		32 [string] = Shoot
		33 [string] = MouseButton2
		34 [EnumItem] = Enum.UserInputType.MouseButton2
		35 [string] = ButtonL1
		36 [EnumItem] = Enum.KeyCode.ButtonL1
		37 [string] = Pass
		38 [Enum] = KeyCode
		39 [string] = Keybinds
		40 [string] = PC
		41 [string] = Slide
		42 [string] = Console
		43 [string] = Dribble
		44 [string] = Request
		45 [string] = tick
		47 [number] = 3
		48 [string] = Effects
		49 [string] = Vfx
		50 [string] = Char
		52 [string] = Fire
		53 [string] = Animations
		54 [string] = StopAnims
		55 [string] = Movement
		56 [string] = AnimationPriority
		57 [string] = Action2
		58 [EnumItem] = Enum.AnimationPriority.Action2
		59 [string] = Priority
		60 [string] = Play
		61 [string] = RequestCR
		62 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = UserInputType
		2 [string] = Enum
		3 [string] = MouseButton1
		4 [EnumItem] = Enum.UserInputType.MouseButton1
		5 [string] = KeyCode
		6 [string] = ButtonR2
		7 [EnumItem] = Enum.KeyCode.ButtonR2
		8 [string] = HoldingShoot
		9 [string] = LeftShift
		10 [EnumItem] = Enum.KeyCode.LeftShift
		11 [string] = ButtonL2
		12 [EnumItem] = Enum.KeyCode.ButtonL2
		13 [string] = Settings
		14 [string] = SettingsData
		15 [string] = RunLock
		16 [string] = StatesController
		17 [string] = States
		18 [string] = Running

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = HoldingShoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = HoldingShoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = Predict

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = Football
		2 [boolean] = false
		3 [table]:
		3 [table] table: 0x6af063bed5d8eb15
				1 [function] = Cast
				2 [function] = CastWithWhitelist
		4 [Instance] = ReplicatedStorage
		5 [table]:
		5 [table] table: 0xab9d1e051d8ac445
				1 [function] = SpawnSoundId
				2 [function] = SpawnSound
		6 [number] = 0
		7 [table]:
		7 [table] table: 0x1e7210987736ceb5
				1 [function] = Emit
				2 [function] = Enable
		8 [Instance] = Debris
		9 [boolean] = false

Function Constants: Unknown Name
		1 [string] = OnPlayer
		2 [string] = Value
		3 [string] = AssemblyLinearVelocity
		4 [string] = Magnitude
		5 [string] = Name
		6 [string] = Hitbox
		7 [string] = IsDescendantOf
		8 [string] = Parent
		9 [string] = Humanoid
		10 [string] = FindFirstChild
		11 [string] = Field
		12 [string] = Y
		13 [string] = math
		14 [string] = abs
		16 [string] = Cast
		17 [string] = Position
		18 [Vector3] = 0, -15, 0
		19 [string] = workspace
		20 [Instance] = Workspace
		21 [string] = Debris
		22 [string] = task
		23 [string] = delay
		25 [number] = 0.5
		26 [string] = Assets
		27 [string] = Vfx
		28 [string] = FloorHit
		29 [string] = Clone
		30 [Vector3] = 0, 1, 0
		31 [string] = SpawnSound
		32 [string] = GrassLand
		33 [number] = 1
		34 [number] = 0.2
		35 [string] = PlaybackSpeed
		36 [string] = Emit
		37 [string] = AddItem
		38 [string] = WallBounce
		39 [string] = HasTag
		40 [number] = 15
		41 [string] = Unit
		42 [string] = BarrierHit
		43 [string] = CFrame
		44 [string] = new
		46 [string] = Normal
		47 [string] = BallsHitTheWall
		48 [number] = 0.65
		49 [string] = RollOffMaxDistance
		50 [string] = Enum
		51 [string] = RollOffMode
		52 [string] = InverseTapered
		53 [EnumItem] = Enum.RollOffMode.InverseTapered

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = Players
		2 [Instance] = Football
		3 [table]:
		3 [table] table: 0x22af771a6a202055
				1 [table]:
				Isagi [table] table: 0x742cbdd86b3e8425
						1 [Color3] = 0, 0.615686, 1
						2 [string] = Rare
						3 [string] = Isagi
						4 [string] = A strategic playmaker, reads the game well and excels at positioning and teamwork.
				2 [table]:
				Shidou [table] table: 0x6e53a3660acee0b5
						1 [Color3] = 0.937255, 0.0431373, 1
						2 [string] = Mythic
						3 [string] = Shidou
						4 [string] = A wild striker thriving on chaos and unpredictability.
				3 [table]:
				Charles [table] table: 0xd9b4e1f259ab12a5
						1 [Color3] = 1, 0.917647, 0.505882
						2 [string] = World Class
						3 [string] = Charles
						4 [string] = And then I said "👅"
				4 [table]:
				Kurona [table] table: 0x060d85ea2e19e0a5
						1 [Color3] = 0.752941, 0.129412, 1
						2 [string] = Epic
						3 [string] = Kurona
						4 [string] = All he's missing is a fin!
				5 [table]:
				Igaguri [table] table: 0x9bae9e876a9bb295
						1 [Color3] = 1, 1, 0.0235294
						2 [string] = Rare
						3 [string] = Igaguri
						4 [string] = Expert at the reverse foul technique
				6 [table]:
				Yukimiya [table] table: 0x6c8baac8d36bfdc5
						1 [Color3] = 1, 0.807843, 0.113725
						2 [string] = Mythic
						3 [string] = Yukimiya
						4 [string] = Street ball legend, ultimate dribbler.
				7 [table]:
				Hiori [table] table: 0x186e94e478c7db05
						1 [Color3] = 0.321569, 0.964706, 1
						2 [string] = Rare
						3 [string] = Hiori
						4 [string] = Perhaps the best passer in soccer history 🥶🥶🥶 YEEHAWWW
				8 [table]:
				Sae [table] table: 0xcc22707b9f228dd5
						1 [Color3] = 1, 0.0745098, 0.984314
						2 [string] = World Class
						3 [string] = Sae
						4 [string] = Genius playmaker with unrivaled skills, precise passes, and unstoppable shots.
				9 [table]:
				Gagamaru [table] table: 0x73d1820b971544d5
						1 [Color3] = 1, 0.745098, 0.152941
						2 [string] = Epic
						3 [string] = Gagamaru
						4 [string] = Beastly GOALKEEPER with sharp instincts and unmatched reflexes.
				10 [table]:
				NEL Isagi [table] table: 0xb069f6700d6c3d35
						1 [Color3] = 0.0470588, 1, 0.0784314
						2 [string] = World Class
						3 [string] = NEL Isagi
						4 [string] = Truly, an out of this world player.
				11 [table]:
				McNagi Fryshiro [table] table: 0x220e6dd9d55681d5
						1 [Color3] = 1, 0.968627, 0
						2 [string] = Limited
						3 [string] = McNagi Fryshiro
						4 [string] = After succumbing to satisfaction, he takes up a new pursuit
				12 [table]:
				Otoya [table] table: 0x6a8a8aeeb0a49f85
						1 [Color3] = 0.0901961, 1, 0.164706
						2 [string] = Legendary
						3 [string] = Otoya
						4 [string] = An actual ninja on the field.
				13 [table]:
				NEL Bachira [table] table: 0x59e4de790f3952f5
						1 [Color3] = 1, 0.788235, 0.0235294
						2 [string] = Mythic
						3 [string] = NEL Bachira
						4 [string] = Floats like a butterfly, stings like a bee, an unstoppable dribbler, who can solo entire teams.
				14 [table]:
				Bachira [table] table: 0xf7ed8445157095f5
						1 [Color3] = 1, 0.917647, 0
						2 [string] = Epic
						3 [string] = Bachira
						4 [string] = A Energetic dribbler, great a unpredictable plays and ankles breakers. 
				15 [table]:
				Loki [table] table: 0x9b982c6c15b6ba35
						1 [Color3] = 0.6, 0.2, 1
						2 [string] = Master
						3 [string] = Loki
						4 [string] = Ummm, is this okay? From this distance you have nothing but weak spots.
				16 [table]:
				King [table] table: 0x9033e404cb744d25
						1 [Color3] = 1, 0, 0
						2 [string] = Mythic
						3 [string] = King
						4 [string] = The King Has Returned to Reclaim his Crown.
				17 [table]:
				Chigiri [table] table: 0xce60f346782b6bb5
						1 [Color3] = 0.980392, 0.376471, 1
						2 [string] = Rare
						3 [string] = Chigiri
						4 [string] = A speed-focused character, mastering swift dashes, enhanced sprinting, and boundless stamina.
				18 [table]:
				NEL Reo [table] table: 0x9be156fac60c3245
						1 [Color3] = 0.666667, 0.0901961, 1
						2 [string] = Mythic
						3 [string] = NEL Reo
						4 [string] = The Chameleon Master of All Trades
				19 [table]:
				Nagi [table] table: 0x0b42f26fb180f715
						1 [Color3] = 1, 1, 1
						2 [string] = Legendary
						3 [string] = Nagi
						4 [string] = Natural Talent, highly skilled at trapping.
Would you like fries with that?
				20 [table]:
				NEL Nagi [table] table: 0x2816e27088d872d5
						1 [Color3] = 1, 1, 1
						2 [string] = World Class
						3 [string] = NEL Nagi
						4 [string] = Lazy. Genius. Prodigy. What else must be said?
				21 [table]:
				Kaiser [table] table: 0xc375c8fec5ffe085
						1 [string] = Kaiser
						2 [table]:
						Skins [table] table: 0x0db73bf77e638465
								1 [table]:
								Easter [table] table: 0xbb94797507071bf5
										1 [Instance] = KaiserEasterSkin
										2 [string] = Limited
										3 [string] = Easter Kaiser
						3 [string] = World Class
						4 [Color3] = 0.129412, 0.505882, 1
						5 [string] = A fitting title for one heck of a player.
				22 [table]:
				Don Lorenzo [table] table: 0x6625bdf2c4c769a5
						1 [Color3] = 0.427451, 0.176471, 0.729412
						2 [string] = World Class
						3 [string] = Don Lorenzo
						4 [string] = I found this guy on the street and he said "Gimme.. lucky spins.."
				23 [table]:
				Aiku [table] table: 0x852aa567f9942b95
						1 [Color3] = 0.0784314, 1, 0.156863
						2 [string] = Mythic
						3 [string] = Aiku
						4 [string] =  An impenetrable wall, who stops any goals from being scored while on the field
				24 [table]:
				NEL Rin [table] table: 0x79f72cf5486bcb45
						1 [Color3] = 0.321569, 0.964706, 1
						2 [string] = World Class
						3 [string] = NEL Rin
						4 [string] = Tactical striker with deadly curves, precise shots, and unmatched control.
				25 [table]:
				Karasu [table] table: 0xf900bf8d31a22ee5
						1 [Color3] = 0.541176, 0.168627, 1
						2 [string] = Legendary
						3 [string] = Karasu
						4 [string] = Fearless defender and striker able to appear anywhere at anytime
				26 [table]:
				Kunigami [table] table: 0x2f28eb84c849cb65
						1 [Color3] = 1, 0.380392, 0.172549
						2 [string] = Mythic
						3 [string] = Kunigami
						4 [string] = The fallen hero that's back to get his revenge

Function Constants: Unknown Name
		1 [string] = GetPlayerFromCharacter
		2 [string] = Trail
		3 [string] = ColorSequence
		4 [string] = new
		6 [string] = PlayerStats
		7 [string] = Style
		8 [string] = Value
		9 [string] = BallColor
		10 [string] = Color

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Left

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Right

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = RequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Request

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Emote

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Dive

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shiftlock

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Dribble

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Flow

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Slide

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shoot

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Run

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Awaken

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Emote

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shiftlock

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Dribble

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Pass

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Bicycle

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Run

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shoot

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Flow

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Awaken

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = NoShoot
		14 [string] = Name
		15 [string] = Shoot

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [number] = 1
		4 [number] = 1

Function Constants: Unknown Name
		1 [string] = GetCurrentStyle
		2 [string] = NEL Reo
		3 [string] = Character
		4 [string] = StrikeMode
		5 [string] = GetAttribute
		6 [string] = PlayerStats
		7 [string] = InFlow
		8 [string] = Value
		9 [string] = Flow
		10 [string] = Awakened Genius
		11 [string] = Soul Harvester
		12 [string] = Bee Freestyle

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = Enum
		2 [string] = HumanoidStateType
		3 [string] = Jumping
		4 [EnumItem] = Enum.HumanoidStateType.Jumping
		5 [string] = Flick

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = JapanFALOL2
		2 [Instance] = JapanFALOL2
		3 [Instance] = HumanoidRootPart
		4 [Instance] = Humanoid
		5 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = BaseTrove
		2 [string] = Destroy

====================================================================================================

Function Dump: KnitStart

Function Upvalues: KnitStart
		1 [table]:
		1 [table] table: 0xcf05c8d519b11af5
				1 [function] = AddControllers
				2 [function] = GetService
				3 [function] = GetController
				4 [Instance] = JapanFALOL2
				5 [function] = OnStart
				6 [function] = AddControllersDeep
				7 [function] = Start
				8 [function] = GetControllers
				9 [Instance] = Packages
				10 [function] = CreateController
		2 [function] = getActiveFlowStats
		3 [Instance] = JapanFALOL2
		4 [Instance] = Players
		5 [table] (Recursive table detected)
		6 [Instance] = HumanoidRootPart
		7 [Instance] = JapanFALOL2
		8 [table]:
		8 [table] table: 0xb5469dc3c3514935
				1 [function] = new
		9 [Instance] = Run Service
		10 [table] (Recursive table detected)
		11 [boolean] = false
		12 [boolean] = false
		13 [Instance] = Camera
		14 [Instance] = Humanoid
		15 [Instance] = ReplicatedStorage
		16 [table]:
		16 [table] table: 0x47602857ee478d05
				1 [function] = FindCurveDirection
				2 [function] = createAfterImage
				3 [function] = FastDashTo
		17 [number] = 50
		18 [table] (Recursive table detected)
		19 [Instance] = ReplicatedStorage
		20 [table] (Recursive table detected)
		21 [table] (Recursive table detected)
		22 [table] (Recursive table detected)
		23 [Instance] = Debris
		24 [number] = 1
		25 [number] = 1
		26 [Instance] = GuiService
		27 [table]:
		27 [table] table: 0xe73dbbb639f7eb15
				1 [function] = GetInitialData
				2 [function] = formatLimited
				3 [function] = Highlight
				4 [function] = UnhideCharacter
				5 [function] = StoreInitialData
				6 [function] = Weld
				7 [function] = Aura
				8 [function] = HasItem
				9 [function] = FixAlignment
				10 [function] = _getInitialDataProperties
				11 [function] = GetRandomPositionInVolume
				12 [function] = HideCharacter
				13 [function] = formatCompleteTime
				14 [function] = CreateClone
				15 [function] = WeldOffset
				16 [function] = formatNumberWithCommas
				17 [function] = ShouldGive
				18 [function] = formatTime
				19 [function] = TableLength
				20 [function] = Lerp

Function Constants: KnitStart
		1 [string] = GetService
		2 [string] = BallService
		3 [string] = require
		5 [string] = script
		7 [string] = Parent
		8 [string] = AnimationController
		9 [string] = Animations
		10 [string] = StatesController
		11 [string] = GetController
		12 [string] = AbilityController
		13 [string] = StaminaService
		14 [string] = Running
		15 [string] = Closest
		16 [string] = Instance
		17 [string] = new
		19 [string] = Attachment
		20 [string] = Attach0
		21 [string] = workspace
		22 [Instance] = Workspace
		23 [string] = Terrain
		24 [string] = Attach1
		25 [string] = Beam
		26 [string] = Attachment0
		27 [string] = Attachment1
		28 [string] = BaseTrove
		29 [string] = Pass
		30 [string] = Connect
		31 [string] = Shoot
		32 [string] = Prediction
		34 [string] = Football
		35 [string] = Value
		36 [string] = Changed
		37 [string] = PlayerStats
		38 [string] = InFlow
		39 [string] = GetPropertyChangedSignal
		40 [string] = tick
		42 [string] = NewTrove
		43 [string] = Heartbeat
		47 [string] = CheckInput

====================================================================================================

Function Dump: CheckInput

Function Upvalues: CheckInput
		1 [table] (Recursive table detected)
		2 [Instance] = UserInputService
		3 [Instance] = JapanFALOL2
		4 [Instance] = JapanFALOL2
		5 [Instance] = ReplicatedStorage
		6 [function] = canRequestCR

Function Constants: CheckInput
		1 [string] = tick
		3 [string] = GetController
		4 [string] = AwakeningController
		5 [string] = Awakening
		6 [string] = GetService
		7 [string] = EffectsService
		8 [string] = Effects
		9 [string] = Settings
		10 [string] = CameraController
		11 [string] = Camera
		12 [string] = TouchEnabled
		13 [string] = PlayerGui
		14 [string] = Mobile
		15 [string] = WaitForChild
		16 [string] = GetDescendants
		17 [string] = pairs
		19 [string] = ImageButton
		20 [string] = IsA
		21 [string] = BaseTrove
		22 [string] = MouseButton1Down
		23 [string] = Connect
		24 [string] = MouseButton1Click
		25 [string] = Name
		26 [string] = Shoot
		27 [string] = MouseButton1Up
		28 [string] = InputBegan
		29 [string] = InputEnded

====================================================================================================

Function Dump: Dribble

Function Upvalues: Dribble
		1 [Instance] = JapanFALOL2
		2 [table] (Recursive table detected)
		3 [number] = 1757113698.723119
		4 [Instance] = JapanFALOL2
		5 [function] = getActiveFlowStats
		6 [number] = 1

Function Constants: Dribble
		1 [string] = Values
		2 [string] = Sliding
		3 [string] = Value
		4 [string] = Animations
		5 [string] = Movement
		6 [string] = Slide
		7 [string] = IsPlaying
		8 [string] = Dribbling
		9 [string] = Dribbles
		10 [string] = GetCurrentStyle
		11 [string] = HasBall
		12 [string] = tick
		14 [string] = PlayerStats
		15 [string] = Stamina
		16 [string] = SlideTrove
		17 [string] = Destroy
		18 [string] = StatesController
		19 [string] = States
		20 [string] = TimeSpentRunning
		21 [string] = StaminaService
		22 [string] = DecreaseStamina
		23 [string] = Fire
		24 [string] = StopAnims
		25 [string] = Enum
		26 [string] = AnimationPriority
		27 [string] = Action3
		28 [EnumItem] = Enum.AnimationPriority.Action3
		29 [string] = Priority
		30 [string] = Play
		31 [string] = Ball
		32 [string] = Dribble
		33 [string] = Bachira
		34 [string] = InAwakening
		35 [string] = InFlow
		36 [string] = Flow
		37 [string] = Monster
		38 [string] = Bee Freestyle
		39 [string] = Master Of All Trades
		40 [number] = 1.25
		41 [string] = NEL Reo
		42 [string] = AbilityController
		43 [string] = Mode
		44 [string] = Offensive Mode
		45 [number] = 1.15
		46 [number] = 1
		47 [string] = Character
		48 [string] = StrikeMode
		49 [string] = GetAttribute
		50 [string] = Stats
		51 [string] = ExtraDribbles
		52 [string] = Awakened Genius
		53 [string] = Soul Harvester
		54 [number] = 3
		55 [string] = BallService
		56 [string] = string
		57 [string] = gsub
		59 [string] = game
		60 [Instance] = Ugc
		61 [string] = JobId
		62 [string] = -
		63 [string] = 
		64 [string] = tostring

====================================================================================================

Function Dump: Pass

Function Upvalues: Pass
		1 [Instance] = HumanoidRootPart
		2 [number] = 1757113768.1592174
		3 [Instance] = JapanFALOL2
		4 [table]:
		4 [table] table: 0x4b2907f51b15ff55
				1 [string] = Main
				2 [string] = Custom
				3 [table]:
				sub [table] table: 0xb544faf7bb0831b5
						1 [number] = 18668065416
						2 [number] = 92517437168342
						3 [number] = 99999183305180
						4 [number] = 77915441816737
						5 [number] = 124044706645343
						6 [number] = 124087144919678
						7 [number] = 115110570222234
				4 [table]:
				config [table] table: 0x38e17cfb6b794c75
						1 [boolean] = false
						2 [table]:
						PositionChoices [table] table: 0x86e4017b5bca27c5
								1 [string] = CFR
								2 [string] = CFL
								3 [string] = LW
								4 [string] = LM
								5 [string] = RW
								6 [string] = RM
								7 [string] = CM
								8 [string] = GK
						3 [table]:
						LobbyNPCs [table] table: 0x6a26077a6c84f8e5
								1 [boolean] = false
								2 [boolean] = false
								3 [boolean] = true
						4 [boolean] = false
						5 [boolean] = false
		5 [table] (Recursive table detected)
		6 [Instance] = Run Service

Function Constants: Pass
		1 [string] = AssemblyRootPart
		2 [string] = tick
		4 [string] = ShootTrove
		5 [string] = Destroy
		6 [string] = Closest
		7 [string] = Values
		8 [string] = HasBall
		9 [string] = Value
		10 [string] = config
		11 [string] = PassingDisabled
		12 [number] = 1
		13 [string] = StatesController
		14 [string] = States
		15 [string] = TimeSpentRunning
		16 [string] = Animations
		17 [string] = StopAnims
		18 [string] = Shots
		19 [string] = Pass
		20 [string] = Shoot
		21 [string] = Enum
		22 [string] = AnimationPriority
		23 [string] = Action4
		24 [EnumItem] = Enum.AnimationPriority.Action4
		25 [string] = Priority
		26 [string] = Play
		27 [string] = time
		29 [string] = new
		30 [string] = Heartbeat
		31 [string] = Connect
		32 [string] = Add

====================================================================================================

Function Dump: destroyMainBallSkin

Function Upvalues: destroyMainBallSkin
		1 [Instance] = ReplicatedStorage

Function Constants: destroyMainBallSkin
		1 [string] = Football
		2 [string] = Value
		3 [string] = BallAnims
		4 [string] = BALL
		5 [string] = Parent
		6 [string] = BallSkinBall
		7 [string] = FindFirstChild
		8 [string] = Destroy
		9 [string] = Highlight
		10 [string] = Enabled

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = JapanFALOL2

Function Constants: Unknown Name
		1 [string] = Character
		2 [string] = Values
		3 [string] = Goalie
		4 [string] = Value
		5 [string] = IsInPenalty
		6 [string] = PlayerGui
		7 [string] = Mobile
		8 [string] = NoBall
		9 [string] = Dive
		10 [string] = Visible
		11 [string] = InGameUI
		12 [string] = KeybindsPC
		13 [string] = KeybindsConsole

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = JapanFALOL2

Function Constants: Unknown Name
		1 [string] = Character
		2 [string] = Values
		3 [string] = Goalie
		4 [string] = Value
		5 [string] = IsInPenalty
		6 [string] = PlayerGui
		7 [string] = Mobile
		8 [string] = NoBall
		9 [string] = Dive
		10 [string] = Visible
		11 [string] = InGameUI
		12 [string] = KeybindsPC
		13 [string] = KeybindsConsole

====================================================================================================

Function Dump: Predict

Function Upvalues: Predict
		1 [Instance] = JapanFALOL2
		2 [Instance] = ReplicatedStorage
		3 [function] = findLandingPosition
		4 [Instance] = Run Service
		5 [Instance] = ReplicatedStorage

Function Constants: Predict
		1 [string] = PredictOBJ
		2 [string] = Destroy
		3 [string] = PredictionTrove
		4 [string] = Disconnect
		5 [string] = Values
		6 [string] = Goalie
		7 [string] = Value
		8 [string] = IsInPenalty
		9 [string] = Assets
		10 [string] = Misc
		11 [string] = GkPredict
		12 [string] = Clone
		13 [string] = workspace
		14 [Instance] = Workspace
		15 [string] = Parent
		16 [string] = X
		17 [string] = Z
		18 [string] = Vector3
		19 [string] = new
		21 [string] = Position
		22 [number] = 1
		23 [string] = tick
		25 [string] = Heartbeat
		26 [string] = Connect
		27 [string] = PredictionVFX
		28 [string] = PrimaryPart
		29 [Vector3] = 0, 8, 0
		30 [string] = Football
		31 [string] = Beam
		32 [string] = FindFirstChild
		33 [string] = Attachment1
		34 [string] = Enabled

====================================================================================================

Function Dump: Flick

Function Upvalues: Flick
		1 [Instance] = JapanFALOL2
		2 [boolean] = false
		3 [number] = 1757113698.723119

Function Constants: Flick
		1 [string] = Character
		2 [string] = Values
		3 [string] = HasBall
		4 [string] = Value
		5 [string] = PlayerStats
		6 [string] = Stamina
		7 [string] = tick
		9 [string] = StatesController
		10 [string] = States
		11 [string] = TimeSpentRunning
		12 [string] = Animations
		13 [string] = StopAnims
		14 [string] = Flicks
		15 [string] = Flick
		16 [string] = Enum
		17 [string] = AnimationPriority
		18 [string] = Action3
		19 [EnumItem] = Enum.AnimationPriority.Action3
		20 [string] = Priority
		21 [string] = Play
		22 [string] = Ball
		23 [string] = BallService
		24 [string] = Shoot
		25 [string] = Fire
		26 [string] = task
		27 [string] = delay
		29 [number] = 0.35

====================================================================================================

Function Dump: LocalDragBall

Function Upvalues: LocalDragBall
		1 [table] (Recursive table detected)
		2 [Instance] = Run Service
		3 [Instance] = ReplicatedStorage

Function Constants: LocalDragBall
		1 [string] = LocalDrag
		2 [string] = Destroy
		3 [string] = new
		4 [number] = 0.999
		5 [string] = Heartbeat
		6 [string] = Connect

====================================================================================================

Function Dump: BallFollowPlayer

Function Upvalues: BallFollowPlayer
		1 [Instance] = JapanFALOL2
		2 [table] (Recursive table detected)
		3 [Instance] = Run Service

Function Constants: BallFollowPlayer
		1 [string] = Character
		2 [string] = HumanoidRootPart
		3 [string] = AssemblyLinearVelocity
		4 [Vector3] = 1, 0, 1
		5 [string] = Position
		6 [string] = Unit
		7 [Vector3] = 0, 0.5, 0
		8 [number] = 1.5
		9 [string] = Magnitude
		10 [string] = math
		11 [string] = clamp
		13 [string] = time
		15 [string] = Heartbeat
		16 [string] = Connect
		17 [string] = BallTargeting

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [function] = updateMainBallSkin
		2 [Instance] = Players
		3 [Instance] = ReplicatedStorage

Function Constants: Unknown Name
		1 [string] = GetPlayers
		2 [string] = pairs
		4 [string] = Character
		5 [string] = PlrFootball
		6 [string] = FindFirstChild
		7 [string] = Values
		8 [string] = HasBall
		9 [string] = Value
		10 [string] = BallSkinBall
		11 [string] = Destroy
		12 [string] = EquippedBallSkin
		13 [string] = GetAttribute
		14 [string] = 
		15 [string] = Assets
		16 [string] = Customization
		17 [string] = Misc
		18 [string] = Clone
		19 [string] = Parent
		20 [string] = BallAnims
		21 [string] = BALL
		22 [string] = CFrame
		23 [string] = Instance
		24 [string] = new
		26 [string] = WeldConstraint
		27 [string] = Part0
		28 [string] = Part1
		29 [string] = BallSkins

====================================================================================================

Function Dump: updateMainBallSkin

Function Upvalues: updateMainBallSkin
		1 [Instance] = ReplicatedStorage
		2 [Instance] = ReplicatedStorage
		3 [Instance] = Players

Function Constants: updateMainBallSkin
		1 [string] = Football
		2 [string] = Value
		3 [string] = BallAnims
		4 [string] = BALL
		5 [string] = Parent
		6 [string] = Char
		7 [string] = BallSkinBall
		8 [string] = FindFirstChild
		9 [string] = Destroy
		10 [string] = Highlight
		11 [string] = Enabled
		12 [string] = Values
		13 [string] = HasBall
		14 [string] = GetPlayerFromCharacter
		15 [string] = EquippedBallSkin
		16 [string] = GetAttribute
		17 [string] = 
		18 [string] = Assets
		19 [string] = Customization
		20 [string] = Misc
		21 [string] = Clone
		22 [string] = CFrame
		23 [string] = Instance
		24 [string] = new
		26 [string] = WeldConstraint
		27 [string] = Part0
		28 [string] = Part1
		29 [string] = BallSkins

====================================================================================================

Function Dump: ResetChecks

Function Upvalues: ResetChecks
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = UserInputService
		4 [Instance] = Humanoid

Function Constants: ResetChecks
		1 [string] = NewTrove
		2 [string] = Destroy
		3 [string] = new
		4 [string] = Character
		5 [string] = Values
		6 [string] = IsInPenalty
		7 [string] = WaitForChild
		8 [string] = Value
		9 [string] = GetPropertyChangedSignal
		11 [string] = Connect
		12 [string] = Goalie
		14 [string] = PlayerGui
		15 [string] = Mobile
		16 [string] = NoBall
		17 [string] = Dive
		18 [string] = Visible
		19 [string] = InGameUI
		20 [string] = KeybindsPC
		21 [string] = KeybindsConsole
		22 [string] = HasBall
		24 [string] = StateChanged

====================================================================================================

Function Dump: Bicycle

Function Upvalues: Bicycle
		1 [number] = 1757113698.7231193
		2 [Instance] = JapanFALOL2
		3 [boolean] = false
		4 [Instance] = JapanFALOL2

Function Constants: Bicycle
		1 [string] = tick
		3 [string] = PlayerStats
		4 [string] = Stamina
		5 [string] = Value
		6 [number] = 5
		7 [string] = StatesController
		8 [string] = States
		9 [string] = TimeSpentRunning
		10 [string] = BallService
		11 [string] = Dribble
		12 [string] = string
		13 [string] = gsub
		15 [string] = game
		16 [Instance] = Ugc
		17 [string] = JobId
		18 [string] = -
		19 [string] = 
		20 [string] = tostring
		22 [string] = Fire
		23 [string] = Bicycle
		24 [string] = Animations
		25 [string] = StopAnims
		26 [string] = Bicycles
		27 [string] = Enum
		28 [string] = AnimationPriority
		29 [string] = Action3
		30 [EnumItem] = Enum.AnimationPriority.Action3
		31 [string] = Priority
		32 [string] = Play
		33 [string] = Ball
		34 [string] = Shoot
		35 [string] = BicycleState
		36 [string] = task
		37 [string] = delay
		39 [number] = 0.65
		40 [number] = 0.85

====================================================================================================

Function Dump: findLandingPosition

Function Upvalues: findLandingPosition

Function Constants: findLandingPosition
		1 [string] = workspace
		2 [Instance] = Workspace
		3 [string] = Football
		4 [string] = FindFirstChild
		5 [number] = 60
		6 [string] = Gravity
		7 [number] = 20
		8 [string] = Mass
		9 [number] = 75
		10 [number] = 0.5
		11 [string] = Y
		12 [string] = math
		13 [string] = sqrt
		15 [string] = x
		16 [string] = Z
		17 [string] = Vector3
		18 [string] = new

====================================================================================================

Function Dump: ClampDirection

Function Upvalues: ClampDirection

Function Constants: ClampDirection
		1 [string] = math
		2 [string] = rad
		4 [string] = Unit
		5 [string] = Dot
		6 [string] = clamp
		8 [string] = acos
		10 [string] = Cross
		11 [string] = Magnitude
		12 [number] = 0
		13 [Vector3] = 1, 0, 0
		14 [Vector3] = 0, 1, 0
		15 [string] = CFrame
		16 [string] = fromAxisAngle

====================================================================================================

Function Dump: DragBall

Function Upvalues: DragBall
		1 [Instance] = Run Service
		2 [Instance] = ReplicatedStorage

Function Constants: DragBall
		1 [string] = Drag
		2 [string] = Disconnect
		3 [number] = 0.999
		4 [string] = Heartbeat
		5 [string] = Connect

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = JapanFALOL2
		2 [Instance] = UserInputService

Function Constants: Unknown Name
		1 [string] = Character
		2 [string] = Values
		3 [string] = HasBall
		4 [string] = Value
		5 [string] = TouchEnabled
		6 [string] = PlayerGui
		7 [string] = Mobile
		8 [string] = Enabled
		9 [string] = NoBall
		10 [string] = Visible
		11 [string] = Ball

====================================================================================================

Function Dump: Shoot

Function Upvalues: Shoot
		1 [Instance] = HumanoidRootPart
		2 [number] = 1757113768.1592174
		3 [Instance] = JapanFALOL2
		4 [Instance] = JapanFALOL2
		5 [Instance] = TweenService
		6 [Instance] = Humanoid
		7 [Instance] = Debris
		8 [Instance] = ReplicatedStorage
		9 [number] = 50
		10 [Instance] = Camera
		11 [boolean] = false
		12 [number] = 0
		13 [function] = getActiveFlowStats
		14 [table] (Recursive table detected)
		15 [Instance] = Run Service
		16 [table] (Recursive table detected)

Function Constants: Shoot
		1 [string] = AssemblyRootPart
		2 [string] = tick
		4 [string] = ShootTrove
		5 [string] = Destroy
		6 [number] = 1
		7 [string] = StatesController
		8 [string] = States
		9 [string] = TimeSpentRunning
		10 [string] = HoldingShoot
		11 [string] = Values
		12 [string] = HasBall
		13 [string] = Value
		14 [string] = Animations
		15 [string] = StopAnims
		16 [string] = Shots
		17 [string] = Shoot
		18 [string] = AdjustSpeed
		19 [string] = Goalie
		20 [string] = IsInPenalty
		21 [string] = Movement
		22 [string] = ThrowBall
		23 [string] = Enum
		24 [string] = AnimationPriority
		25 [string] = Action3
		26 [EnumItem] = Enum.AnimationPriority.Action3
		27 [string] = Priority
		28 [string] = Play
		29 [number] = 1.35
		30 [string] = Ball
		31 [string] = PlayerGui
		32 [string] = ForceBar
		33 [string] = Enabled
		34 [string] = TweenInfo
		35 [string] = new
		37 [number] = 0.25
		38 [string] = EasingStyle
		39 [string] = Sine
		40 [EnumItem] = Enum.EasingStyle.Sine
		41 [string] = EasingDirection
		42 [string] = Out
		43 [EnumItem] = Enum.EasingDirection.Out
		44 [string] = CameraOffset
		46 [Vector3] = 1.25, 1.5, 0
		47 [string] = Create
		48 [string] = AddItem
		49 [string] = GetDescendants
		50 [string] = pairs
		52 [string] = Name
		53 [string] = Football
		54 [string] = TrajectoryLine
		55 [string] = DiveHitbox
		56 [string] = GHitbox
		57 [string] = Activate
		58 [string] = Assets
		59 [string] = Vfx
		60 [string] = FindFirstChild
		61 [string] = ball
		62 [string] = match
		63 [string] = Hitbox
		64 [string] = Parent
		65 [string] = BasePart
		66 [string] = IsA
		67 [string] = HumanoidRootPart
		68 [string] = Handle
		69 [string] = VFXPart
		70 [string] = HasTag
		71 [string] = Invis
		72 [string] = GetAttribute
		73 [number] = 0.45
		74 [string] = Transparency
		75 [string] = BallService
		76 [string] = SetIsHoldingShoot
		77 [string] = Fire
		78 [string] = Add
		79 [string] = Heartbeat
		80 [string] = Connect

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = Players
		3 [boolean] = false
		4 [Instance] = HumanoidRootPart
		5 [boolean] = false
		6 [Instance] = Camera
		7 [Instance] = Humanoid
		8 [table] (Recursive table detected)
		9 [Instance] = JapanFALOL2
		10 [Instance] = ReplicatedStorage
		11 [table] (Recursive table detected)
		12 [number] = 50
		13 [Instance] = Run Service

Function Constants: Unknown Name
		1 [string] = CS
		2 [string] = Disconnect
		3 [number] = 0.3
		4 [string] = Before
		5 [string] = FindFirstChild
		6 [string] = Value
		7 [string] = GetPlayerFromCharacter
		8 [string] = PlayerStats
		9 [string] = InFlow
		10 [string] = Flow
		11 [string] = Ice
		12 [number] = 1.15
		13 [string] = InAwakening
		14 [string] = Style
		15 [string] = Hiori
		16 [number] = 1.2
		17 [string] = StatesController
		18 [string] = ShotPowerMultiplier
		19 [string] = CFrame
		20 [string] = LookVector
		21 [Vector3] = 0, 0.5, 0
		22 [string] = AssemblyLinearVelocity
		23 [number] = 120
		24 [string] = X
		25 [number] = 0.25
		26 [string] = Y
		27 [string] = Z
		28 [string] = Vector3
		29 [string] = new
		31 [number] = -0.05
		32 [number] = -0.5
		33 [string] = BallService
		34 [string] = HasShot
		35 [string] = Fire
		36 [string] = GetState
		37 [string] = Enum
		38 [string] = HumanoidStateType
		39 [string] = Jumping
		40 [EnumItem] = Enum.HumanoidStateType.Jumping
		41 [string] = Freefall
		42 [EnumItem] = Enum.HumanoidStateType.Freefall
		43 [string] = Anchored
		44 [string] = GetCurrentStyle
		45 [string] = Shidou
		46 [string] = States
		47 [string] = Ability
		48 [string] = Animations
		49 [string] = Movement
		50 [string] = Header
		51 [string] = AnimationPriority
		52 [string] = Action3
		53 [EnumItem] = Enum.AnimationPriority.Action3
		54 [string] = Priority
		55 [string] = Play
		56 [string] = Demon Wings
		57 [string] = Gagamaru
		58 [string] = VfxSpawn
		59 [string] = Gagamaru header
		60 [string] = FireServer
		61 [string] = ShidouHeader
		62 [number] = 1.4
		63 [string] = Destructive Impulses
		64 [string] = FindCurveDirection
		65 [number] = 2.75
		66 [number] = 2
		67 [string] = Heartbeat
		68 [string] = Connect
		69 [string] = NEL Rin
		70 [number] = 3.5
		71 [string] = DragBall

====================================================================================================

Function Dump: Slide

Function Upvalues: Slide
		1 [Instance] = HumanoidRootPart
		2 [Instance] = JapanFALOL2
		3 [table] (Recursive table detected)
		4 [number] = 1757113698.723119
		5 [Instance] = JapanFALOL2
		6 [function] = getActiveFlowStats
		7 [table] (Recursive table detected)
		8 [Instance] = ReplicatedStorage
		9 [Instance] = Camera
		10 [number] = 1
		11 [table] (Recursive table detected)
		12 [Instance] = Run Service
		13 [function] = ClampDirection

Function Constants: Slide
		1 [string] = AssemblyRootPart
		2 [string] = Values
		3 [string] = Sliding
		4 [string] = Value
		5 [string] = Animations
		6 [string] = Movement
		7 [string] = Slide
		8 [string] = IsPlaying
		9 [string] = HasBall
		10 [string] = Dribbling
		11 [string] = Dribbles
		12 [string] = GetCurrentStyle
		13 [string] = HoldingShoot
		14 [string] = tick
		16 [string] = PlayerStats
		17 [string] = Stamina
		18 [string] = SlideTrove
		19 [string] = Destroy
		20 [string] = StaminaService
		21 [string] = DecreaseStamina
		22 [string] = Fire
		23 [string] = StopAnims
		24 [string] = Enum
		25 [string] = AnimationPriority
		26 [string] = Action2
		27 [EnumItem] = Enum.AnimationPriority.Action2
		28 [string] = Priority
		29 [string] = Play
		30 [number] = 1.35
		31 [string] = AdjustSpeed
		32 [string] = StatesController
		33 [string] = States
		34 [string] = TimeSpentRunning
		35 [string] = Destructive Impulses
		36 [number] = 1.5
		37 [string] = Stats
		38 [string] = SlideCooldown
		39 [number] = 3
		40 [string] = new
		41 [string] = Instance
		43 [string] = BodyVelocity
		44 [Vector3] = inf, inf, inf
		45 [string] = MaxForce
		46 [string] = Parent
		47 [string] = Add
		48 [string] = BodyGyro
		49 [string] = P
		50 [string] = D
		51 [string] = MaxTorque
		52 [string] = CFrame
		53 [string] = LookVector
		54 [string] = Football
		55 [string] = Position
		56 [string] = Unit
		57 [string] = Dot
		58 [string] = math
		59 [string] = acos
		61 [number] = 1.5707963267948966
		62 [number] = 1.9039955476301778
		63 [Vector3] = 1, 0, 1
		64 [string] = Loki
		65 [string] = Running
		66 [number] = 72.5
		67 [string] = Godspeed
		68 [number] = 7
		69 [string] = AbilityController
		70 [string] = Mode
		71 [string] = Defensive Mode
		72 [string] = NEL Reo
		73 [string] = Flow
		74 [string] = Crow
		75 [string] = InFlow
		76 [Vector3] = 0, 0, 0
		77 [string] = workspace
		78 [Instance] = Workspace
		79 [number] = 1
		80 [string] = Char
		81 [string] = HumanoidRootPart
		82 [string] = AssemblyLinearVelocity
		83 [string] = Y
		84 [string] = Magnitude
		85 [string] = X
		86 [string] = Z
		87 [string] = Vector3
		89 [string] = BallService
		90 [string] = string
		91 [string] = gsub
		93 [string] = game
		94 [Instance] = Ugc
		95 [string] = JobId
		96 [string] = -
		97 [string] = 
		98 [string] = tostring
		100 [string] = GetController
		101 [string] = CameraController
		102 [string] = Heartbeat
		103 [string] = Connect
		104 [string] = task
		105 [string] = delay

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [function] = getActiveFlowStats
		3 [Instance] = JapanFALOL2
		4 [Instance] = Players
		5 [table] (Recursive table detected)
		6 [Instance] = HumanoidRootPart
		7 [Instance] = JapanFALOL2
		8 [table] (Recursive table detected)
		9 [Instance] = Run Service
		10 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = Closest
		2 [string] = GetPlayerFromCharacter
		3 [string] = Style
		4 [string] = GetAttribute
		5 [string] = PlayerStats
		6 [string] = Value
		7 [string] = McNagi Fryshiro
		8 [string] = NEL Nagi
		9 [string] = Stats
		10 [string] = AccuratePassesTime
		11 [string] = Sae
		12 [number] = 0.5
		13 [number] = 0.4
		14 [string] = NEL Reo
		15 [string] = BallFollowPlayer
		16 [string] = PassArc
		17 [number] = 0.1
		18 [string] = HumanoidRootPart
		19 [string] = AssemblyLinearVelocity
		20 [string] = X
		21 [string] = Z
		22 [string] = Vector3
		23 [string] = new
		25 [string] = Position
		26 [string] = Unit
		27 [number] = 1.85
		28 [string] = Magnitude
		29 [string] = DartboardLens
		30 [number] = 0.15
		31 [string] = math
		32 [string] = clamp
		34 [string] = PassPowerMultiplier
		35 [string] = InFlow
		36 [string] = Flow
		37 [string] = Ice
		38 [number] = 1.25
		39 [string] = CFrame
		40 [string] = RightVector
		41 [string] = DragBall
		42 [string] = tick
		44 [string] = PassTrove
		45 [string] = Destroy
		46 [string] = Heartbeat
		47 [string] = Connect

====================================================================================================

Function Dump: KnitInit

Function Upvalues: KnitInit
		1 [table] (Recursive table detected)
		2 [table] (Recursive table detected)
		3 [table] (Recursive table detected)
		4 [number] = 50
		5 [Instance] = JapanFALOL2
		6 [Instance] = HumanoidRootPart
		7 [Instance] = JapanFALOL2
		8 [Instance] = Humanoid
		9 [Instance] = Camera
		10 [boolean] = false

Function Constants: KnitInit
		1 [string] = GetController
		2 [string] = AbilityController
		3 [string] = new
		4 [string] = BaseTrove
		5 [string] = NewTrove
		6 [string] = HoldingShoot
		7 [string] = PlayerGui
		8 [string] = ForceBar
		9 [string] = Adornee
		10 [string] = Running
		11 [string] = WaitForChild
		12 [string] = Volume
		13 [string] = CharacterAdded
		14 [string] = Connect
		15 [string] = game
		16 [Instance] = Ugc
		17 [string] = Players
		18 [string] = PlayerRemoving
		19 [string] = ResetChecks

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Left
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Right
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = RequestCR
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Request
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Emote
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Dive
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shiftlock
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Dribble
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Flow
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Slide
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shoot
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Run
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Awaken
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Emote
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shiftlock
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Dribble
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Pass
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Bicycle
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Run
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Shoot
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Flow
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [table] (Recursive table detected)
		2 [Instance] = JapanFALOL2
		3 [Instance] = JapanFALOL2
		4 [Instance] = Awaken
		5 [number] = 1757113698.7306278
		6 [Instance] = ReplicatedStorage
		7 [function] = canRequestCR

Function Constants: Unknown Name
		1 [string] = Camera
		2 [string] = Cutscene
		3 [string] = Team
		4 [string] = game
		5 [Instance] = Ugc
		6 [string] = Teams
		7 [string] = Visitor
		8 [string] = IsRagdoll
		9 [string] = Value
		10 [string] = StatesController
		11 [string] = States
		12 [string] = Ability
		13 [string] = Values
		14 [string] = Goalie
		15 [string] = IsInPenalty
		16 [string] = Name
		17 [string] = Run
		18 [string] = Running
		19 [string] = Bicycle
		20 [string] = Pass
		21 [string] = Dribble
		22 [string] = Slide
		23 [string] = Awaken
		24 [string] = Awakening
		25 [string] = Shoot
		26 [string] = HoldingShoot
		27 [string] = Request
		28 [string] = tick
		30 [number] = 3
		31 [string] = Effects
		32 [string] = Vfx
		33 [string] = Char
		35 [string] = Fire
		36 [string] = Animations
		37 [string] = StopAnims
		38 [string] = Movement
		39 [string] = Enum
		40 [string] = AnimationPriority
		41 [string] = Action2
		42 [EnumItem] = Enum.AnimationPriority.Action2
		43 [string] = Priority
		44 [string] = Play
		45 [string] = RequestCR
		46 [string] = PassCR

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = JapanFALOL2
		2 [Instance] = JapanFALOL2
		3 [table] (Recursive table detected)
		4 [Instance] = Players
		5 [Instance] = Run Service
		6 [Instance] = GuiService
		7 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = Values
		2 [string] = WaitForChild
		3 [string] = Football
		4 [string] = FindFirstChild
		5 [string] = PlayerGui
		6 [string] = Mobile
		7 [string] = NoBall
		8 [string] = Visible
		9 [string] = Ball
		10 [string] = HasBall
		11 [string] = Value
		12 [string] = Closest
		13 [string] = Highlight
		14 [string] = Destroy
		15 [string] = IsRagdoll
		16 [string] = GetPlayers
		17 [string] = pairs
		19 [string] = Character
		20 [string] = Team
		21 [string] = table
		22 [string] = insert
		24 [string] = IsStudio
		25 [string] = workspace
		26 [Instance] = Workspace
		27 [string] = PassRig
		28 [string] = HumanoidRootPart
		29 [string] = CurrentCamera
		30 [string] = Position
		31 [string] = WorldToScreenPoint
		32 [string] = Vector2
		33 [string] = new
		35 [string] = X
		36 [string] = Y
		37 [number] = 2
		38 [string] = ViewportSize
		39 [string] = GetGuiInset
		40 [string] = Magnitude
		41 [string] = Parent
		42 [number] = 0.5
		43 [string] = OutlineTransparency
		44 [string] = FillTransparency

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [Instance] = JapanFALOL2
		2 [Instance] = Humanoid
		3 [Instance] = HumanoidRootPart
		4 [Instance] = JapanFALOL2
		5 [Instance] = Camera
		6 [boolean] = false
		7 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = Humanoid
		2 [string] = WaitForChild
		3 [string] = HumanoidRootPart
		4 [string] = PlayerGui
		5 [string] = ForceBar
		6 [string] = Adornee
		7 [string] = Enum
		8 [string] = CameraType
		9 [string] = Custom
		10 [EnumItem] = Enum.CameraType.Custom
		11 [string] = CameraSubject
		12 [string] = ResetChecks
		13 [string] = Running
		14 [string] = Volume

====================================================================================================

Function Dump: Unknown Name

Function Upvalues: Unknown Name
		1 [number] = 1757113804.988643
		2 [Instance] = JapanFALOL2
		3 [Instance] = HumanoidRootPart
		4 [Instance] = ReplicatedStorage
		5 [number] = 1757113804.788756
		6 [Instance] = JapanFALOL2
		7 [boolean] = false
		8 [table] (Recursive table detected)

Function Constants: Unknown Name
		1 [string] = tick
		3 [number] = 0.2
		4 [string] = Football
		5 [string] = Value
		6 [string] = Char
		7 [string] = FindFirstChild
		8 [string] = Values
		9 [string] = Goalie
		10 [string] = IsInSmallBox
		11 [string] = Team
		12 [string] = game
		13 [Instance] = Ugc
		14 [string] = Teams
		15 [string] = Visitor
		16 [number] = 10
		17 [string] = HasBall
		18 [string] = BallService
		19 [string] = ResetToMid
		20 [string] = Fire

====================================================================================================

Function Dump: setupClientBall

Function Upvalues: setupClientBall
		1 [Instance] = Players
		2 [table] (Recursive table detected)
		3 [Instance] = ReplicatedStorage
		4 [table] (Recursive table detected)
		5 [Instance] = ReplicatedStorage
		6 [table] (Recursive table detected)
		7 [table] (Recursive table detected)
		8 [Instance] = Debris

Function Constants: setupClientBall
		1 [string] = Char
		2 [string] = WaitForChild
		3 [string] = Changed
		4 [string] = Connect
		5 [string] = Football
		6 [string] = Value
		7 [string] = BallAnims
		8 [string] = BALL
		9 [string] = Touched

====================================================================================================
]]
